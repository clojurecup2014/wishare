if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}

var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2356";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__6091__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__6091 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__6091__delegate.call(this, args);
    };
    G__6091.cljs$lang$maxFixedArity = 0;
    G__6091.cljs$lang$applyTo = function(arglist__6092) {
      var args = cljs.core.seq(arglist__6092);
      return G__6091__delegate(args);
    };
    G__6091.cljs$core$IFn$_invoke$arity$variadic = G__6091__delegate;
    return G__6091;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3627__auto__ = ty;
    if (cljs.core.truth_(and__3627__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3627__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ty);
  }
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4508__auto___6093 = len;
  var i_6094 = 0;
  while (true) {
    if (i_6094 < n__4508__auto___6093) {
      new_arr[i_6094] = arr[i_6094];
      var G__6095 = i_6094 + 1;
      i_6094 = G__6095;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__6096__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__6096 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6096__delegate.call(this, array, i, idxs);
    };
    G__6096.cljs$lang$maxFixedArity = 2;
    G__6096.cljs$lang$applyTo = function(arglist__6097) {
      var array = cljs.core.first(arglist__6097);
      arglist__6097 = cljs.core.next(arglist__6097);
      var i = cljs.core.first(arglist__6097);
      var idxs = cljs.core.rest(arglist__6097);
      return G__6096__delegate(array, i, idxs);
    };
    G__6096.cljs$core$IFn$_invoke$arity$variadic = G__6096__delegate;
    return G__6096;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__6098__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__6098 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6098__delegate.call(this, array, idx, idx2, idxv);
    };
    G__6098.cljs$lang$maxFixedArity = 3;
    G__6098.cljs$lang$applyTo = function(arglist__6099) {
      var array = cljs.core.first(arglist__6099);
      arglist__6099 = cljs.core.next(arglist__6099);
      var idx = cljs.core.first(arglist__6099);
      arglist__6099 = cljs.core.next(arglist__6099);
      var idx2 = cljs.core.first(arglist__6099);
      var idxv = cljs.core.rest(arglist__6099);
      return G__6098__delegate(array, idx, idx2, idxv);
    };
    G__6098.cljs$core$IFn$_invoke$arity$variadic = G__6098__delegate;
    return G__6098;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.Fn = function() {
  var obj6101 = {};
  return obj6101;
}();
cljs.core.IFn = function() {
  var obj6103 = {};
  return obj6103;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    }
  };
  var _invoke__22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$22;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return _invoke__22.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  _invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj6105 = {};
  return obj6105;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3627__auto__ = value;
    if (and__3627__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4275__auto__ = value == null ? null : value;
    return function() {
      var or__3639__auto__ = cljs.core._clone[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._clone["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj6107 = {};
  return obj6107;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._count[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._count["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj6109 = {};
  return obj6109;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._empty[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._empty["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj6111 = {};
  return obj6111;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._conj[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._conj["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj6113 = {};
  return obj6113;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3627__auto__ = coll;
      if (and__3627__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4275__auto__ = coll == null ? null : coll;
      return function() {
        var or__3639__auto__ = cljs.core._nth[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._nth["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3627__auto__ = coll;
      if (and__3627__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4275__auto__ = coll == null ? null : coll;
      return function() {
        var or__3639__auto__ = cljs.core._nth[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._nth["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj6115 = {};
  return obj6115;
}();
cljs.core.ISeq = function() {
  var obj6117 = {};
  return obj6117;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._first[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._first["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._rest[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._rest["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj6119 = {};
  return obj6119;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._next[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._next["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj6121 = {};
  return obj6121;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3627__auto__ = o;
      if (and__3627__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4275__auto__ = o == null ? null : o;
      return function() {
        var or__3639__auto__ = cljs.core._lookup[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._lookup["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3627__auto__ = o;
      if (and__3627__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4275__auto__ = o == null ? null : o;
      return function() {
        var or__3639__auto__ = cljs.core._lookup[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._lookup["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj6123 = {};
  return obj6123;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._assoc[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._assoc["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj6125 = {};
  return obj6125;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._dissoc[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._dissoc["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj6127 = {};
  return obj6127;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._key[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._key["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._val[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._val["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj6129 = {};
  return obj6129;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._disjoin[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._disjoin["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj6131 = {};
  return obj6131;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._peek[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._peek["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._pop[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._pop["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj6133 = {};
  return obj6133;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._assoc_n[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj6135 = {};
  return obj6135;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3627__auto__ = o;
    if (and__3627__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4275__auto__ = o == null ? null : o;
    return function() {
      var or__3639__auto__ = cljs.core._deref[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._deref["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj6137 = {};
  return obj6137;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3627__auto__ = o;
    if (and__3627__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4275__auto__ = o == null ? null : o;
    return function() {
      var or__3639__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj6139 = {};
  return obj6139;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3627__auto__ = o;
    if (and__3627__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4275__auto__ = o == null ? null : o;
    return function() {
      var or__3639__auto__ = cljs.core._meta[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._meta["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj6141 = {};
  return obj6141;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3627__auto__ = o;
    if (and__3627__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4275__auto__ = o == null ? null : o;
    return function() {
      var or__3639__auto__ = cljs.core._with_meta[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._with_meta["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj6143 = {};
  return obj6143;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3627__auto__ = coll;
      if (and__3627__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4275__auto__ = coll == null ? null : coll;
      return function() {
        var or__3639__auto__ = cljs.core._reduce[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._reduce["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3627__auto__ = coll;
      if (and__3627__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4275__auto__ = coll == null ? null : coll;
      return function() {
        var or__3639__auto__ = cljs.core._reduce[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._reduce["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj6145 = {};
  return obj6145;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj6147 = {};
  return obj6147;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3627__auto__ = o;
    if (and__3627__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4275__auto__ = o == null ? null : o;
    return function() {
      var or__3639__auto__ = cljs.core._equiv[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._equiv["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj6149 = {};
  return obj6149;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3627__auto__ = o;
    if (and__3627__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4275__auto__ = o == null ? null : o;
    return function() {
      var or__3639__auto__ = cljs.core._hash[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._hash["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj6151 = {};
  return obj6151;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3627__auto__ = o;
    if (and__3627__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4275__auto__ = o == null ? null : o;
    return function() {
      var or__3639__auto__ = cljs.core._seq[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._seq["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj6153 = {};
  return obj6153;
}();
cljs.core.IList = function() {
  var obj6155 = {};
  return obj6155;
}();
cljs.core.IRecord = function() {
  var obj6157 = {};
  return obj6157;
}();
cljs.core.IReversible = function() {
  var obj6159 = {};
  return obj6159;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._rseq[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._rseq["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj6161 = {};
  return obj6161;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._entry_key[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._entry_key["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._comparator[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._comparator["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj6163 = {};
  return obj6163;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3627__auto__ = writer;
    if (and__3627__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4275__auto__ = writer == null ? null : writer;
    return function() {
      var or__3639__auto__ = cljs.core._write[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._write["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3627__auto__ = writer;
    if (and__3627__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4275__auto__ = writer == null ? null : writer;
    return function() {
      var or__3639__auto__ = cljs.core._flush[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._flush["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj6165 = {};
  return obj6165;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3627__auto__ = o;
    if (and__3627__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4275__auto__ = o == null ? null : o;
    return function() {
      var or__3639__auto__ = cljs.core._pr_writer[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj6167 = {};
  return obj6167;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3627__auto__ = d;
    if (and__3627__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4275__auto__ = d == null ? null : d;
    return function() {
      var or__3639__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj6169 = {};
  return obj6169;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3627__auto__ = this$;
    if (and__3627__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4275__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3639__auto__ = cljs.core._notify_watches[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3627__auto__ = this$;
    if (and__3627__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4275__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3639__auto__ = cljs.core._add_watch[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._add_watch["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3627__auto__ = this$;
    if (and__3627__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4275__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3639__auto__ = cljs.core._remove_watch[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj6171 = {};
  return obj6171;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._as_transient[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._as_transient["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj6173 = {};
  return obj6173;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3627__auto__ = tcoll;
    if (and__3627__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4275__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3639__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3627__auto__ = tcoll;
    if (and__3627__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4275__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3639__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj6175 = {};
  return obj6175;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3627__auto__ = tcoll;
    if (and__3627__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4275__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3639__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj6177 = {};
  return obj6177;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3627__auto__ = tcoll;
    if (and__3627__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4275__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3639__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj6179 = {};
  return obj6179;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3627__auto__ = tcoll;
    if (and__3627__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4275__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3639__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3627__auto__ = tcoll;
    if (and__3627__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4275__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3639__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj6181 = {};
  return obj6181;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3627__auto__ = tcoll;
    if (and__3627__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4275__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3639__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj6183 = {};
  return obj6183;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3627__auto__ = x;
    if (and__3627__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4275__auto__ = x == null ? null : x;
    return function() {
      var or__3639__auto__ = cljs.core._compare[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._compare["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj6185 = {};
  return obj6185;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._drop_first[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._drop_first["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj6187 = {};
  return obj6187;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._chunked_first[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj6189 = {};
  return obj6189;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._chunked_next[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj6191 = {};
  return obj6191;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3627__auto__ = x;
    if (and__3627__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4275__auto__ = x == null ? null : x;
    return function() {
      var or__3639__auto__ = cljs.core._name[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._name["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3627__auto__ = x;
    if (and__3627__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4275__auto__ = x == null ? null : x;
    return function() {
      var or__3639__auto__ = cljs.core._namespace[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._namespace["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj6193 = {};
  return obj6193;
}();
cljs.core.IReset = function() {
  var obj6195 = {};
  return obj6195;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3627__auto__ = o;
    if (and__3627__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4275__auto__ = o == null ? null : o;
    return function() {
      var or__3639__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj6197 = {};
  return obj6197;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3627__auto__ = o;
      if (and__3627__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4275__auto__ = o == null ? null : o;
      return function() {
        var or__3639__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3627__auto__ = o;
      if (and__3627__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4275__auto__ = o == null ? null : o;
      return function() {
        var or__3639__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3627__auto__ = o;
      if (and__3627__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4275__auto__ = o == null ? null : o;
      return function() {
        var or__3639__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3627__auto__ = o;
      if (and__3627__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4275__auto__ = o == null ? null : o;
      return function() {
        var or__3639__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.IIterable = function() {
  var obj6199 = {};
  return obj6199;
}();
cljs.core._iterator = function _iterator(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._iterator[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._iterator["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul.call(null, 4294967295, 5) === 0)) {
  cljs.core.imul = function imul(a, b) {
    return Math.imul.call(null, a, b);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, cljs.core.imul.call(null, k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul.call(null, h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul.call(null, h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1.call(null, in$);
    var h1 = cljs.core.m3_mix_H1.call(null, cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix.call(null, h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__6200 = i + 2;
        var G__6201 = cljs.core.m3_mix_H1.call(null, h1, cljs.core.m3_mix_K1.call(null, in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__6200;
        h1 = G__6201;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1.call(null, in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix.call(null, h1__$1, cljs.core.imul.call(null, 2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj6203 = {};
  return obj6203;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__6204 = i + 1;
          var G__6205 = cljs.core.imul.call(null, 31, hash) + s.charCodeAt(i);
          i = G__6204;
          hash = G__6205;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_.call(null, k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj6209 = {};
      return obj6209;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__6211 = o;
    if (G__6211) {
      var bit__4295__auto__ = G__6211.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4295__auto__ || G__6211.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor.call(null, o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int.call(null, cljs.core.hash_string.call(null, o));
          } else {
            if (o == null) {
              return 0;
            } else {
              return cljs.core._hash.call(null, o);
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.m3_hash_unencoded_chars.call(null, sym.name), cljs.core.hash_string.call(null, sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3627__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3627__auto__) {
        return b.ns;
      } else {
        return and__3627__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if (nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        return cljs.core.compare.call(null, a.name, b.name);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Symbol");
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4050__auto__ = self__._hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__6213 = null;
  var G__6213__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__6213__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__6213 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6213__2.call(this, self__, coll);
      case 3:
        return G__6213__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6213.cljs$core$IFn$_invoke$arity$2 = G__6213__2;
  G__6213.cljs$core$IFn$_invoke$arity$3 = G__6213__3;
  return G__6213;
}();
cljs.core.Symbol.prototype.apply = function(self__, args6212) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6212)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.iterable_QMARK_ = function iterable_QMARK_(x) {
  var G__6215 = x;
  if (G__6215) {
    var bit__4302__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3639__auto__ = bit__4302__auto__;
      if (cljs.core.truth_(or__3639__auto__)) {
        return or__3639__auto__;
      } else {
        return G__6215.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__6215.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIterable, G__6215);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIterable, G__6215);
  }
};
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__6217 = value;
  if (G__6217) {
    var bit__4302__auto__ = G__6217.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4302__auto__ || G__6217.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__6217.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__6217);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__6217);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__6219 = coll;
      if (G__6219) {
        var bit__4295__auto__ = G__6219.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4295__auto__ || G__6219.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            throw new Error("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll) + " is not ISeqable");
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__6221 = coll;
      if (G__6221) {
        var bit__4295__auto__ = G__6221.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4295__auto__ || G__6221.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__6223 = coll;
      if (G__6223) {
        var bit__4295__auto__ = G__6223.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4295__auto__ || G__6223.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__6225 = coll;
      if (G__6225) {
        var bit__4295__auto__ = G__6225.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4295__auto__ || G__6225.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__6226__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__6227 = y;
            var G__6228 = cljs.core.first.call(null, more);
            var G__6229 = cljs.core.next.call(null, more);
            x = G__6227;
            y = G__6228;
            more = G__6229;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6226 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6226__delegate.call(this, x, y, more);
    };
    G__6226.cljs$lang$maxFixedArity = 2;
    G__6226.cljs$lang$applyTo = function(arglist__6230) {
      var x = cljs.core.first(arglist__6230);
      arglist__6230 = cljs.core.next(arglist__6230);
      var y = cljs.core.first(arglist__6230);
      var more = cljs.core.rest(arglist__6230);
      return G__6226__delegate(x, y, more);
    };
    G__6226.cljs$core$IFn$_invoke$arity$variadic = G__6226__delegate;
    return G__6226;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1.call(null, hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1.call(null, h1, k1);
  return cljs.core.m3_fmix.call(null, h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__6231 = n + 1;
      var G__6232 = cljs.core.imul.call(null, 31, hash_code) + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__6233 = cljs.core.next.call(null, coll__$1);
      n = G__6231;
      hash_code = G__6232;
      coll__$1 = G__6233;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__6234 = n + 1;
      var G__6235 = hash_code + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__6236 = cljs.core.next.call(null, coll__$1);
      n = G__6234;
      hash_code = G__6235;
      coll__$1 = G__6236;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Reduced");
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__6237 = nval;
            var G__6238 = n + 1;
            val = G__6237;
            n = G__6238;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__6239 = nval;
          var G__6240 = n + 1;
          val__$1 = G__6239;
          n = G__6240;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__6241 = nval;
          var G__6242 = n + 1;
          val__$1 = G__6241;
          n = G__6242;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__6243 = nval;
            var G__6244 = n + 1;
            val = G__6243;
            n = G__6244;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__6245 = nval;
          var G__6246 = n + 1;
          val__$1 = G__6245;
          n = G__6246;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__6247 = nval;
          var G__6248 = n + 1;
          val__$1 = G__6247;
          n = G__6248;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__6250 = x;
  if (G__6250) {
    var bit__4302__auto__ = G__6250.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4302__auto__ || G__6250.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__6250.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__6250);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__6250);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__6252 = x;
  if (G__6252) {
    var bit__4302__auto__ = G__6252.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4302__auto__ || G__6252.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__6252.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__6252);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__6252);
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/IndexedSeq");
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/RSeq");
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__6253 = sn;
      s = G__6253;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__6254__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__6255 = conj.call(null, coll, x);
          var G__6256 = cljs.core.first.call(null, xs);
          var G__6257 = cljs.core.next.call(null, xs);
          coll = G__6255;
          x = G__6256;
          xs = G__6257;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__6254 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6254__delegate.call(this, coll, x, xs);
    };
    G__6254.cljs$lang$maxFixedArity = 2;
    G__6254.cljs$lang$applyTo = function(arglist__6258) {
      var coll = cljs.core.first(arglist__6258);
      arglist__6258 = cljs.core.next(arglist__6258);
      var x = cljs.core.first(arglist__6258);
      var xs = cljs.core.rest(arglist__6258);
      return G__6254__delegate(coll, x, xs);
    };
    G__6254.cljs$core$IFn$_invoke$arity$variadic = G__6254__delegate;
    return G__6254;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__6259 = cljs.core.next.call(null, s);
      var G__6260 = acc + 1;
      s = G__6259;
      acc = G__6260;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__6262 = coll;
      if (G__6262) {
        var bit__4295__auto__ = G__6262.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4295__auto__ || G__6262.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            return cljs.core.accumulating_seq_count.call(null, coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__6263 = cljs.core.next.call(null, coll);
              var G__6264 = n - 1;
              coll = G__6263;
              n = G__6264;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__6265 = cljs.core.next.call(null, coll);
              var G__6266 = n - 1;
              var G__6267 = not_found;
              coll = G__6265;
              n = G__6266;
              not_found = G__6267;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__6272 = coll;
          if (G__6272) {
            var bit__4295__auto__ = G__6272.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4295__auto__ || G__6272.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__6273 = coll;
                  if (G__6273) {
                    var bit__4302__auto__ = G__6273.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4302__auto__ || G__6273.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__6273.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__6273);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__6273);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  throw new Error("nth not supported on this type " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll))));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__6274 = coll;
          if (G__6274) {
            var bit__4295__auto__ = G__6274.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4295__auto__ || G__6274.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__6275 = coll;
                  if (G__6275) {
                    var bit__4302__auto__ = G__6275.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4302__auto__ || G__6275.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__6275.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__6275);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__6275);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  throw new Error("nth not supported on this type " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll))));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__6278 = o;
        if (G__6278) {
          var bit__4295__auto__ = G__6278.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4295__auto__ || G__6278.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__6279 = o;
        if (G__6279) {
          var bit__4295__auto__ = G__6279.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4295__auto__ || G__6279.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__6280__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__6281 = ret;
          var G__6282 = cljs.core.first.call(null, kvs);
          var G__6283 = cljs.core.second.call(null, kvs);
          var G__6284 = cljs.core.nnext.call(null, kvs);
          coll = G__6281;
          k = G__6282;
          v = G__6283;
          kvs = G__6284;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__6280 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6280__delegate.call(this, coll, k, v, kvs);
    };
    G__6280.cljs$lang$maxFixedArity = 3;
    G__6280.cljs$lang$applyTo = function(arglist__6285) {
      var coll = cljs.core.first(arglist__6285);
      arglist__6285 = cljs.core.next(arglist__6285);
      var k = cljs.core.first(arglist__6285);
      arglist__6285 = cljs.core.next(arglist__6285);
      var v = cljs.core.first(arglist__6285);
      var kvs = cljs.core.rest(arglist__6285);
      return G__6280__delegate(coll, k, v, kvs);
    };
    G__6280.cljs$core$IFn$_invoke$arity$variadic = G__6280__delegate;
    return G__6280;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__6286__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__6287 = ret;
            var G__6288 = cljs.core.first.call(null, ks);
            var G__6289 = cljs.core.next.call(null, ks);
            coll = G__6287;
            k = G__6288;
            ks = G__6289;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__6286 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6286__delegate.call(this, coll, k, ks);
    };
    G__6286.cljs$lang$maxFixedArity = 2;
    G__6286.cljs$lang$applyTo = function(arglist__6290) {
      var coll = cljs.core.first(arglist__6290);
      arglist__6290 = cljs.core.next(arglist__6290);
      var k = cljs.core.first(arglist__6290);
      var ks = cljs.core.rest(arglist__6290);
      return G__6286__delegate(coll, k, ks);
    };
    G__6286.cljs$core$IFn$_invoke$arity$variadic = G__6286__delegate;
    return G__6286;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3639__auto__ = goog.isFunction(f);
  if (or__3639__auto__) {
    return or__3639__auto__;
  } else {
    var G__6294 = f;
    if (G__6294) {
      var bit__4302__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3639__auto____$1 = bit__4302__auto__;
        if (cljs.core.truth_(or__3639__auto____$1)) {
          return or__3639__auto____$1;
        } else {
          return G__6294.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__6294.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__6294);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__6294);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/MetaFn");
};
cljs.core.MetaFn.prototype.call = function() {
  var G__6296 = null;
  var G__6296__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null);
  };
  var G__6296__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a);
  };
  var G__6296__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b);
  };
  var G__6296__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c);
  };
  var G__6296__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d);
  };
  var G__6296__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e);
  };
  var G__6296__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__6296__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__6296__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__6296__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__6296__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__6296__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__6296__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__6296__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__6296__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__6296__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__6296__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__6296__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__6296__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__6296__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__6296__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__6296__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__6296 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__6296__1.call(this, self__);
      case 2:
        return G__6296__2.call(this, self__, a);
      case 3:
        return G__6296__3.call(this, self__, a, b);
      case 4:
        return G__6296__4.call(this, self__, a, b, c);
      case 5:
        return G__6296__5.call(this, self__, a, b, c, d);
      case 6:
        return G__6296__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__6296__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__6296__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__6296__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__6296__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__6296__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__6296__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__6296__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__6296__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__6296__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__6296__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__6296__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__6296__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__6296__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__6296__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__6296__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__6296__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6296.cljs$core$IFn$_invoke$arity$1 = G__6296__1;
  G__6296.cljs$core$IFn$_invoke$arity$2 = G__6296__2;
  G__6296.cljs$core$IFn$_invoke$arity$3 = G__6296__3;
  G__6296.cljs$core$IFn$_invoke$arity$4 = G__6296__4;
  G__6296.cljs$core$IFn$_invoke$arity$5 = G__6296__5;
  G__6296.cljs$core$IFn$_invoke$arity$6 = G__6296__6;
  G__6296.cljs$core$IFn$_invoke$arity$7 = G__6296__7;
  G__6296.cljs$core$IFn$_invoke$arity$8 = G__6296__8;
  G__6296.cljs$core$IFn$_invoke$arity$9 = G__6296__9;
  G__6296.cljs$core$IFn$_invoke$arity$10 = G__6296__10;
  G__6296.cljs$core$IFn$_invoke$arity$11 = G__6296__11;
  G__6296.cljs$core$IFn$_invoke$arity$12 = G__6296__12;
  G__6296.cljs$core$IFn$_invoke$arity$13 = G__6296__13;
  G__6296.cljs$core$IFn$_invoke$arity$14 = G__6296__14;
  G__6296.cljs$core$IFn$_invoke$arity$15 = G__6296__15;
  G__6296.cljs$core$IFn$_invoke$arity$16 = G__6296__16;
  G__6296.cljs$core$IFn$_invoke$arity$17 = G__6296__17;
  G__6296.cljs$core$IFn$_invoke$arity$18 = G__6296__18;
  G__6296.cljs$core$IFn$_invoke$arity$19 = G__6296__19;
  G__6296.cljs$core$IFn$_invoke$arity$20 = G__6296__20;
  G__6296.cljs$core$IFn$_invoke$arity$21 = G__6296__21;
  G__6296.cljs$core$IFn$_invoke$arity$22 = G__6296__22;
  return G__6296;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args6295) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6295)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__6300 = o;
    if (G__6300) {
      var bit__4302__auto__ = G__6300.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4302__auto__ || G__6300.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__6300.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__6300);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__6300);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3627__auto__ = !(o == null);
    if (and__3627__auto__) {
      var G__6304 = o;
      if (G__6304) {
        var bit__4302__auto__ = G__6304.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4302__auto__ || G__6304.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__6304.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__6304);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__6304);
      }
    } else {
      return and__3627__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__6305__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__6306 = ret;
            var G__6307 = cljs.core.first.call(null, ks);
            var G__6308 = cljs.core.next.call(null, ks);
            coll = G__6306;
            k = G__6307;
            ks = G__6308;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__6305 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6305__delegate.call(this, coll, k, ks);
    };
    G__6305.cljs$lang$maxFixedArity = 2;
    G__6305.cljs$lang$applyTo = function(arglist__6309) {
      var coll = cljs.core.first(arglist__6309);
      arglist__6309 = cljs.core.next(arglist__6309);
      var k = cljs.core.first(arglist__6309);
      var ks = cljs.core.rest(arglist__6309);
      return G__6305__delegate(coll, k, ks);
    };
    G__6305.cljs$core$IFn$_invoke$arity$variadic = G__6305__delegate;
    return G__6305;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__6311 = x;
    if (G__6311) {
      var bit__4302__auto__ = G__6311.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4302__auto__ || G__6311.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__6311.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__6311);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__6311);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__6313 = x;
    if (G__6313) {
      var bit__4302__auto__ = G__6313.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4302__auto__ || G__6313.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__6313.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__6313);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__6313);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__6315 = x;
  if (G__6315) {
    var bit__4302__auto__ = G__6315.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4302__auto__ || G__6315.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__6315.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__6315);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__6315);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__6317 = x;
  if (G__6317) {
    var bit__4302__auto__ = G__6317.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4302__auto__ || G__6317.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__6317.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__6317);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__6317);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__6319 = x;
  if (G__6319) {
    var bit__4302__auto__ = G__6319.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4302__auto__ || G__6319.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__6319.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__6319);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__6319);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__6321 = x;
  if (G__6321) {
    var bit__4302__auto__ = G__6321.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4302__auto__ || G__6321.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__6321.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__6321);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__6321);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__6323 = x;
    if (G__6323) {
      var bit__4302__auto__ = G__6323.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4302__auto__ || G__6323.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__6323.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__6323);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__6323);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__6325 = x;
  if (G__6325) {
    var bit__4302__auto__ = G__6325.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4302__auto__ || G__6325.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__6325.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__6325);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__6325);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__6327 = x;
  if (G__6327) {
    var bit__4295__auto__ = G__6327.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4295__auto__ || G__6327.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj6331 = {};
    return obj6331;
  };
  var js_obj__1 = function() {
    var G__6332__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__6332 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__6332__delegate.call(this, keyvals);
    };
    G__6332.cljs$lang$maxFixedArity = 0;
    G__6332.cljs$lang$applyTo = function(arglist__6333) {
      var keyvals = cljs.core.seq(arglist__6333);
      return G__6332__delegate(keyvals);
    };
    G__6332.cljs$core$IFn$_invoke$arity$variadic = G__6332__delegate;
    return G__6332;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(keys));
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__6334 = i__$1 + 1;
      var G__6335 = j__$1 + 1;
      var G__6336 = len__$1 - 1;
      i__$1 = G__6334;
      j__$1 = G__6335;
      len__$1 = G__6336;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__6337 = i__$1 - 1;
      var G__6338 = j__$1 - 1;
      var G__6339 = len__$1 - 1;
      i__$1 = G__6337;
      j__$1 = G__6338;
      len__$1 = G__6339;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj6341 = {};
  return obj6341;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__6343 = s;
    if (G__6343) {
      var bit__4302__auto__ = G__6343.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4302__auto__ || G__6343.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__6343.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__6343);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__6343);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__6345 = s;
  if (G__6345) {
    var bit__4302__auto__ = G__6345.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4302__auto__ || G__6345.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__6345.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__6345);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__6345);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3639__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__3639__auto__) {
    return or__3639__auto__;
  } else {
    var G__6349 = f;
    if (G__6349) {
      var bit__4302__auto__ = G__6349.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4302__auto__ || G__6349.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__6349.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__6349);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__6349);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__6350__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__6351 = cljs.core.conj.call(null, s, x__$1);
              var G__6352 = etc;
              s = G__6351;
              xs = G__6352;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__6350 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6350__delegate.call(this, x, y, more);
    };
    G__6350.cljs$lang$maxFixedArity = 2;
    G__6350.cljs$lang$applyTo = function(arglist__6353) {
      var x = cljs.core.first(arglist__6353);
      arglist__6353 = cljs.core.next(arglist__6353);
      var y = cljs.core.first(arglist__6353);
      var more = cljs.core.rest(arglist__6353);
      return G__6350__delegate(x, y, more);
    };
    G__6350.cljs$core$IFn$_invoke$arity$variadic = G__6350__delegate;
    return G__6350;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__3639__auto__ = cljs.core.seq.call(null, coll);
    if (or__3639__auto__) {
      return or__3639__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__6355 = x;
            if (G__6355) {
              var bit__4295__auto__ = G__6355.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4295__auto__ || G__6355.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.call(null, xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__6356 = xs;
        var G__6357 = ys;
        var G__6358 = len;
        var G__6359 = n + 1;
        xs = G__6356;
        ys = G__6357;
        len = G__6358;
        n = G__6359;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__6360 = nval;
          var G__6361 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__6360;
          coll__$1 = G__6361;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__6364 = coll;
      if (G__6364) {
        var bit__4295__auto__ = G__6364.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4295__auto__ || G__6364.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            return cljs.core.seq_reduce.call(null, f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__6365 = coll;
      if (G__6365) {
        var bit__4295__auto__ = G__6365.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4295__auto__ || G__6365.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            return cljs.core.seq_reduce.call(null, f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.completing = function() {
  var completing = null;
  var completing__1 = function(f) {
    return completing.call(null, f, cljs.core.identity);
  };
  var completing__2 = function(f, cf) {
    return function() {
      var G__6366 = null;
      var G__6366__0 = function() {
        return f.call(null);
      };
      var G__6366__1 = function(x) {
        return cf.call(null, x);
      };
      var G__6366__2 = function(x, y) {
        return f.call(null, x, y);
      };
      G__6366 = function(x, y) {
        switch(arguments.length) {
          case 0:
            return G__6366__0.call(this);
          case 1:
            return G__6366__1.call(this, x);
          case 2:
            return G__6366__2.call(this, x, y);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6366.cljs$core$IFn$_invoke$arity$0 = G__6366__0;
      G__6366.cljs$core$IFn$_invoke$arity$1 = G__6366__1;
      G__6366.cljs$core$IFn$_invoke$arity$2 = G__6366__2;
      return G__6366;
    }();
  };
  completing = function(f, cf) {
    switch(arguments.length) {
      case 1:
        return completing__1.call(this, f);
      case 2:
        return completing__2.call(this, f, cf);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
  completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
  return completing;
}();
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.call(null, xform, f, f.call(null), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = xform.call(null, f);
    var ret = cljs.core.reduce.call(null, f__$1, init, coll);
    return f__$1.call(null, ret);
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__6367__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__6367 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6367__delegate.call(this, x, y, more);
    };
    G__6367.cljs$lang$maxFixedArity = 2;
    G__6367.cljs$lang$applyTo = function(arglist__6368) {
      var x = cljs.core.first(arglist__6368);
      arglist__6368 = cljs.core.next(arglist__6368);
      var y = cljs.core.first(arglist__6368);
      var more = cljs.core.rest(arglist__6368);
      return G__6367__delegate(x, y, more);
    };
    G__6367.cljs$core$IFn$_invoke$arity$variadic = G__6367__delegate;
    return G__6367;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__6369__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__6369 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6369__delegate.call(this, x, y, more);
    };
    G__6369.cljs$lang$maxFixedArity = 2;
    G__6369.cljs$lang$applyTo = function(arglist__6370) {
      var x = cljs.core.first(arglist__6370);
      arglist__6370 = cljs.core.next(arglist__6370);
      var y = cljs.core.first(arglist__6370);
      var more = cljs.core.rest(arglist__6370);
      return G__6369__delegate(x, y, more);
    };
    G__6369.cljs$core$IFn$_invoke$arity$variadic = G__6369__delegate;
    return G__6369;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__6371__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__6371 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6371__delegate.call(this, x, y, more);
    };
    G__6371.cljs$lang$maxFixedArity = 2;
    G__6371.cljs$lang$applyTo = function(arglist__6372) {
      var x = cljs.core.first(arglist__6372);
      arglist__6372 = cljs.core.next(arglist__6372);
      var y = cljs.core.first(arglist__6372);
      var more = cljs.core.rest(arglist__6372);
      return G__6371__delegate(x, y, more);
    };
    G__6371.cljs$core$IFn$_invoke$arity$variadic = G__6371__delegate;
    return G__6371;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__6373__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__6373 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6373__delegate.call(this, x, y, more);
    };
    G__6373.cljs$lang$maxFixedArity = 2;
    G__6373.cljs$lang$applyTo = function(arglist__6374) {
      var x = cljs.core.first(arglist__6374);
      arglist__6374 = cljs.core.next(arglist__6374);
      var y = cljs.core.first(arglist__6374);
      var more = cljs.core.rest(arglist__6374);
      return G__6373__delegate(x, y, more);
    };
    G__6373.cljs$core$IFn$_invoke$arity$variadic = G__6373__delegate;
    return G__6373;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__6375__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__6376 = y;
            var G__6377 = cljs.core.first.call(null, more);
            var G__6378 = cljs.core.next.call(null, more);
            x = G__6376;
            y = G__6377;
            more = G__6378;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6375 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6375__delegate.call(this, x, y, more);
    };
    G__6375.cljs$lang$maxFixedArity = 2;
    G__6375.cljs$lang$applyTo = function(arglist__6379) {
      var x = cljs.core.first(arglist__6379);
      arglist__6379 = cljs.core.next(arglist__6379);
      var y = cljs.core.first(arglist__6379);
      var more = cljs.core.rest(arglist__6379);
      return G__6375__delegate(x, y, more);
    };
    G__6375.cljs$core$IFn$_invoke$arity$variadic = G__6375__delegate;
    return G__6375;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__6380__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__6381 = y;
            var G__6382 = cljs.core.first.call(null, more);
            var G__6383 = cljs.core.next.call(null, more);
            x = G__6381;
            y = G__6382;
            more = G__6383;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6380 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6380__delegate.call(this, x, y, more);
    };
    G__6380.cljs$lang$maxFixedArity = 2;
    G__6380.cljs$lang$applyTo = function(arglist__6384) {
      var x = cljs.core.first(arglist__6384);
      arglist__6384 = cljs.core.next(arglist__6384);
      var y = cljs.core.first(arglist__6384);
      var more = cljs.core.rest(arglist__6384);
      return G__6380__delegate(x, y, more);
    };
    G__6380.cljs$core$IFn$_invoke$arity$variadic = G__6380__delegate;
    return G__6380;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__6385__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__6386 = y;
            var G__6387 = cljs.core.first.call(null, more);
            var G__6388 = cljs.core.next.call(null, more);
            x = G__6386;
            y = G__6387;
            more = G__6388;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6385 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6385__delegate.call(this, x, y, more);
    };
    G__6385.cljs$lang$maxFixedArity = 2;
    G__6385.cljs$lang$applyTo = function(arglist__6389) {
      var x = cljs.core.first(arglist__6389);
      arglist__6389 = cljs.core.next(arglist__6389);
      var y = cljs.core.first(arglist__6389);
      var more = cljs.core.rest(arglist__6389);
      return G__6385__delegate(x, y, more);
    };
    G__6385.cljs$core$IFn$_invoke$arity$variadic = G__6385__delegate;
    return G__6385;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__6390__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__6391 = y;
            var G__6392 = cljs.core.first.call(null, more);
            var G__6393 = cljs.core.next.call(null, more);
            x = G__6391;
            y = G__6392;
            more = G__6393;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6390 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6390__delegate.call(this, x, y, more);
    };
    G__6390.cljs$lang$maxFixedArity = 2;
    G__6390.cljs$lang$applyTo = function(arglist__6394) {
      var x = cljs.core.first(arglist__6394);
      arglist__6394 = cljs.core.next(arglist__6394);
      var y = cljs.core.first(arglist__6394);
      var more = cljs.core.rest(arglist__6394);
      return G__6390__delegate(x, y, more);
    };
    G__6390.cljs$core$IFn$_invoke$arity$variadic = G__6390__delegate;
    return G__6390;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3946__auto__ = x;
    var y__3947__auto__ = y;
    return x__3946__auto__ > y__3947__auto__ ? x__3946__auto__ : y__3947__auto__;
  };
  var max__3 = function() {
    var G__6395__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3946__auto__ = x;
        var y__3947__auto__ = y;
        return x__3946__auto__ > y__3947__auto__ ? x__3946__auto__ : y__3947__auto__;
      }(), more);
    };
    var G__6395 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6395__delegate.call(this, x, y, more);
    };
    G__6395.cljs$lang$maxFixedArity = 2;
    G__6395.cljs$lang$applyTo = function(arglist__6396) {
      var x = cljs.core.first(arglist__6396);
      arglist__6396 = cljs.core.next(arglist__6396);
      var y = cljs.core.first(arglist__6396);
      var more = cljs.core.rest(arglist__6396);
      return G__6395__delegate(x, y, more);
    };
    G__6395.cljs$core$IFn$_invoke$arity$variadic = G__6395__delegate;
    return G__6395;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3953__auto__ = x;
    var y__3954__auto__ = y;
    return x__3953__auto__ < y__3954__auto__ ? x__3953__auto__ : y__3954__auto__;
  };
  var min__3 = function() {
    var G__6397__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3953__auto__ = x;
        var y__3954__auto__ = y;
        return x__3953__auto__ < y__3954__auto__ ? x__3953__auto__ : y__3954__auto__;
      }(), more);
    };
    var G__6397 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6397__delegate.call(this, x, y, more);
    };
    G__6397.cljs$lang$maxFixedArity = 2;
    G__6397.cljs$lang$applyTo = function(arglist__6398) {
      var x = cljs.core.first(arglist__6398);
      arglist__6398 = cljs.core.next(arglist__6398);
      var y = cljs.core.first(arglist__6398);
      var more = cljs.core.rest(arglist__6398);
      return G__6397__delegate(x, y, more);
    };
    G__6397.cljs$core$IFn$_invoke$arity$variadic = G__6397__delegate;
    return G__6397;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__6399__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__6399 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6399__delegate.call(this, x, y, more);
    };
    G__6399.cljs$lang$maxFixedArity = 2;
    G__6399.cljs$lang$applyTo = function(arglist__6400) {
      var x = cljs.core.first(arglist__6400);
      arglist__6400 = cljs.core.next(arglist__6400);
      var y = cljs.core.first(arglist__6400);
      var more = cljs.core.rest(arglist__6400);
      return G__6399__delegate(x, y, more);
    };
    G__6399.cljs$core$IFn$_invoke$arity$variadic = G__6399__delegate;
    return G__6399;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__6401__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__6401 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6401__delegate.call(this, x, y, more);
    };
    G__6401.cljs$lang$maxFixedArity = 2;
    G__6401.cljs$lang$applyTo = function(arglist__6402) {
      var x = cljs.core.first(arglist__6402);
      arglist__6402 = cljs.core.next(arglist__6402);
      var y = cljs.core.first(arglist__6402);
      var more = cljs.core.rest(arglist__6402);
      return G__6401__delegate(x, y, more);
    };
    G__6401.cljs$core$IFn$_invoke$arity$variadic = G__6401__delegate;
    return G__6401;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__6403__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__6403 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6403__delegate.call(this, x, y, more);
    };
    G__6403.cljs$lang$maxFixedArity = 2;
    G__6403.cljs$lang$applyTo = function(arglist__6404) {
      var x = cljs.core.first(arglist__6404);
      arglist__6404 = cljs.core.next(arglist__6404);
      var y = cljs.core.first(arglist__6404);
      var more = cljs.core.rest(arglist__6404);
      return G__6403__delegate(x, y, more);
    };
    G__6403.cljs$core$IFn$_invoke$arity$variadic = G__6403__delegate;
    return G__6403;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__6405__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__6405 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6405__delegate.call(this, x, y, more);
    };
    G__6405.cljs$lang$maxFixedArity = 2;
    G__6405.cljs$lang$applyTo = function(arglist__6406) {
      var x = cljs.core.first(arglist__6406);
      arglist__6406 = cljs.core.next(arglist__6406);
      var y = cljs.core.first(arglist__6406);
      var more = cljs.core.rest(arglist__6406);
      return G__6405__delegate(x, y, more);
    };
    G__6405.cljs$core$IFn$_invoke$arity$variadic = G__6405__delegate;
    return G__6405;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__6407__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__6407 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6407__delegate.call(this, x, y, more);
    };
    G__6407.cljs$lang$maxFixedArity = 2;
    G__6407.cljs$lang$applyTo = function(arglist__6408) {
      var x = cljs.core.first(arglist__6408);
      arglist__6408 = cljs.core.next(arglist__6408);
      var y = cljs.core.first(arglist__6408);
      var more = cljs.core.rest(arglist__6408);
      return G__6407__delegate(x, y, more);
    };
    G__6407.cljs$core$IFn$_invoke$arity$variadic = G__6407__delegate;
    return G__6407;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__6409__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract, x - y, more);
    };
    var G__6409 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6409__delegate.call(this, x, y, more);
    };
    G__6409.cljs$lang$maxFixedArity = 2;
    G__6409.cljs$lang$applyTo = function(arglist__6410) {
      var x = cljs.core.first(arglist__6410);
      arglist__6410 = cljs.core.next(arglist__6410);
      var y = cljs.core.first(arglist__6410);
      var more = cljs.core.rest(arglist__6410);
      return G__6409__delegate(x, y, more);
    };
    G__6409.cljs$core$IFn$_invoke$arity$variadic = G__6409__delegate;
    return G__6409;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__6411__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract_int, x - y, more);
    };
    var G__6411 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6411__delegate.call(this, x, y, more);
    };
    G__6411.cljs$lang$maxFixedArity = 2;
    G__6411.cljs$lang$applyTo = function(arglist__6412) {
      var x = cljs.core.first(arglist__6412);
      arglist__6412 = cljs.core.next(arglist__6412);
      var y = cljs.core.first(arglist__6412);
      var more = cljs.core.rest(arglist__6412);
      return G__6411__delegate(x, y, more);
    };
    G__6411.cljs$core$IFn$_invoke$arity$variadic = G__6411__delegate;
    return G__6411;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__6413__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__6414 = y;
            var G__6415 = cljs.core.first.call(null, more);
            var G__6416 = cljs.core.next.call(null, more);
            x = G__6414;
            y = G__6415;
            more = G__6416;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6413 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6413__delegate.call(this, x, y, more);
    };
    G__6413.cljs$lang$maxFixedArity = 2;
    G__6413.cljs$lang$applyTo = function(arglist__6417) {
      var x = cljs.core.first(arglist__6417);
      arglist__6417 = cljs.core.next(arglist__6417);
      var y = cljs.core.first(arglist__6417);
      var more = cljs.core.rest(arglist__6417);
      return G__6413__delegate(x, y, more);
    };
    G__6413.cljs$core$IFn$_invoke$arity$variadic = G__6413__delegate;
    return G__6413;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__6418 = n__$1 - 1;
      var G__6419 = cljs.core.next.call(null, xs);
      n__$1 = G__6418;
      xs = G__6419;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return "" + x;
    }
  };
  var str__2 = function() {
    var G__6420__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__6421 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__6422 = cljs.core.next.call(null, more);
          sb = G__6421;
          more = G__6422;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__6420 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__6420__delegate.call(this, x, ys);
    };
    G__6420.cljs$lang$maxFixedArity = 1;
    G__6420.cljs$lang$applyTo = function(arglist__6423) {
      var x = cljs.core.first(arglist__6423);
      var ys = cljs.core.rest(arglist__6423);
      return G__6420__delegate(x, ys);
    };
    G__6420.cljs$core$IFn$_invoke$arity$variadic = G__6420__delegate;
    return G__6420;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? cljs.core.counted_QMARK_.call(null, x) && cljs.core.counted_QMARK_.call(null, y) && !(cljs.core.count.call(null, x) === cljs.core.count.call(null, y)) ? false : function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__6424 = cljs.core.next.call(null, xs);
            var G__6425 = cljs.core.next.call(null, ys);
            xs = G__6424;
            ys = G__6425;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__6426 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__6427 = cljs.core.next.call(null, s);
        res = G__6426;
        s = G__6427;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__6428 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__6429 = cljs.core.next.call(null, s);
      h = G__6428;
      s = G__6429;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__6430 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__6431 = cljs.core.next.call(null, s__$1);
      h = G__6430;
      s__$1 = G__6431;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__6438_6444 = cljs.core.seq.call(null, fn_map);
  var chunk__6439_6445 = null;
  var count__6440_6446 = 0;
  var i__6441_6447 = 0;
  while (true) {
    if (i__6441_6447 < count__6440_6446) {
      var vec__6442_6448 = cljs.core._nth.call(null, chunk__6439_6445, i__6441_6447);
      var key_name_6449 = cljs.core.nth.call(null, vec__6442_6448, 0, null);
      var f_6450 = cljs.core.nth.call(null, vec__6442_6448, 1, null);
      var str_name_6451 = cljs.core.name.call(null, key_name_6449);
      obj[str_name_6451] = f_6450;
      var G__6452 = seq__6438_6444;
      var G__6453 = chunk__6439_6445;
      var G__6454 = count__6440_6446;
      var G__6455 = i__6441_6447 + 1;
      seq__6438_6444 = G__6452;
      chunk__6439_6445 = G__6453;
      count__6440_6446 = G__6454;
      i__6441_6447 = G__6455;
      continue;
    } else {
      var temp__4126__auto___6456 = cljs.core.seq.call(null, seq__6438_6444);
      if (temp__4126__auto___6456) {
        var seq__6438_6457__$1 = temp__4126__auto___6456;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6438_6457__$1)) {
          var c__4408__auto___6458 = cljs.core.chunk_first.call(null, seq__6438_6457__$1);
          var G__6459 = cljs.core.chunk_rest.call(null, seq__6438_6457__$1);
          var G__6460 = c__4408__auto___6458;
          var G__6461 = cljs.core.count.call(null, c__4408__auto___6458);
          var G__6462 = 0;
          seq__6438_6444 = G__6459;
          chunk__6439_6445 = G__6460;
          count__6440_6446 = G__6461;
          i__6441_6447 = G__6462;
          continue;
        } else {
          var vec__6443_6463 = cljs.core.first.call(null, seq__6438_6457__$1);
          var key_name_6464 = cljs.core.nth.call(null, vec__6443_6463, 0, null);
          var f_6465 = cljs.core.nth.call(null, vec__6443_6463, 1, null);
          var str_name_6466 = cljs.core.name.call(null, key_name_6464);
          obj[str_name_6466] = f_6465;
          var G__6467 = cljs.core.next.call(null, seq__6438_6457__$1);
          var G__6468 = null;
          var G__6469 = 0;
          var G__6470 = 0;
          seq__6438_6444 = G__6467;
          chunk__6439_6445 = G__6468;
          count__6440_6446 = G__6469;
          i__6441_6447 = G__6470;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/List");
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/EmptyList");
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__6472 = coll;
  if (G__6472) {
    var bit__4302__auto__ = G__6472.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4302__auto__ || G__6472.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__6472.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__6472);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__6472);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__6473 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__6473;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__6474 = i - 1;
        var G__6475 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__6474;
        r = G__6475;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__6476) {
    var xs = cljs.core.seq(arglist__6476);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Cons");
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3639__auto__ = coll == null;
    if (or__3639__auto__) {
      return or__3639__auto__;
    } else {
      var G__6480 = coll;
      if (G__6480) {
        var bit__4295__auto__ = G__6480.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4295__auto__ || G__6480.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__6482 = x;
  if (G__6482) {
    var bit__4302__auto__ = G__6482.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4302__auto__ || G__6482.cljs$core$IList$) {
      return true;
    } else {
      if (!G__6482.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__6482);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__6482);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol.call(null, k) + 2654435769 | 0;
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Keyword");
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4050__auto__ = self__._hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_keyword.call(null, this$__$1);
    self__._hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__6484 = null;
  var G__6484__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__6484__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__6484 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6484__2.call(this, self__, coll);
      case 3:
        return G__6484__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6484.cljs$core$IFn$_invoke$arity$2 = G__6484__2;
  G__6484.cljs$core$IFn$_invoke$arity$3 = G__6484__3;
  return G__6484;
}();
cljs.core.Keyword.prototype.apply = function(self__, args6483) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6483)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn);
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__6486 = x;
    if (G__6486) {
      var bit__4295__auto__ = G__6486.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4295__auto__ || G__6486.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error("Doesn't support namespace: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(ns) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns) + "/" : null) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/LazySeq");
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__6487 = ls.sval();
        ls = G__6487;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ArrayChunk");
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ChunkedCons");
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__6489 = s;
    if (G__6489) {
      var bit__4295__auto__ = G__6489.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4295__auto__ || G__6489.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__6490 = cljs.core.next.call(null, s__$1);
      s__$1 = G__6490;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_6491 = 0;
  var xs_6492 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_6492) {
      ret[i_6491] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_6492));
      var G__6493 = i_6491 + 1;
      var G__6494 = cljs.core.next.call(null, xs_6492);
      i_6491 = G__6493;
      xs_6492 = G__6494;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__6495 = i + 1;
          var G__6496 = cljs.core.next.call(null, s__$1);
          i = G__6495;
          s__$1 = G__6496;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4508__auto___6497 = size;
      var i_6498 = 0;
      while (true) {
        if (i_6498 < n__4508__auto___6497) {
          a[i_6498] = init_val_or_seq;
          var G__6499 = i_6498 + 1;
          i_6498 = G__6499;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__6500 = i + 1;
          var G__6501 = cljs.core.next.call(null, s__$1);
          i = G__6500;
          s__$1 = G__6501;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4508__auto___6502 = size;
      var i_6503 = 0;
      while (true) {
        if (i_6503 < n__4508__auto___6502) {
          a[i_6503] = init_val_or_seq;
          var G__6504 = i_6503 + 1;
          i_6503 = G__6504;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__6505 = i + 1;
          var G__6506 = cljs.core.next.call(null, s__$1);
          i = G__6505;
          s__$1 = G__6506;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4508__auto___6507 = size;
      var i_6508 = 0;
      while (true) {
        if (i_6508 < n__4508__auto___6507) {
          a[i_6508] = init_val_or_seq;
          var G__6509 = i_6508 + 1;
          i_6508 = G__6509;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__6510 = i + 1;
          var G__6511 = cljs.core.next.call(null, s__$1);
          i = G__6510;
          s__$1 = G__6511;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4508__auto___6512 = size;
      var i_6513 = 0;
      while (true) {
        if (i_6513 < n__4508__auto___6512) {
          a[i_6513] = init_val_or_seq;
          var G__6514 = i_6513 + 1;
          i_6513 = G__6514;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__6515 = cljs.core.next.call(null, s__$1);
        var G__6516 = i - 1;
        var G__6517 = sum + 1;
        s__$1 = G__6515;
        i = G__6516;
        sum = G__6517;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__6518__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__6518 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6518__delegate.call(this, x, y, zs);
    };
    G__6518.cljs$lang$maxFixedArity = 2;
    G__6518.cljs$lang$applyTo = function(arglist__6519) {
      var x = cljs.core.first(arglist__6519);
      arglist__6519 = cljs.core.next(arglist__6519);
      var y = cljs.core.first(arglist__6519);
      var zs = cljs.core.rest(arglist__6519);
      return G__6518__delegate(x, y, zs);
    };
    G__6518.cljs$core$IFn$_invoke$arity$variadic = G__6518__delegate;
    return G__6518;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__6520__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__6520 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__6520__delegate.call(this, a, b, c, d, more);
    };
    G__6520.cljs$lang$maxFixedArity = 4;
    G__6520.cljs$lang$applyTo = function(arglist__6521) {
      var a = cljs.core.first(arglist__6521);
      arglist__6521 = cljs.core.next(arglist__6521);
      var b = cljs.core.first(arglist__6521);
      arglist__6521 = cljs.core.next(arglist__6521);
      var c = cljs.core.first(arglist__6521);
      arglist__6521 = cljs.core.next(arglist__6521);
      var d = cljs.core.first(arglist__6521);
      var more = cljs.core.rest(arglist__6521);
      return G__6520__delegate(a, b, c, d, more);
    };
    G__6520.cljs$core$IFn$_invoke$arity$variadic = G__6520__delegate;
    return G__6520;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_.call(null, tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__6522__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__6523 = ntcoll;
          var G__6524 = cljs.core.first.call(null, vals);
          var G__6525 = cljs.core.next.call(null, vals);
          tcoll = G__6523;
          val = G__6524;
          vals = G__6525;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6522 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6522__delegate.call(this, tcoll, val, vals);
    };
    G__6522.cljs$lang$maxFixedArity = 2;
    G__6522.cljs$lang$applyTo = function(arglist__6526) {
      var tcoll = cljs.core.first(arglist__6526);
      arglist__6526 = cljs.core.next(arglist__6526);
      var val = cljs.core.first(arglist__6526);
      var vals = cljs.core.rest(arglist__6526);
      return G__6522__delegate(tcoll, val, vals);
    };
    G__6522.cljs$core$IFn$_invoke$arity$variadic = G__6522__delegate;
    return G__6522;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__6527__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_.call(null, tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__6528 = ntcoll;
          var G__6529 = cljs.core.first.call(null, kvs);
          var G__6530 = cljs.core.second.call(null, kvs);
          var G__6531 = cljs.core.nnext.call(null, kvs);
          tcoll = G__6528;
          key = G__6529;
          val = G__6530;
          kvs = G__6531;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6527 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6527__delegate.call(this, tcoll, key, val, kvs);
    };
    G__6527.cljs$lang$maxFixedArity = 3;
    G__6527.cljs$lang$applyTo = function(arglist__6532) {
      var tcoll = cljs.core.first(arglist__6532);
      arglist__6532 = cljs.core.next(arglist__6532);
      var key = cljs.core.first(arglist__6532);
      arglist__6532 = cljs.core.next(arglist__6532);
      var val = cljs.core.first(arglist__6532);
      var kvs = cljs.core.rest(arglist__6532);
      return G__6527__delegate(tcoll, key, val, kvs);
    };
    G__6527.cljs$core$IFn$_invoke$arity$variadic = G__6527__delegate;
    return G__6527;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_.call(null, tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__6533__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_.call(null, tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__6534 = ntcoll;
          var G__6535 = cljs.core.first.call(null, ks);
          var G__6536 = cljs.core.next.call(null, ks);
          tcoll = G__6534;
          key = G__6535;
          ks = G__6536;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6533 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6533__delegate.call(this, tcoll, key, ks);
    };
    G__6533.cljs$lang$maxFixedArity = 2;
    G__6533.cljs$lang$applyTo = function(arglist__6537) {
      var tcoll = cljs.core.first(arglist__6537);
      arglist__6537 = cljs.core.next(arglist__6537);
      var key = cljs.core.first(arglist__6537);
      var ks = cljs.core.rest(arglist__6537);
      return G__6533__delegate(tcoll, key, ks);
    };
    G__6533.cljs$core$IFn$_invoke$arity$variadic = G__6533__delegate;
    return G__6533;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_.call(null, tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__6538__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__6539 = ntcoll;
          var G__6540 = cljs.core.first.call(null, vals);
          var G__6541 = cljs.core.next.call(null, vals);
          tcoll = G__6539;
          val = G__6540;
          vals = G__6541;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6538 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6538__delegate.call(this, tcoll, val, vals);
    };
    G__6538.cljs$lang$maxFixedArity = 2;
    G__6538.cljs$lang$applyTo = function(arglist__6542) {
      var tcoll = cljs.core.first(arglist__6542);
      arglist__6542 = cljs.core.next(arglist__6542);
      var val = cljs.core.first(arglist__6542);
      var vals = cljs.core.rest(arglist__6542);
      return G__6538__delegate(tcoll, val, vals);
    };
    G__6538.cljs$core$IFn$_invoke$arity$variadic = G__6538__delegate;
    return G__6538;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a4552 = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4552);
      } else {
        return f.call(null, a4552);
      }
    } else {
      var b4553 = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4552, b4553);
        } else {
          return f.call(null, a4552, b4553);
        }
      } else {
        var c4554 = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4552, b4553, c4554);
          } else {
            return f.call(null, a4552, b4553, c4554);
          }
        } else {
          var d4555 = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4552, b4553, c4554, d4555);
            } else {
              return f.call(null, a4552, b4553, c4554, d4555);
            }
          } else {
            var e4556 = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4552, b4553, c4554, d4555, e4556);
              } else {
                return f.call(null, a4552, b4553, c4554, d4555, e4556);
              }
            } else {
              var f4557 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4552, b4553, c4554, d4555, e4556, f4557);
                } else {
                  return f.call(null, a4552, b4553, c4554, d4555, e4556, f4557);
                }
              } else {
                var g4558 = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4552, b4553, c4554, d4555, e4556, f4557, g4558);
                  } else {
                    return f.call(null, a4552, b4553, c4554, d4555, e4556, f4557, g4558);
                  }
                } else {
                  var h4559 = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559);
                    } else {
                      return f.call(null, a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559);
                    }
                  } else {
                    var i4560 = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560);
                      } else {
                        return f.call(null, a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560);
                      }
                    } else {
                      var j4561 = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561);
                        } else {
                          return f.call(null, a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561);
                        }
                      } else {
                        var k4562 = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562);
                          } else {
                            return f.call(null, a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562);
                          }
                        } else {
                          var l4563 = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563);
                            } else {
                              return f.call(null, a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563);
                            }
                          } else {
                            var m4564 = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564);
                              } else {
                                return f.call(null, a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564);
                              }
                            } else {
                              var n4565 = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564, n4565);
                                } else {
                                  return f.call(null, a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564, n4565);
                                }
                              } else {
                                var o4566 = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564, n4565, o4566);
                                  } else {
                                    return f.call(null, a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564, n4565, o4566);
                                  }
                                } else {
                                  var p4567 = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564, n4565, o4566, p4567);
                                    } else {
                                      return f.call(null, a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564, n4565, o4566, p4567);
                                    }
                                  } else {
                                    var q4568 = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564, n4565, o4566, p4567, q4568);
                                      } else {
                                        return f.call(null, a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564, n4565, o4566, p4567, q4568);
                                      }
                                    } else {
                                      var r4569 = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564, n4565, o4566, p4567, q4568, r4569);
                                        } else {
                                          return f.call(null, a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564, n4565, o4566, p4567, q4568, r4569);
                                        }
                                      } else {
                                        var s4570 = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564, n4565, o4566, p4567, q4568, r4569, s4570);
                                          } else {
                                            return f.call(null, a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564, n4565, o4566, p4567, q4568, r4569, s4570);
                                          }
                                        } else {
                                          var t4571 = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564, n4565, o4566, p4567, q4568, r4569, s4570, t4571);
                                            } else {
                                              return f.call(null, a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564, n4565, o4566, p4567, q4568, r4569, s4570, t4571);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__6543__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__6543 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__6543__delegate.call(this, f, a, b, c, d, args);
    };
    G__6543.cljs$lang$maxFixedArity = 5;
    G__6543.cljs$lang$applyTo = function(arglist__6544) {
      var f = cljs.core.first(arglist__6544);
      arglist__6544 = cljs.core.next(arglist__6544);
      var a = cljs.core.first(arglist__6544);
      arglist__6544 = cljs.core.next(arglist__6544);
      var b = cljs.core.first(arglist__6544);
      arglist__6544 = cljs.core.next(arglist__6544);
      var c = cljs.core.first(arglist__6544);
      arglist__6544 = cljs.core.next(arglist__6544);
      var d = cljs.core.first(arglist__6544);
      var args = cljs.core.rest(arglist__6544);
      return G__6543__delegate(f, a, b, c, d, args);
    };
    G__6543.cljs$core$IFn$_invoke$arity$variadic = G__6543__delegate;
    return G__6543;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__6545__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__6545 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__6545__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__6545.cljs$lang$maxFixedArity = 6;
    G__6545.cljs$lang$applyTo = function(arglist__6546) {
      var obj = cljs.core.first(arglist__6546);
      arglist__6546 = cljs.core.next(arglist__6546);
      var f = cljs.core.first(arglist__6546);
      arglist__6546 = cljs.core.next(arglist__6546);
      var a = cljs.core.first(arglist__6546);
      arglist__6546 = cljs.core.next(arglist__6546);
      var b = cljs.core.first(arglist__6546);
      arglist__6546 = cljs.core.next(arglist__6546);
      var c = cljs.core.first(arglist__6546);
      arglist__6546 = cljs.core.next(arglist__6546);
      var d = cljs.core.first(arglist__6546);
      var args = cljs.core.rest(arglist__6546);
      return G__6545__delegate(obj, f, a, b, c, d, args);
    };
    G__6545.cljs$core$IFn$_invoke$arity$variadic = G__6545__delegate;
    return G__6545;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__6547__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__6547 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6547__delegate.call(this, x, y, more);
    };
    G__6547.cljs$lang$maxFixedArity = 2;
    G__6547.cljs$lang$applyTo = function(arglist__6548) {
      var x = cljs.core.first(arglist__6548);
      arglist__6548 = cljs.core.next(arglist__6548);
      var y = cljs.core.first(arglist__6548);
      var more = cljs.core.rest(arglist__6548);
      return G__6547__delegate(x, y, more);
    };
    G__6547.cljs$core$IFn$_invoke$arity$variadic = G__6547__delegate;
    return G__6547;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t6552 !== "undefined") {
  } else {
    cljs.core.t6552 = function(nil_iter, meta6553) {
      this.nil_iter = nil_iter;
      this.meta6553 = meta6553;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t6552.cljs$lang$type = true;
    cljs.core.t6552.cljs$lang$ctorStr = "cljs.core/t6552";
    cljs.core.t6552.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/t6552");
    };
    cljs.core.t6552.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t6552.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t6552.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t6552.prototype.cljs$core$IMeta$_meta$arity$1 = function(_6554) {
      var self__ = this;
      var _6554__$1 = this;
      return self__.meta6553;
    };
    cljs.core.t6552.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_6554, meta6553__$1) {
      var self__ = this;
      var _6554__$1 = this;
      return new cljs.core.t6552(self__.nil_iter, meta6553__$1);
    };
    cljs.core.__GT_t6552 = function __GT_t6552(nil_iter__$1, meta6553) {
      return new cljs.core.t6552(nil_iter__$1, meta6553);
    };
  }
  return new cljs.core.t6552(nil_iter, null);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/StringIter");
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ArrayIter");
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/SeqIter");
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq.call(null, self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next.call(null, self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not.call(null, this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first.call(null, self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter.call(null);
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter.call(null, coll);
      } else {
        if (cljs.core.iterable_QMARK_.call(null, coll)) {
          return cljs.core._iterator.call(null, coll);
        } else {
          if (cljs.core.seqable_QMARK_.call(null, coll)) {
            return cljs.core.seq_iter.call(null, coll);
          } else {
            throw new Error("Cannot create iterator from " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Stepper");
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3627__auto__ = !(lt.stepper == null);
      if (and__3627__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__3627__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, self__.xform.call(null, lt, self__.iter.next()))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/MultiStepper");
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq.call(null, self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first.call(null, iters__$1);
      if (cljs.core.not.call(null, iter.hasNext())) {
        return false;
      } else {
        var G__6555 = cljs.core.next.call(null, iters__$1);
        iters__$1 = G__6555;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4508__auto___6556 = self__.iters.length;
  var i_6557 = 0;
  while (true) {
    if (i_6557 < n__4508__auto___6556) {
      self__.nexts[i_6557] = self__.iters[i_6557].next();
      var G__6558 = i_6557 + 1;
      i_6557 = G__6558;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.call(null, self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3627__auto__ = !(lt.stepper == null);
      if (and__3627__auto__) {
        return this$.hasNext();
      } else {
        return and__3627__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, cljs.core.apply.call(null, self__.xform, cljs.core.cons.call(null, lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.call(null, xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(xform.call(null, stepfn), iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/LazyTransformer");
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq.call(null, self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq.call(null, this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential.call(null, this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_.call(null, other) && cljs.core.seq.call(null, other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, cljs.core._seq.call(null, this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper.call(null, xform, cljs.core.iter.call(null, coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__6559_6563 = cljs.core.seq.call(null, colls);
  var chunk__6560_6564 = null;
  var count__6561_6565 = 0;
  var i__6562_6566 = 0;
  while (true) {
    if (i__6562_6566 < count__6561_6565) {
      var coll_6567 = cljs.core._nth.call(null, chunk__6560_6564, i__6562_6566);
      iters.push(cljs.core.iter.call(null, coll_6567));
      var G__6568 = seq__6559_6563;
      var G__6569 = chunk__6560_6564;
      var G__6570 = count__6561_6565;
      var G__6571 = i__6562_6566 + 1;
      seq__6559_6563 = G__6568;
      chunk__6560_6564 = G__6569;
      count__6561_6565 = G__6570;
      i__6562_6566 = G__6571;
      continue;
    } else {
      var temp__4126__auto___6572 = cljs.core.seq.call(null, seq__6559_6563);
      if (temp__4126__auto___6572) {
        var seq__6559_6573__$1 = temp__4126__auto___6572;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6559_6573__$1)) {
          var c__4408__auto___6574 = cljs.core.chunk_first.call(null, seq__6559_6573__$1);
          var G__6575 = cljs.core.chunk_rest.call(null, seq__6559_6573__$1);
          var G__6576 = c__4408__auto___6574;
          var G__6577 = cljs.core.count.call(null, c__4408__auto___6574);
          var G__6578 = 0;
          seq__6559_6563 = G__6575;
          chunk__6560_6564 = G__6576;
          count__6561_6565 = G__6577;
          i__6562_6566 = G__6578;
          continue;
        } else {
          var coll_6579 = cljs.core.first.call(null, seq__6559_6573__$1);
          iters.push(cljs.core.iter.call(null, coll_6579));
          var G__6580 = cljs.core.next.call(null, seq__6559_6573__$1);
          var G__6581 = null;
          var G__6582 = 0;
          var G__6583 = 0;
          seq__6559_6563 = G__6580;
          chunk__6560_6564 = G__6581;
          count__6561_6565 = G__6582;
          i__6562_6566 = G__6583;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.call(null, xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_.call(null, coll)) {
      return coll;
    } else {
      var or__3639__auto__ = cljs.core.seq.call(null, coll);
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__6584__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array.call(null, cljs.core.cons.call(null, coll, colls)));
    };
    var G__6584 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6584__delegate.call(this, xform, coll, colls);
    };
    G__6584.cljs$lang$maxFixedArity = 2;
    G__6584.cljs$lang$applyTo = function(arglist__6585) {
      var xform = cljs.core.first(arglist__6585);
      arglist__6585 = cljs.core.next(arglist__6585);
      var coll = cljs.core.first(arglist__6585);
      var colls = cljs.core.rest(arglist__6585);
      return G__6584__delegate(xform, coll, colls);
    };
    G__6584.cljs$core$IFn$_invoke$arity$variadic = G__6584__delegate;
    return G__6584;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__6586 = pred;
        var G__6587 = cljs.core.next.call(null, coll);
        pred = G__6586;
        coll = G__6587;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__3639__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__3639__auto__)) {
        return or__3639__auto__;
      } else {
        var G__6588 = pred;
        var G__6589 = cljs.core.next.call(null, coll);
        pred = G__6588;
        coll = G__6589;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error("Argument must be an integer: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__6590 = null;
    var G__6590__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__6590__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__6590__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__6590__3 = function() {
      var G__6591__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__6591 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__6591__delegate.call(this, x, y, zs);
      };
      G__6591.cljs$lang$maxFixedArity = 2;
      G__6591.cljs$lang$applyTo = function(arglist__6592) {
        var x = cljs.core.first(arglist__6592);
        arglist__6592 = cljs.core.next(arglist__6592);
        var y = cljs.core.first(arglist__6592);
        var zs = cljs.core.rest(arglist__6592);
        return G__6591__delegate(x, y, zs);
      };
      G__6591.cljs$core$IFn$_invoke$arity$variadic = G__6591__delegate;
      return G__6591;
    }();
    G__6590 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__6590__0.call(this);
        case 1:
          return G__6590__1.call(this, x);
        case 2:
          return G__6590__2.call(this, x, y);
        default:
          return G__6590__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__6590.cljs$lang$maxFixedArity = 2;
    G__6590.cljs$lang$applyTo = G__6590__3.cljs$lang$applyTo;
    G__6590.cljs$core$IFn$_invoke$arity$0 = G__6590__0;
    G__6590.cljs$core$IFn$_invoke$arity$1 = G__6590__1;
    G__6590.cljs$core$IFn$_invoke$arity$2 = G__6590__2;
    G__6590.cljs$core$IFn$_invoke$arity$variadic = G__6590__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__6590;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__6593__delegate = function(args) {
      return x;
    };
    var G__6593 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__6593__delegate.call(this, args);
    };
    G__6593.cljs$lang$maxFixedArity = 0;
    G__6593.cljs$lang$applyTo = function(arglist__6594) {
      var args = cljs.core.seq(arglist__6594);
      return G__6593__delegate(args);
    };
    G__6593.cljs$core$IFn$_invoke$arity$variadic = G__6593__delegate;
    return G__6593;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__6595 = null;
      var G__6595__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__6595__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__6595__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__6595__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__6595__4 = function() {
        var G__6596__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__6596 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6596__delegate.call(this, x, y, z, args);
        };
        G__6596.cljs$lang$maxFixedArity = 3;
        G__6596.cljs$lang$applyTo = function(arglist__6597) {
          var x = cljs.core.first(arglist__6597);
          arglist__6597 = cljs.core.next(arglist__6597);
          var y = cljs.core.first(arglist__6597);
          arglist__6597 = cljs.core.next(arglist__6597);
          var z = cljs.core.first(arglist__6597);
          var args = cljs.core.rest(arglist__6597);
          return G__6596__delegate(x, y, z, args);
        };
        G__6596.cljs$core$IFn$_invoke$arity$variadic = G__6596__delegate;
        return G__6596;
      }();
      G__6595 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__6595__0.call(this);
          case 1:
            return G__6595__1.call(this, x);
          case 2:
            return G__6595__2.call(this, x, y);
          case 3:
            return G__6595__3.call(this, x, y, z);
          default:
            return G__6595__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6595.cljs$lang$maxFixedArity = 3;
      G__6595.cljs$lang$applyTo = G__6595__4.cljs$lang$applyTo;
      G__6595.cljs$core$IFn$_invoke$arity$0 = G__6595__0;
      G__6595.cljs$core$IFn$_invoke$arity$1 = G__6595__1;
      G__6595.cljs$core$IFn$_invoke$arity$2 = G__6595__2;
      G__6595.cljs$core$IFn$_invoke$arity$3 = G__6595__3;
      G__6595.cljs$core$IFn$_invoke$arity$variadic = G__6595__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__6595;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__6598 = null;
      var G__6598__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__6598__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__6598__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__6598__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__6598__4 = function() {
        var G__6599__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__6599 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6599__delegate.call(this, x, y, z, args);
        };
        G__6599.cljs$lang$maxFixedArity = 3;
        G__6599.cljs$lang$applyTo = function(arglist__6600) {
          var x = cljs.core.first(arglist__6600);
          arglist__6600 = cljs.core.next(arglist__6600);
          var y = cljs.core.first(arglist__6600);
          arglist__6600 = cljs.core.next(arglist__6600);
          var z = cljs.core.first(arglist__6600);
          var args = cljs.core.rest(arglist__6600);
          return G__6599__delegate(x, y, z, args);
        };
        G__6599.cljs$core$IFn$_invoke$arity$variadic = G__6599__delegate;
        return G__6599;
      }();
      G__6598 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__6598__0.call(this);
          case 1:
            return G__6598__1.call(this, x);
          case 2:
            return G__6598__2.call(this, x, y);
          case 3:
            return G__6598__3.call(this, x, y, z);
          default:
            return G__6598__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6598.cljs$lang$maxFixedArity = 3;
      G__6598.cljs$lang$applyTo = G__6598__4.cljs$lang$applyTo;
      G__6598.cljs$core$IFn$_invoke$arity$0 = G__6598__0;
      G__6598.cljs$core$IFn$_invoke$arity$1 = G__6598__1;
      G__6598.cljs$core$IFn$_invoke$arity$2 = G__6598__2;
      G__6598.cljs$core$IFn$_invoke$arity$3 = G__6598__3;
      G__6598.cljs$core$IFn$_invoke$arity$variadic = G__6598__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__6598;
    }();
  };
  var comp__4 = function() {
    var G__6601__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__6602__delegate = function(args) {
            var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
            var fs__$2 = cljs.core.next.call(null, fs__$1);
            while (true) {
              if (fs__$2) {
                var G__6603 = cljs.core.first.call(null, fs__$2).call(null, ret);
                var G__6604 = cljs.core.next.call(null, fs__$2);
                ret = G__6603;
                fs__$2 = G__6604;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__6602 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__6602__delegate.call(this, args);
          };
          G__6602.cljs$lang$maxFixedArity = 0;
          G__6602.cljs$lang$applyTo = function(arglist__6605) {
            var args = cljs.core.seq(arglist__6605);
            return G__6602__delegate(args);
          };
          G__6602.cljs$core$IFn$_invoke$arity$variadic = G__6602__delegate;
          return G__6602;
        }();
      }(fs__$1);
    };
    var G__6601 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6601__delegate.call(this, f1, f2, f3, fs);
    };
    G__6601.cljs$lang$maxFixedArity = 3;
    G__6601.cljs$lang$applyTo = function(arglist__6606) {
      var f1 = cljs.core.first(arglist__6606);
      arglist__6606 = cljs.core.next(arglist__6606);
      var f2 = cljs.core.first(arglist__6606);
      arglist__6606 = cljs.core.next(arglist__6606);
      var f3 = cljs.core.first(arglist__6606);
      var fs = cljs.core.rest(arglist__6606);
      return G__6601__delegate(f1, f2, f3, fs);
    };
    G__6601.cljs$core$IFn$_invoke$arity$variadic = G__6601__delegate;
    return G__6601;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__6607__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args);
      };
      var G__6607 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__6607__delegate.call(this, args);
      };
      G__6607.cljs$lang$maxFixedArity = 0;
      G__6607.cljs$lang$applyTo = function(arglist__6608) {
        var args = cljs.core.seq(arglist__6608);
        return G__6607__delegate(args);
      };
      G__6607.cljs$core$IFn$_invoke$arity$variadic = G__6607__delegate;
      return G__6607;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__6609__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args);
      };
      var G__6609 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__6609__delegate.call(this, args);
      };
      G__6609.cljs$lang$maxFixedArity = 0;
      G__6609.cljs$lang$applyTo = function(arglist__6610) {
        var args = cljs.core.seq(arglist__6610);
        return G__6609__delegate(args);
      };
      G__6609.cljs$core$IFn$_invoke$arity$variadic = G__6609__delegate;
      return G__6609;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__6611__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args);
      };
      var G__6611 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__6611__delegate.call(this, args);
      };
      G__6611.cljs$lang$maxFixedArity = 0;
      G__6611.cljs$lang$applyTo = function(arglist__6612) {
        var args = cljs.core.seq(arglist__6612);
        return G__6611__delegate(args);
      };
      G__6611.cljs$core$IFn$_invoke$arity$variadic = G__6611__delegate;
      return G__6611;
    }();
  };
  var partial__5 = function() {
    var G__6613__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__6614__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__6614 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__6614__delegate.call(this, args);
        };
        G__6614.cljs$lang$maxFixedArity = 0;
        G__6614.cljs$lang$applyTo = function(arglist__6615) {
          var args = cljs.core.seq(arglist__6615);
          return G__6614__delegate(args);
        };
        G__6614.cljs$core$IFn$_invoke$arity$variadic = G__6614__delegate;
        return G__6614;
      }();
    };
    var G__6613 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__6613__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__6613.cljs$lang$maxFixedArity = 4;
    G__6613.cljs$lang$applyTo = function(arglist__6616) {
      var f = cljs.core.first(arglist__6616);
      arglist__6616 = cljs.core.next(arglist__6616);
      var arg1 = cljs.core.first(arglist__6616);
      arglist__6616 = cljs.core.next(arglist__6616);
      var arg2 = cljs.core.first(arglist__6616);
      arglist__6616 = cljs.core.next(arglist__6616);
      var arg3 = cljs.core.first(arglist__6616);
      var more = cljs.core.rest(arglist__6616);
      return G__6613__delegate(f, arg1, arg2, arg3, more);
    };
    G__6613.cljs$core$IFn$_invoke$arity$variadic = G__6613__delegate;
    return G__6613;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__6617 = null;
      var G__6617__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__6617__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__6617__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__6617__4 = function() {
        var G__6618__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__6618 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6618__delegate.call(this, a, b, c, ds);
        };
        G__6618.cljs$lang$maxFixedArity = 3;
        G__6618.cljs$lang$applyTo = function(arglist__6619) {
          var a = cljs.core.first(arglist__6619);
          arglist__6619 = cljs.core.next(arglist__6619);
          var b = cljs.core.first(arglist__6619);
          arglist__6619 = cljs.core.next(arglist__6619);
          var c = cljs.core.first(arglist__6619);
          var ds = cljs.core.rest(arglist__6619);
          return G__6618__delegate(a, b, c, ds);
        };
        G__6618.cljs$core$IFn$_invoke$arity$variadic = G__6618__delegate;
        return G__6618;
      }();
      G__6617 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__6617__1.call(this, a);
          case 2:
            return G__6617__2.call(this, a, b);
          case 3:
            return G__6617__3.call(this, a, b, c);
          default:
            return G__6617__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6617.cljs$lang$maxFixedArity = 3;
      G__6617.cljs$lang$applyTo = G__6617__4.cljs$lang$applyTo;
      G__6617.cljs$core$IFn$_invoke$arity$1 = G__6617__1;
      G__6617.cljs$core$IFn$_invoke$arity$2 = G__6617__2;
      G__6617.cljs$core$IFn$_invoke$arity$3 = G__6617__3;
      G__6617.cljs$core$IFn$_invoke$arity$variadic = G__6617__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__6617;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__6620 = null;
      var G__6620__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__6620__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__6620__4 = function() {
        var G__6621__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__6621 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6621__delegate.call(this, a, b, c, ds);
        };
        G__6621.cljs$lang$maxFixedArity = 3;
        G__6621.cljs$lang$applyTo = function(arglist__6622) {
          var a = cljs.core.first(arglist__6622);
          arglist__6622 = cljs.core.next(arglist__6622);
          var b = cljs.core.first(arglist__6622);
          arglist__6622 = cljs.core.next(arglist__6622);
          var c = cljs.core.first(arglist__6622);
          var ds = cljs.core.rest(arglist__6622);
          return G__6621__delegate(a, b, c, ds);
        };
        G__6621.cljs$core$IFn$_invoke$arity$variadic = G__6621__delegate;
        return G__6621;
      }();
      G__6620 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__6620__2.call(this, a, b);
          case 3:
            return G__6620__3.call(this, a, b, c);
          default:
            return G__6620__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6620.cljs$lang$maxFixedArity = 3;
      G__6620.cljs$lang$applyTo = G__6620__4.cljs$lang$applyTo;
      G__6620.cljs$core$IFn$_invoke$arity$2 = G__6620__2;
      G__6620.cljs$core$IFn$_invoke$arity$3 = G__6620__3;
      G__6620.cljs$core$IFn$_invoke$arity$variadic = G__6620__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__6620;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__6623 = null;
      var G__6623__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__6623__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__6623__4 = function() {
        var G__6624__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__6624 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6624__delegate.call(this, a, b, c, ds);
        };
        G__6624.cljs$lang$maxFixedArity = 3;
        G__6624.cljs$lang$applyTo = function(arglist__6625) {
          var a = cljs.core.first(arglist__6625);
          arglist__6625 = cljs.core.next(arglist__6625);
          var b = cljs.core.first(arglist__6625);
          arglist__6625 = cljs.core.next(arglist__6625);
          var c = cljs.core.first(arglist__6625);
          var ds = cljs.core.rest(arglist__6625);
          return G__6624__delegate(a, b, c, ds);
        };
        G__6624.cljs$core$IFn$_invoke$arity$variadic = G__6624__delegate;
        return G__6624;
      }();
      G__6623 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__6623__2.call(this, a, b);
          case 3:
            return G__6623__3.call(this, a, b, c);
          default:
            return G__6623__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6623.cljs$lang$maxFixedArity = 3;
      G__6623.cljs$lang$applyTo = G__6623__4.cljs$lang$applyTo;
      G__6623.cljs$core$IFn$_invoke$arity$2 = G__6623__2;
      G__6623.cljs$core$IFn$_invoke$arity$3 = G__6623__3;
      G__6623.cljs$core$IFn$_invoke$arity$variadic = G__6623__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__6623;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4508__auto___6626 = size;
          var i_6627 = 0;
          while (true) {
            if (i_6627 < n__4508__auto___6626) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_6627, cljs.core._nth.call(null, c, i_6627)));
              var G__6628 = i_6627 + 1;
              i_6627 = G__6628;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(f1) {
      return function() {
        var G__6629 = null;
        var G__6629__0 = function() {
          return f1.call(null);
        };
        var G__6629__1 = function(result) {
          return f1.call(null, result);
        };
        var G__6629__2 = function(result, input) {
          var v = f.call(null, input);
          if (v == null) {
            return result;
          } else {
            return f1.call(null, result, v);
          }
        };
        G__6629 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__6629__0.call(this);
            case 1:
              return G__6629__1.call(this, result);
            case 2:
              return G__6629__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__6629.cljs$core$IFn$_invoke$arity$0 = G__6629__0;
        G__6629.cljs$core$IFn$_invoke$arity$1 = G__6629__1;
        G__6629.cljs$core$IFn$_invoke$arity$2 = G__6629__2;
        return G__6629;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4508__auto___6630 = size;
          var i_6631 = 0;
          while (true) {
            if (i_6631 < n__4508__auto___6630) {
              var x_6632 = f.call(null, cljs.core._nth.call(null, c, i_6631));
              if (x_6632 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_6632);
              }
              var G__6633 = i_6631 + 1;
              i_6631 = G__6633;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, cljs.core.first.call(null, s));
          if (x == null) {
            return keep.call(null, f, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Atom");
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__6634 = cljs.core.seq.call(null, self__.watches);
  var chunk__6635 = null;
  var count__6636 = 0;
  var i__6637 = 0;
  while (true) {
    if (i__6637 < count__6636) {
      var vec__6638 = cljs.core._nth.call(null, chunk__6635, i__6637);
      var key = cljs.core.nth.call(null, vec__6638, 0, null);
      var f = cljs.core.nth.call(null, vec__6638, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__6640 = seq__6634;
      var G__6641 = chunk__6635;
      var G__6642 = count__6636;
      var G__6643 = i__6637 + 1;
      seq__6634 = G__6640;
      chunk__6635 = G__6641;
      count__6636 = G__6642;
      i__6637 = G__6643;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__6634);
      if (temp__4126__auto__) {
        var seq__6634__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6634__$1)) {
          var c__4408__auto__ = cljs.core.chunk_first.call(null, seq__6634__$1);
          var G__6644 = cljs.core.chunk_rest.call(null, seq__6634__$1);
          var G__6645 = c__4408__auto__;
          var G__6646 = cljs.core.count.call(null, c__4408__auto__);
          var G__6647 = 0;
          seq__6634 = G__6644;
          chunk__6635 = G__6645;
          count__6636 = G__6646;
          i__6637 = G__6647;
          continue;
        } else {
          var vec__6639 = cljs.core.first.call(null, seq__6634__$1);
          var key = cljs.core.nth.call(null, vec__6639, 0, null);
          var f = cljs.core.nth.call(null, vec__6639, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__6648 = cljs.core.next.call(null, seq__6634__$1);
          var G__6649 = null;
          var G__6650 = 0;
          var G__6651 = 0;
          seq__6634 = G__6648;
          chunk__6635 = G__6649;
          count__6636 = G__6650;
          i__6637 = G__6651;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__6655__delegate = function(x, p__6652) {
      var map__6654 = p__6652;
      var map__6654__$1 = cljs.core.seq_QMARK_.call(null, map__6654) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6654) : map__6654;
      var validator = cljs.core.get.call(null, map__6654__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.call(null, map__6654__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__6655 = function(x, var_args) {
      var p__6652 = null;
      if (arguments.length > 1) {
        p__6652 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__6655__delegate.call(this, x, p__6652);
    };
    G__6655.cljs$lang$maxFixedArity = 1;
    G__6655.cljs$lang$applyTo = function(arglist__6656) {
      var x = cljs.core.first(arglist__6656);
      var p__6652 = cljs.core.rest(arglist__6656);
      return G__6655__delegate(x, p__6652);
    };
    G__6655.cljs$core$IFn$_invoke$arity$variadic = G__6655__delegate;
    return G__6655;
  }();
  atom = function(x, var_args) {
    var p__6652 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.call(null, new_value))) {
      } else {
        throw new Error("Assert failed: Validator rejected reference state\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null)))));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches.call(null, a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_.call(null, a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__6657__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.call(null, a, f, x, y, more);
      }
    };
    var G__6657 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__6657__delegate.call(this, a, f, x, y, more);
    };
    G__6657.cljs$lang$maxFixedArity = 4;
    G__6657.cljs$lang$applyTo = function(arglist__6658) {
      var a = cljs.core.first(arglist__6658);
      arglist__6658 = cljs.core.next(arglist__6658);
      var f = cljs.core.first(arglist__6658);
      arglist__6658 = cljs.core.next(arglist__6658);
      var x = cljs.core.first(arglist__6658);
      arglist__6658 = cljs.core.next(arglist__6658);
      var y = cljs.core.first(arglist__6658);
      var more = cljs.core.rest(arglist__6658);
      return G__6657__delegate(a, f, x, y, more);
    };
    G__6657.cljs$core$IFn$_invoke$arity$variadic = G__6657__delegate;
    return G__6657;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(f1) {
      var ia = cljs.core.atom.call(null, -1);
      return function(ia) {
        return function() {
          var G__6659 = null;
          var G__6659__0 = function() {
            return f1.call(null);
          };
          var G__6659__1 = function(result) {
            return f1.call(null, result);
          };
          var G__6659__2 = function(result, input) {
            var i = cljs.core.swap_BANG_.call(null, ia, cljs.core.inc);
            var v = f.call(null, i, input);
            if (v == null) {
              return result;
            } else {
              return f1.call(null, result, v);
            }
          };
          G__6659 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__6659__0.call(this);
              case 1:
                return G__6659__1.call(this, result);
              case 2:
                return G__6659__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__6659.cljs$core$IFn$_invoke$arity$0 = G__6659__0;
          G__6659.cljs$core$IFn$_invoke$arity$1 = G__6659__1;
          G__6659.cljs$core$IFn$_invoke$arity$2 = G__6659__2;
          return G__6659;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
            var c = cljs.core.chunk_first.call(null, s);
            var size = cljs.core.count.call(null, c);
            var b = cljs.core.chunk_buffer.call(null, size);
            var n__4508__auto___6660 = size;
            var i_6661 = 0;
            while (true) {
              if (i_6661 < n__4508__auto___6660) {
                var x_6662 = f.call(null, idx + i_6661, cljs.core._nth.call(null, c, i_6661));
                if (x_6662 == null) {
                } else {
                  cljs.core.chunk_append.call(null, b, x_6662);
                }
                var G__6663 = i_6661 + 1;
                i_6661 = G__6663;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
          } else {
            var x = f.call(null, idx, cljs.core.first.call(null, s));
            if (x == null) {
              return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
            } else {
              return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi.call(null, 0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3627__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3627__auto__)) {
            return p.call(null, y);
          } else {
            return and__3627__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3627__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3627__auto__)) {
            var and__3627__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__3627__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__3627__auto____$1;
            }
          } else {
            return and__3627__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__6670__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__6670 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6670__delegate.call(this, x, y, z, args);
        };
        G__6670.cljs$lang$maxFixedArity = 3;
        G__6670.cljs$lang$applyTo = function(arglist__6671) {
          var x = cljs.core.first(arglist__6671);
          arglist__6671 = cljs.core.next(arglist__6671);
          var y = cljs.core.first(arglist__6671);
          arglist__6671 = cljs.core.next(arglist__6671);
          var z = cljs.core.first(arglist__6671);
          var args = cljs.core.rest(arglist__6671);
          return G__6670__delegate(x, y, z, args);
        };
        G__6670.cljs$core$IFn$_invoke$arity$variadic = G__6670__delegate;
        return G__6670;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3627__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3627__auto__)) {
            return p2.call(null, x);
          } else {
            return and__3627__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3627__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3627__auto__)) {
            var and__3627__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3627__auto____$1)) {
              var and__3627__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__3627__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__3627__auto____$2;
              }
            } else {
              return and__3627__auto____$1;
            }
          } else {
            return and__3627__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3627__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3627__auto__)) {
            var and__3627__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3627__auto____$1)) {
              var and__3627__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__3627__auto____$2)) {
                var and__3627__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__3627__auto____$3)) {
                  var and__3627__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3627__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__3627__auto____$4;
                  }
                } else {
                  return and__3627__auto____$3;
                }
              } else {
                return and__3627__auto____$2;
              }
            } else {
              return and__3627__auto____$1;
            }
          } else {
            return and__3627__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__6672__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__6664_SHARP_) {
            var and__3627__auto__ = p1.call(null, p1__6664_SHARP_);
            if (cljs.core.truth_(and__3627__auto__)) {
              return p2.call(null, p1__6664_SHARP_);
            } else {
              return and__3627__auto__;
            }
          }, args));
        };
        var G__6672 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6672__delegate.call(this, x, y, z, args);
        };
        G__6672.cljs$lang$maxFixedArity = 3;
        G__6672.cljs$lang$applyTo = function(arglist__6673) {
          var x = cljs.core.first(arglist__6673);
          arglist__6673 = cljs.core.next(arglist__6673);
          var y = cljs.core.first(arglist__6673);
          arglist__6673 = cljs.core.next(arglist__6673);
          var z = cljs.core.first(arglist__6673);
          var args = cljs.core.rest(arglist__6673);
          return G__6672__delegate(x, y, z, args);
        };
        G__6672.cljs$core$IFn$_invoke$arity$variadic = G__6672__delegate;
        return G__6672;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3627__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3627__auto__)) {
            var and__3627__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3627__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__3627__auto____$1;
            }
          } else {
            return and__3627__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3627__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3627__auto__)) {
            var and__3627__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3627__auto____$1)) {
              var and__3627__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3627__auto____$2)) {
                var and__3627__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3627__auto____$3)) {
                  var and__3627__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3627__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__3627__auto____$4;
                  }
                } else {
                  return and__3627__auto____$3;
                }
              } else {
                return and__3627__auto____$2;
              }
            } else {
              return and__3627__auto____$1;
            }
          } else {
            return and__3627__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3627__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3627__auto__)) {
            var and__3627__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3627__auto____$1)) {
              var and__3627__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3627__auto____$2)) {
                var and__3627__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3627__auto____$3)) {
                  var and__3627__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3627__auto____$4)) {
                    var and__3627__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__3627__auto____$5)) {
                      var and__3627__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__3627__auto____$6)) {
                        var and__3627__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__3627__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__3627__auto____$7;
                        }
                      } else {
                        return and__3627__auto____$6;
                      }
                    } else {
                      return and__3627__auto____$5;
                    }
                  } else {
                    return and__3627__auto____$4;
                  }
                } else {
                  return and__3627__auto____$3;
                }
              } else {
                return and__3627__auto____$2;
              }
            } else {
              return and__3627__auto____$1;
            }
          } else {
            return and__3627__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__6674__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__6665_SHARP_) {
            var and__3627__auto__ = p1.call(null, p1__6665_SHARP_);
            if (cljs.core.truth_(and__3627__auto__)) {
              var and__3627__auto____$1 = p2.call(null, p1__6665_SHARP_);
              if (cljs.core.truth_(and__3627__auto____$1)) {
                return p3.call(null, p1__6665_SHARP_);
              } else {
                return and__3627__auto____$1;
              }
            } else {
              return and__3627__auto__;
            }
          }, args));
        };
        var G__6674 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6674__delegate.call(this, x, y, z, args);
        };
        G__6674.cljs$lang$maxFixedArity = 3;
        G__6674.cljs$lang$applyTo = function(arglist__6675) {
          var x = cljs.core.first(arglist__6675);
          arglist__6675 = cljs.core.next(arglist__6675);
          var y = cljs.core.first(arglist__6675);
          arglist__6675 = cljs.core.next(arglist__6675);
          var z = cljs.core.first(arglist__6675);
          var args = cljs.core.rest(arglist__6675);
          return G__6674__delegate(x, y, z, args);
        };
        G__6674.cljs$core$IFn$_invoke$arity$variadic = G__6674__delegate;
        return G__6674;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__6676__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__6666_SHARP_) {
                return p1__6666_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__6667_SHARP_) {
                var and__3627__auto__ = p1__6667_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3627__auto__)) {
                  return p1__6667_SHARP_.call(null, y);
                } else {
                  return and__3627__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__6668_SHARP_) {
                var and__3627__auto__ = p1__6668_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3627__auto__)) {
                  var and__3627__auto____$1 = p1__6668_SHARP_.call(null, y);
                  if (cljs.core.truth_(and__3627__auto____$1)) {
                    return p1__6668_SHARP_.call(null, z);
                  } else {
                    return and__3627__auto____$1;
                  }
                } else {
                  return and__3627__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__6677__delegate = function(x, y, z, args) {
              return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(ps__$1) {
                return function(p1__6669_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__6669_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__6677 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__6677__delegate.call(this, x, y, z, args);
            };
            G__6677.cljs$lang$maxFixedArity = 3;
            G__6677.cljs$lang$applyTo = function(arglist__6678) {
              var x = cljs.core.first(arglist__6678);
              arglist__6678 = cljs.core.next(arglist__6678);
              var y = cljs.core.first(arglist__6678);
              arglist__6678 = cljs.core.next(arglist__6678);
              var z = cljs.core.first(arglist__6678);
              var args = cljs.core.rest(arglist__6678);
              return G__6677__delegate(x, y, z, args);
            };
            G__6677.cljs$core$IFn$_invoke$arity$variadic = G__6677__delegate;
            return G__6677;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__6676 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6676__delegate.call(this, p1, p2, p3, ps);
    };
    G__6676.cljs$lang$maxFixedArity = 3;
    G__6676.cljs$lang$applyTo = function(arglist__6679) {
      var p1 = cljs.core.first(arglist__6679);
      arglist__6679 = cljs.core.next(arglist__6679);
      var p2 = cljs.core.first(arglist__6679);
      arglist__6679 = cljs.core.next(arglist__6679);
      var p3 = cljs.core.first(arglist__6679);
      var ps = cljs.core.rest(arglist__6679);
      return G__6676__delegate(p1, p2, p3, ps);
    };
    G__6676.cljs$core$IFn$_invoke$arity$variadic = G__6676__delegate;
    return G__6676;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3639__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3639__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__3639__auto____$1)) {
            return or__3639__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__6686__delegate = function(x, y, z, args) {
          var or__3639__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__3639__auto__)) {
            return or__3639__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__6686 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6686__delegate.call(this, x, y, z, args);
        };
        G__6686.cljs$lang$maxFixedArity = 3;
        G__6686.cljs$lang$applyTo = function(arglist__6687) {
          var x = cljs.core.first(arglist__6687);
          arglist__6687 = cljs.core.next(arglist__6687);
          var y = cljs.core.first(arglist__6687);
          arglist__6687 = cljs.core.next(arglist__6687);
          var z = cljs.core.first(arglist__6687);
          var args = cljs.core.rest(arglist__6687);
          return G__6686__delegate(x, y, z, args);
        };
        G__6686.cljs$core$IFn$_invoke$arity$variadic = G__6686__delegate;
        return G__6686;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3639__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3639__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3639__auto____$1)) {
            return or__3639__auto____$1;
          } else {
            var or__3639__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__3639__auto____$2)) {
              return or__3639__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3639__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3639__auto____$1)) {
            return or__3639__auto____$1;
          } else {
            var or__3639__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__3639__auto____$2)) {
              return or__3639__auto____$2;
            } else {
              var or__3639__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__3639__auto____$3)) {
                return or__3639__auto____$3;
              } else {
                var or__3639__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3639__auto____$4)) {
                  return or__3639__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__6688__delegate = function(x, y, z, args) {
          var or__3639__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__3639__auto__)) {
            return or__3639__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3639__auto__) {
              return function(p1__6680_SHARP_) {
                var or__3639__auto____$1 = p1.call(null, p1__6680_SHARP_);
                if (cljs.core.truth_(or__3639__auto____$1)) {
                  return or__3639__auto____$1;
                } else {
                  return p2.call(null, p1__6680_SHARP_);
                }
              };
            }(or__3639__auto__), args);
          }
        };
        var G__6688 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6688__delegate.call(this, x, y, z, args);
        };
        G__6688.cljs$lang$maxFixedArity = 3;
        G__6688.cljs$lang$applyTo = function(arglist__6689) {
          var x = cljs.core.first(arglist__6689);
          arglist__6689 = cljs.core.next(arglist__6689);
          var y = cljs.core.first(arglist__6689);
          arglist__6689 = cljs.core.next(arglist__6689);
          var z = cljs.core.first(arglist__6689);
          var args = cljs.core.rest(arglist__6689);
          return G__6688__delegate(x, y, z, args);
        };
        G__6688.cljs$core$IFn$_invoke$arity$variadic = G__6688__delegate;
        return G__6688;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3639__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3639__auto____$1)) {
            return or__3639__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3639__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3639__auto____$1)) {
            return or__3639__auto____$1;
          } else {
            var or__3639__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3639__auto____$2)) {
              return or__3639__auto____$2;
            } else {
              var or__3639__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3639__auto____$3)) {
                return or__3639__auto____$3;
              } else {
                var or__3639__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3639__auto____$4)) {
                  return or__3639__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3639__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3639__auto____$1)) {
            return or__3639__auto____$1;
          } else {
            var or__3639__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3639__auto____$2)) {
              return or__3639__auto____$2;
            } else {
              var or__3639__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3639__auto____$3)) {
                return or__3639__auto____$3;
              } else {
                var or__3639__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3639__auto____$4)) {
                  return or__3639__auto____$4;
                } else {
                  var or__3639__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__3639__auto____$5)) {
                    return or__3639__auto____$5;
                  } else {
                    var or__3639__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__3639__auto____$6)) {
                      return or__3639__auto____$6;
                    } else {
                      var or__3639__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__3639__auto____$7)) {
                        return or__3639__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__6690__delegate = function(x, y, z, args) {
          var or__3639__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__3639__auto__)) {
            return or__3639__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3639__auto__) {
              return function(p1__6681_SHARP_) {
                var or__3639__auto____$1 = p1.call(null, p1__6681_SHARP_);
                if (cljs.core.truth_(or__3639__auto____$1)) {
                  return or__3639__auto____$1;
                } else {
                  var or__3639__auto____$2 = p2.call(null, p1__6681_SHARP_);
                  if (cljs.core.truth_(or__3639__auto____$2)) {
                    return or__3639__auto____$2;
                  } else {
                    return p3.call(null, p1__6681_SHARP_);
                  }
                }
              };
            }(or__3639__auto__), args);
          }
        };
        var G__6690 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6690__delegate.call(this, x, y, z, args);
        };
        G__6690.cljs$lang$maxFixedArity = 3;
        G__6690.cljs$lang$applyTo = function(arglist__6691) {
          var x = cljs.core.first(arglist__6691);
          arglist__6691 = cljs.core.next(arglist__6691);
          var y = cljs.core.first(arglist__6691);
          arglist__6691 = cljs.core.next(arglist__6691);
          var z = cljs.core.first(arglist__6691);
          var args = cljs.core.rest(arglist__6691);
          return G__6690__delegate(x, y, z, args);
        };
        G__6690.cljs$core$IFn$_invoke$arity$variadic = G__6690__delegate;
        return G__6690;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__6692__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__6682_SHARP_) {
                return p1__6682_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__6683_SHARP_) {
                var or__3639__auto__ = p1__6683_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3639__auto__)) {
                  return or__3639__auto__;
                } else {
                  return p1__6683_SHARP_.call(null, y);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__6684_SHARP_) {
                var or__3639__auto__ = p1__6684_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3639__auto__)) {
                  return or__3639__auto__;
                } else {
                  var or__3639__auto____$1 = p1__6684_SHARP_.call(null, y);
                  if (cljs.core.truth_(or__3639__auto____$1)) {
                    return or__3639__auto____$1;
                  } else {
                    return p1__6684_SHARP_.call(null, z);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__6693__delegate = function(x, y, z, args) {
              var or__3639__auto__ = spn.call(null, x, y, z);
              if (cljs.core.truth_(or__3639__auto__)) {
                return or__3639__auto__;
              } else {
                return cljs.core.some.call(null, function(or__3639__auto__, ps__$1) {
                  return function(p1__6685_SHARP_) {
                    return cljs.core.some.call(null, p1__6685_SHARP_, args);
                  };
                }(or__3639__auto__, ps__$1), ps__$1);
              }
            };
            var G__6693 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__6693__delegate.call(this, x, y, z, args);
            };
            G__6693.cljs$lang$maxFixedArity = 3;
            G__6693.cljs$lang$applyTo = function(arglist__6694) {
              var x = cljs.core.first(arglist__6694);
              arglist__6694 = cljs.core.next(arglist__6694);
              var y = cljs.core.first(arglist__6694);
              arglist__6694 = cljs.core.next(arglist__6694);
              var z = cljs.core.first(arglist__6694);
              var args = cljs.core.rest(arglist__6694);
              return G__6693__delegate(x, y, z, args);
            };
            G__6693.cljs$core$IFn$_invoke$arity$variadic = G__6693__delegate;
            return G__6693;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__6692 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6692__delegate.call(this, p1, p2, p3, ps);
    };
    G__6692.cljs$lang$maxFixedArity = 3;
    G__6692.cljs$lang$applyTo = function(arglist__6695) {
      var p1 = cljs.core.first(arglist__6695);
      arglist__6695 = cljs.core.next(arglist__6695);
      var p2 = cljs.core.first(arglist__6695);
      arglist__6695 = cljs.core.next(arglist__6695);
      var p3 = cljs.core.first(arglist__6695);
      var ps = cljs.core.rest(arglist__6695);
      return G__6692__delegate(p1, p2, p3, ps);
    };
    G__6692.cljs$core$IFn$_invoke$arity$variadic = G__6692__delegate;
    return G__6692;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(f1) {
      return function() {
        var G__6697 = null;
        var G__6697__0 = function() {
          return f1.call(null);
        };
        var G__6697__1 = function(result) {
          return f1.call(null, result);
        };
        var G__6697__2 = function(result, input) {
          return f1.call(null, result, f.call(null, input));
        };
        var G__6697__3 = function() {
          var G__6698__delegate = function(result, input, inputs) {
            return f1.call(null, result, cljs.core.apply.call(null, f, input, inputs));
          };
          var G__6698 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              inputs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
            }
            return G__6698__delegate.call(this, result, input, inputs);
          };
          G__6698.cljs$lang$maxFixedArity = 2;
          G__6698.cljs$lang$applyTo = function(arglist__6699) {
            var result = cljs.core.first(arglist__6699);
            arglist__6699 = cljs.core.next(arglist__6699);
            var input = cljs.core.first(arglist__6699);
            var inputs = cljs.core.rest(arglist__6699);
            return G__6698__delegate(result, input, inputs);
          };
          G__6698.cljs$core$IFn$_invoke$arity$variadic = G__6698__delegate;
          return G__6698;
        }();
        G__6697 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__6697__0.call(this);
            case 1:
              return G__6697__1.call(this, result);
            case 2:
              return G__6697__2.call(this, result, input);
            default:
              return G__6697__3.cljs$core$IFn$_invoke$arity$variadic(result, input, cljs.core.array_seq(arguments, 2));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__6697.cljs$lang$maxFixedArity = 2;
        G__6697.cljs$lang$applyTo = G__6697__3.cljs$lang$applyTo;
        G__6697.cljs$core$IFn$_invoke$arity$0 = G__6697__0;
        G__6697.cljs$core$IFn$_invoke$arity$1 = G__6697__1;
        G__6697.cljs$core$IFn$_invoke$arity$2 = G__6697__2;
        G__6697.cljs$core$IFn$_invoke$arity$variadic = G__6697__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__6697;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4508__auto___6700 = size;
          var i_6701 = 0;
          while (true) {
            if (i_6701 < n__4508__auto___6700) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_6701)));
              var G__6702 = i_6701 + 1;
              i_6701 = G__6702;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__6703__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(step) {
        return function(p1__6696_SHARP_) {
          return cljs.core.apply.call(null, f, p1__6696_SHARP_);
        };
      }(step), step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)));
    };
    var G__6703 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__6703__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__6703.cljs$lang$maxFixedArity = 4;
    G__6703.cljs$lang$applyTo = function(arglist__6704) {
      var f = cljs.core.first(arglist__6704);
      arglist__6704 = cljs.core.next(arglist__6704);
      var c1 = cljs.core.first(arglist__6704);
      arglist__6704 = cljs.core.next(arglist__6704);
      var c2 = cljs.core.first(arglist__6704);
      arglist__6704 = cljs.core.next(arglist__6704);
      var c3 = cljs.core.first(arglist__6704);
      var colls = cljs.core.rest(arglist__6704);
      return G__6703__delegate(f, c1, c2, c3, colls);
    };
    G__6703.cljs$core$IFn$_invoke$arity$variadic = G__6703__delegate;
    return G__6703;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(f1) {
      var na = cljs.core.atom.call(null, n);
      return function(na) {
        return function() {
          var G__6705 = null;
          var G__6705__0 = function() {
            return f1.call(null);
          };
          var G__6705__1 = function(result) {
            return f1.call(null, result);
          };
          var G__6705__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            var nn = cljs.core.swap_BANG_.call(null, na, cljs.core.dec);
            var result__$1 = n__$1 > 0 ? f1.call(null, result, input) : result;
            if (!(nn > 0)) {
              return cljs.core.reduced.call(null, result__$1);
            } else {
              return result__$1;
            }
          };
          G__6705 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__6705__0.call(this);
              case 1:
                return G__6705__1.call(this, result);
              case 2:
                return G__6705__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__6705.cljs$core$IFn$_invoke$arity$0 = G__6705__0;
          G__6705.cljs$core$IFn$_invoke$arity$1 = G__6705__1;
          G__6705.cljs$core$IFn$_invoke$arity$2 = G__6705__2;
          return G__6705;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(f1) {
      var na = cljs.core.atom.call(null, n);
      return function(na) {
        return function() {
          var G__6706 = null;
          var G__6706__0 = function() {
            return f1.call(null);
          };
          var G__6706__1 = function(result) {
            return f1.call(null, result);
          };
          var G__6706__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            cljs.core.swap_BANG_.call(null, na, cljs.core.dec);
            if (n__$1 > 0) {
              return result;
            } else {
              return f1.call(null, result, input);
            }
          };
          G__6706 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__6706__0.call(this);
              case 1:
                return G__6706__1.call(this, result);
              case 2:
                return G__6706__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__6706.cljs$core$IFn$_invoke$arity$0 = G__6706__0;
          G__6706.cljs$core$IFn$_invoke$arity$1 = G__6706__1;
          G__6706.cljs$core$IFn$_invoke$arity$2 = G__6706__2;
          return G__6706;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (n__$1 > 0 && s) {
          var G__6707 = n__$1 - 1;
          var G__6708 = cljs.core.rest.call(null, s);
          n__$1 = G__6707;
          coll__$1 = G__6708;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__6709 = cljs.core.next.call(null, s);
      var G__6710 = cljs.core.next.call(null, lead);
      s = G__6709;
      lead = G__6710;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(f1) {
      var da = cljs.core.atom.call(null, true);
      return function(da) {
        return function() {
          var G__6711 = null;
          var G__6711__0 = function() {
            return f1.call(null);
          };
          var G__6711__1 = function(result) {
            return f1.call(null, result);
          };
          var G__6711__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref.call(null, da);
            if (cljs.core.truth_(function() {
              var and__3627__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__3627__auto__)) {
                return pred.call(null, input);
              } else {
                return and__3627__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.reset_BANG_.call(null, da, null);
              return f1.call(null, result, input);
            }
          };
          G__6711 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__6711__0.call(this);
              case 1:
                return G__6711__1.call(this, result);
              case 2:
                return G__6711__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__6711.cljs$core$IFn$_invoke$arity$0 = G__6711__0;
          G__6711.cljs$core$IFn$_invoke$arity$1 = G__6711__1;
          G__6711.cljs$core$IFn$_invoke$arity$2 = G__6711__2;
          return G__6711;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (cljs.core.truth_(function() {
          var and__3627__auto__ = s;
          if (and__3627__auto__) {
            return pred__$1.call(null, cljs.core.first.call(null, s));
          } else {
            return and__3627__auto__;
          }
        }())) {
          var G__6712 = pred__$1;
          var G__6713 = cljs.core.rest.call(null, s);
          pred__$1 = G__6712;
          coll__$1 = G__6713;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__6714__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__6714 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6714__delegate.call(this, c1, c2, colls);
    };
    G__6714.cljs$lang$maxFixedArity = 2;
    G__6714.cljs$lang$applyTo = function(arglist__6715) {
      var c1 = cljs.core.first(arglist__6715);
      arglist__6715 = cljs.core.next(arglist__6715);
      var c2 = cljs.core.first(arglist__6715);
      var colls = cljs.core.rest(arglist__6715);
      return G__6714__delegate(c1, c2, colls);
    };
    G__6714.cljs$core$IFn$_invoke$arity$variadic = G__6714__delegate;
    return G__6714;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__1 = function(f) {
    return cljs.core.comp.call(null, cljs.core.map.call(null, f), cljs.core.cat);
  };
  var mapcat__2 = function() {
    var G__6716__delegate = function(f, colls) {
      return cljs.core.apply.call(null, cljs.core.concat, cljs.core.apply.call(null, cljs.core.map, f, colls));
    };
    var G__6716 = function(f, var_args) {
      var colls = null;
      if (arguments.length > 1) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__6716__delegate.call(this, f, colls);
    };
    G__6716.cljs$lang$maxFixedArity = 1;
    G__6716.cljs$lang$applyTo = function(arglist__6717) {
      var f = cljs.core.first(arglist__6717);
      var colls = cljs.core.rest(arglist__6717);
      return G__6716__delegate(f, colls);
    };
    G__6716.cljs$core$IFn$_invoke$arity$variadic = G__6716__delegate;
    return G__6716;
  }();
  mapcat = function(f, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return mapcat__1.call(this, f);
      default:
        return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 1;
  mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(f1) {
      return function() {
        var G__6718 = null;
        var G__6718__0 = function() {
          return f1.call(null);
        };
        var G__6718__1 = function(result) {
          return f1.call(null, result);
        };
        var G__6718__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return f1.call(null, result, input);
          } else {
            return result;
          }
        };
        G__6718 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__6718__0.call(this);
            case 1:
              return G__6718__1.call(this, result);
            case 2:
              return G__6718__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__6718.cljs$core$IFn$_invoke$arity$0 = G__6718__0;
        G__6718.cljs$core$IFn$_invoke$arity$1 = G__6718__1;
        G__6718.cljs$core$IFn$_invoke$arity$2 = G__6718__2;
        return G__6718;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4508__auto___6719 = size;
          var i_6720 = 0;
          while (true) {
            if (i_6720 < n__4508__auto___6719) {
              if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_6720)))) {
                cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_6720));
              } else {
              }
              var G__6721 = i_6720 + 1;
              i_6720 = G__6721;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
        } else {
          var f = cljs.core.first.call(null, s);
          var r = cljs.core.rest.call(null, s);
          if (cljs.core.truth_(pred.call(null, f))) {
            return cljs.core.cons.call(null, f, filter.call(null, pred, r));
          } else {
            return filter.call(null, pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__6722_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__6722_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__6725 = to;
        if (G__6725) {
          var bit__4295__auto__ = G__6725.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4295__auto__ || G__6725.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
      } else {
        return cljs.core.reduce.call(null, cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__6726 = to;
      if (G__6726) {
        var bit__4295__auto__ = G__6726.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4295__auto__ || G__6726.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.transduce.call(null, xform, cljs.core.conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
    } else {
      return cljs.core.transduce.call(null, xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__6727__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls));
    };
    var G__6727 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__6727__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__6727.cljs$lang$maxFixedArity = 4;
    G__6727.cljs$lang$applyTo = function(arglist__6728) {
      var f = cljs.core.first(arglist__6728);
      arglist__6728 = cljs.core.next(arglist__6728);
      var c1 = cljs.core.first(arglist__6728);
      arglist__6728 = cljs.core.next(arglist__6728);
      var c2 = cljs.core.first(arglist__6728);
      arglist__6728 = cljs.core.next(arglist__6728);
      var c3 = cljs.core.first(arglist__6728);
      var colls = cljs.core.rest(arglist__6728);
      return G__6727__delegate(f, c1, c2, c3, colls);
    };
    G__6727.cljs$core$IFn$_invoke$arity$variadic = G__6727__delegate;
    return G__6727;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__6730 = m__$1;
          if (G__6730) {
            var bit__4302__auto__ = G__6730.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4302__auto__ || G__6730.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__6730.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__6730);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__6730);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__6731 = sentinel;
            var G__6732 = m__$2;
            var G__6733 = cljs.core.next.call(null, ks__$1);
            sentinel = G__6731;
            m__$1 = G__6732;
            ks__$1 = G__6733;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__6734, v) {
  var vec__6736 = p__6734;
  var k = cljs.core.nth.call(null, vec__6736, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__6736, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__6737, f) {
    var vec__6747 = p__6737;
    var k = cljs.core.nth.call(null, vec__6747, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__6747, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__6738, f, a) {
    var vec__6748 = p__6738;
    var k = cljs.core.nth.call(null, vec__6748, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__6748, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__6739, f, a, b) {
    var vec__6749 = p__6739;
    var k = cljs.core.nth.call(null, vec__6749, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__6749, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__6740, f, a, b, c) {
    var vec__6750 = p__6740;
    var k = cljs.core.nth.call(null, vec__6750, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__6750, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__6752__delegate = function(m, p__6741, f, a, b, c, args) {
      var vec__6751 = p__6741;
      var k = cljs.core.nth.call(null, vec__6751, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__6751, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__6752 = function(m, p__6741, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__6752__delegate.call(this, m, p__6741, f, a, b, c, args);
    };
    G__6752.cljs$lang$maxFixedArity = 6;
    G__6752.cljs$lang$applyTo = function(arglist__6753) {
      var m = cljs.core.first(arglist__6753);
      arglist__6753 = cljs.core.next(arglist__6753);
      var p__6741 = cljs.core.first(arglist__6753);
      arglist__6753 = cljs.core.next(arglist__6753);
      var f = cljs.core.first(arglist__6753);
      arglist__6753 = cljs.core.next(arglist__6753);
      var a = cljs.core.first(arglist__6753);
      arglist__6753 = cljs.core.next(arglist__6753);
      var b = cljs.core.first(arglist__6753);
      arglist__6753 = cljs.core.next(arglist__6753);
      var c = cljs.core.first(arglist__6753);
      var args = cljs.core.rest(arglist__6753);
      return G__6752__delegate(m, p__6741, f, a, b, c, args);
    };
    G__6752.cljs$core$IFn$_invoke$arity$variadic = G__6752__delegate;
    return G__6752;
  }();
  update_in = function(m, p__6741, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__6741, f);
      case 4:
        return update_in__4.call(this, m, p__6741, f, a);
      case 5:
        return update_in__5.call(this, m, p__6741, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__6741, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__6741, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4218__auto__, writer__4219__auto__, opts__4220__auto__) {
  return cljs.core._write.call(null, writer__4219__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__6754 = ll - 5;
      var G__6755 = r;
      ll = G__6754;
      ret = G__6755;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error("No item " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(i) + " in vector of length " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cnt));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__6756 = cljs.core.pv_aget.call(null, node, 0);
      var G__6757 = level - 5;
      node = G__6756;
      level = G__6757;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off.call(null, pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__6758 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
        var G__6759 = level - 5;
        node = G__6758;
        level = G__6759;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for.call(null, pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentVector");
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = f.call(null, init__$2, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
              return init__$3;
            } else {
              var G__6761 = j + 1;
              var G__6762 = init__$3;
              j = G__6761;
              init__$2 = G__6762;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__6763 = i + len;
        var G__6764 = init__$2;
        i = G__6763;
        init__$1 = G__6764;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for.call(null, coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= n) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, val);
    } else {
      throw new Error("Index " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + " out of bounds  [0," + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt) + "]");
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for.call(null, coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = f.call(null, init__$2, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
              return init__$3;
            } else {
              var G__6765 = j + 1;
              var G__6766 = init__$3;
              j = G__6765;
              init__$2 = G__6766;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__6767 = i + len;
        var G__6768 = init__$2;
        i = G__6767;
        init__$1 = G__6768;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      return cljs.core.chunked_seq.call(null, coll__$1, cljs.core.first_array_for_longvec.call(null, coll__$1), 0, 0);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4508__auto___6769 = len;
    var i_6770 = 0;
    while (true) {
      if (i_6770 < n__4508__auto___6769) {
        new_tail[i_6770] = self__.tail[i_6770];
        var G__6771 = i_6770 + 1;
        i_6770 = G__6771;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__6772 = null;
  var G__6772__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__6772__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__6772 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6772__2.call(this, self__, k);
      case 3:
        return G__6772__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6772.cljs$core$IFn$_invoke$arity$2 = G__6772__2;
  G__6772.cljs$core$IFn$_invoke$arity$3 = G__6772__3;
  return G__6772;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args6760) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6760)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__6773 = i + 1;
        var G__6774 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__6773;
        out = G__6774;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__6775) {
    var args = cljs.core.seq(arglist__6775);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Subvec");
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3946__auto__ = self__.end;
    var y__3947__auto__ = v_pos + 1;
    return x__3946__auto__ > y__3947__auto__ ? x__3946__auto__ : y__3947__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq.call(null, i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__6777 = null;
  var G__6777__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__6777__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__6777 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6777__2.call(this, self__, k);
      case 3:
        return G__6777__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6777.cljs$core$IFn$_invoke$arity$2 = G__6777__2;
  G__6777.cljs$core$IFn$_invoke$arity$3 = G__6777__3;
  return G__6777;
}();
cljs.core.Subvec.prototype.apply = function(self__, args6776) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6776)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__6778 = meta;
      var G__6779 = v.v;
      var G__6780 = v.start + start;
      var G__6781 = v.start + end;
      var G__6782 = __hash;
      meta = G__6778;
      v = G__6779;
      start = G__6780;
      end = G__6781;
      __hash = G__6782;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj6786 = {};
    return obj6786;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off.call(null, tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__6787 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
        var G__6788 = level - 5;
        node = G__6787;
        level = G__6788;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/TransientVector");
};
cljs.core.TransientVector.prototype.call = function() {
  var G__6790 = null;
  var G__6790__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__6790__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__6790 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6790__2.call(this, self__, k);
      case 3:
        return G__6790__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6790.cljs$core$IFn$_invoke$arity$2 = G__6790__2;
  G__6790.cljs$core$IFn$_invoke$arity$3 = G__6790__3;
  return G__6790;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args6789) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6789)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset.call(null, node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        throw new Error("Index " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + " out of bounds for TransientVector of length" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentQueue");
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__3639__auto__ = self__.front;
    if (cljs.core.truth_(or__3639__auto__)) {
      return or__3639__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3639__auto__ = self__.rear;
      if (cljs.core.truth_(or__3639__auto__)) {
        return or__3639__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/NeverEquiv");
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__6791 = i + incr;
        i = G__6791;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__6792 = i + 1;
      var G__6793 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__6792;
      out = G__6793;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj6797 = {};
    return obj6797;
  }();
  var l = ks.length;
  var i_6798 = 0;
  while (true) {
    if (i_6798 < l) {
      var k_6799 = ks[i_6798];
      new_obj[k_6799] = obj[k_6799];
      var G__6800 = i_6798 + 1;
      i_6798 = G__6800;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ObjMap");
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__6803 = cljs.core.rest.call(null, keys__$1);
        var G__6804 = init__$2;
        keys__$1 = G__6803;
        init__$1 = G__6804;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(coll__$1) {
      return function(p1__6801_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__6801_SHARP_, self__.strobj[p1__6801_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__6805 = null;
  var G__6805__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__6805__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__6805 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6805__2.call(this, self__, k);
      case 3:
        return G__6805__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6805.cljs$core$IFn$_invoke$arity$2 = G__6805__2;
  G__6805.cljs$core$IFn$_invoke$arity$3 = G__6805__3;
  return G__6805;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args6802) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6802)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj6807 = {};
  return obj6807;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.Iterator = function(s) {
  this.s = s;
};
cljs.core.Iterator.cljs$lang$type = true;
cljs.core.Iterator.cljs$lang$ctorStr = "cljs.core/Iterator";
cljs.core.Iterator.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Iterator");
};
cljs.core.Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_Iterator = function __GT_Iterator(s) {
  return new cljs.core.Iterator(s);
};
cljs.core.iterator = function iterator(coll) {
  return new cljs.core.Iterator(cljs.core.seq.call(null, coll));
};
cljs.core.EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.EntriesIterator.cljs$lang$type = true;
cljs.core.EntriesIterator.cljs$lang$ctorStr = "cljs.core/EntriesIterator";
cljs.core.EntriesIterator.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/EntriesIterator");
};
cljs.core.EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__6808 = cljs.core.first.call(null, self__.s);
    var k = cljs.core.nth.call(null, vec__6808, 0, null);
    var v = cljs.core.nth.call(null, vec__6808, 1, null);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_EntriesIterator = function __GT_EntriesIterator(s) {
  return new cljs.core.EntriesIterator(s);
};
cljs.core.entries_iterator = function entries_iterator(coll) {
  return new cljs.core.EntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.SetEntriesIterator.cljs$lang$type = true;
cljs.core.SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/SetEntriesIterator";
cljs.core.SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/SetEntriesIterator");
};
cljs.core.SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_SetEntriesIterator = function __GT_SetEntriesIterator(s) {
  return new cljs.core.SetEntriesIterator(s);
};
cljs.core.set_entries_iterator = function set_entries_iterator(coll) {
  return new cljs.core.SetEntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__6809 = i + 2;
        i = G__6809;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__6810 = i + 2;
        i = G__6810;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__6811 = i + 2;
        i = G__6811;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__6812 = i + 2;
        i = G__6812;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        var G__6813 = i + 2;
        i = G__6813;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_6814 = 0;
  while (true) {
    if (i_6814 < l) {
      narr[i_6814] = arr[i_6814];
      var G__6815 = i_6814 + 1;
      i_6814 = G__6815;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__6817 = cljs.core.seq.call(null, coll);
  var chunk__6818 = null;
  var count__6819 = 0;
  var i__6820 = 0;
  while (true) {
    if (i__6820 < count__6819) {
      var vec__6821 = cljs.core._nth.call(null, chunk__6818, i__6820);
      var k = cljs.core.nth.call(null, vec__6821, 0, null);
      var v = cljs.core.nth.call(null, vec__6821, 1, null);
      f.call(null, v, k);
      var G__6826 = seq__6817;
      var G__6827 = chunk__6818;
      var G__6828 = count__6819;
      var G__6829 = i__6820 + 1;
      seq__6817 = G__6826;
      chunk__6818 = G__6827;
      count__6819 = G__6828;
      i__6820 = G__6829;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__6817);
      if (temp__4126__auto__) {
        var seq__6817__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6817__$1)) {
          var c__4408__auto__ = cljs.core.chunk_first.call(null, seq__6817__$1);
          var G__6830 = cljs.core.chunk_rest.call(null, seq__6817__$1);
          var G__6831 = c__4408__auto__;
          var G__6832 = cljs.core.count.call(null, c__4408__auto__);
          var G__6833 = 0;
          seq__6817 = G__6830;
          chunk__6818 = G__6831;
          count__6819 = G__6832;
          i__6820 = G__6833;
          continue;
        } else {
          var vec__6822 = cljs.core.first.call(null, seq__6817__$1);
          var k = cljs.core.nth.call(null, vec__6822, 0, null);
          var v = cljs.core.nth.call(null, vec__6822, 1, null);
          f.call(null, v, k);
          var G__6834 = cljs.core.next.call(null, seq__6817__$1);
          var G__6835 = null;
          var G__6836 = 0;
          var G__6837 = 0;
          seq__6817 = G__6834;
          chunk__6818 = G__6835;
          count__6819 = G__6836;
          i__6820 = G__6837;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__6838 = i + 2;
        var G__6839 = init__$2;
        i = G__6838;
        init__$1 = G__6839;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj6824 = {};
    return obj6824;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__6840 = s + 2;
            var G__6841 = d;
            s = G__6840;
            d = G__6841;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__6842 = s + 2;
            var G__6843 = d + 2;
            s = G__6842;
            d = G__6843;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__6825 = cljs.core.aclone.call(null, self__.arr);
        G__6825[idx + 1] = v;
        return G__6825;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__6844 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__6845 = cljs.core.next.call(null, es);
          ret = G__6844;
          es = G__6845;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__6846 = null;
  var G__6846__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__6846__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__6846 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6846__2.call(this, self__, k);
      case 3:
        return G__6846__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6846.cljs$core$IFn$_invoke$arity$2 = G__6846__2;
  G__6846.cljs$core$IFn$_invoke$arity$3 = G__6846__3;
  return G__6846;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args6816) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6816)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__6847 = i + 2;
        var G__6848 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__6847;
        ret = G__6848;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__6849_6851 = self__.arr;
      G__6849_6851.pop();
      G__6849_6851.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__6850 = o;
      if (G__6850) {
        var bit__4302__auto__ = G__6850.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4302__auto__ || G__6850.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__6850.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__6850);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__6850);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__6852 = cljs.core.next.call(null, es);
          var G__6853 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__6852;
          tcoll__$2 = G__6853;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__6854 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__6855 = i + 2;
      out = G__6854;
      i = G__6855;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4218__auto__, writer__4219__auto__, opts__4220__auto__) {
  return cljs.core._write.call(null, writer__4219__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.call(null, key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__6858 = cljs.core.aclone.call(null, arr);
    G__6858[i] = a;
    return G__6858;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__6859 = cljs.core.aclone.call(null, arr);
    G__6859[i] = a;
    G__6859[j] = b;
    return G__6859;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__6860 = i + 2;
        var G__6861 = init__$2;
        i = G__6860;
        init__$1 = G__6861;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_6862 = 0;
        var j_6863 = 0;
        while (true) {
          if (i_6862 < 32) {
            if ((self__.bitmap >>> i_6862 & 1) === 0) {
              var G__6864 = i_6862 + 1;
              var G__6865 = j_6863;
              i_6862 = G__6864;
              j_6863 = G__6865;
              continue;
            } else {
              nodes[i_6862] = !(self__.arr[j_6863] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_6863]), self__.arr[j_6863], self__.arr[j_6863 + 1], added_leaf_QMARK_) : self__.arr[j_6863 + 1];
              var G__6866 = i_6862 + 1;
              var G__6867 = j_6863 + 2;
              i_6862 = G__6866;
              j_6863 = G__6867;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_6868 = 0;
      var j_6869 = 0;
      while (true) {
        if (i_6868 < 32) {
          if ((self__.bitmap >>> i_6868 & 1) === 0) {
            var G__6870 = i_6868 + 1;
            var G__6871 = j_6869;
            i_6868 = G__6870;
            j_6869 = G__6871;
            continue;
          } else {
            nodes[i_6868] = !(self__.arr[j_6869] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_6869]), self__.arr[j_6869], self__.arr[j_6869 + 1], added_leaf_QMARK_) : self__.arr[j_6869 + 1];
            var G__6872 = i_6868 + 1;
            var G__6873 = j_6869 + 2;
            i_6868 = G__6872;
            j_6869 = G__6873;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__6874 = i + 1;
        var G__6875 = j + 2;
        var G__6876 = bitmap | 1 << i;
        i = G__6874;
        j = G__6875;
        bitmap = G__6876;
        continue;
      } else {
        var G__6877 = i + 1;
        var G__6878 = j;
        var G__6879 = bitmap;
        i = G__6877;
        j = G__6878;
        bitmap = G__6879;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ArrayNode");
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__6880 = i + 1;
          var G__6881 = init__$2;
          i = G__6880;
          init__$1 = G__6881;
          continue;
        }
      } else {
        var G__6882 = i + 1;
        var G__6883 = init__$1;
        i = G__6882;
        init__$1 = G__6883;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__6884 = i + 2;
        i = G__6884;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
    }
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/NodeSeq");
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__6885 = j + 2;
                j = G__6885;
                continue;
              }
            } else {
              var G__6886 = j + 2;
              j = G__6886;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__6887 = j + 1;
              j = G__6887;
              continue;
            }
          } else {
            var G__6888 = j + 1;
            j = G__6888;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__6890 = cljs.core.seq.call(null, coll);
  var chunk__6891 = null;
  var count__6892 = 0;
  var i__6893 = 0;
  while (true) {
    if (i__6893 < count__6892) {
      var vec__6894 = cljs.core._nth.call(null, chunk__6891, i__6893);
      var k = cljs.core.nth.call(null, vec__6894, 0, null);
      var v = cljs.core.nth.call(null, vec__6894, 1, null);
      f.call(null, v, k);
      var G__6898 = seq__6890;
      var G__6899 = chunk__6891;
      var G__6900 = count__6892;
      var G__6901 = i__6893 + 1;
      seq__6890 = G__6898;
      chunk__6891 = G__6899;
      count__6892 = G__6900;
      i__6893 = G__6901;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__6890);
      if (temp__4126__auto__) {
        var seq__6890__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6890__$1)) {
          var c__4408__auto__ = cljs.core.chunk_first.call(null, seq__6890__$1);
          var G__6902 = cljs.core.chunk_rest.call(null, seq__6890__$1);
          var G__6903 = c__4408__auto__;
          var G__6904 = cljs.core.count.call(null, c__4408__auto__);
          var G__6905 = 0;
          seq__6890 = G__6902;
          chunk__6891 = G__6903;
          count__6892 = G__6904;
          i__6893 = G__6905;
          continue;
        } else {
          var vec__6895 = cljs.core.first.call(null, seq__6890__$1);
          var k = cljs.core.nth.call(null, vec__6895, 0, null);
          var v = cljs.core.nth.call(null, vec__6895, 1, null);
          f.call(null, v, k);
          var G__6906 = cljs.core.next.call(null, seq__6890__$1);
          var G__6907 = null;
          var G__6908 = 0;
          var G__6909 = 0;
          seq__6890 = G__6906;
          chunk__6891 = G__6907;
          count__6892 = G__6908;
          i__6893 = G__6909;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj6897 = {};
    return obj6897;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__6910 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__6911 = cljs.core.next.call(null, es);
          ret = G__6910;
          es = G__6911;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__6912 = null;
  var G__6912__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__6912__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__6912 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6912__2.call(this, self__, k);
      case 3:
        return G__6912__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6912.cljs$core$IFn$_invoke$arity$2 = G__6912__2;
  G__6912.cljs$core$IFn$_invoke$arity$3 = G__6912__3;
  return G__6912;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args6889) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6889)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__6913 = i + 1;
      var G__6914 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__6913;
      out = G__6914;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/TransientHashMap");
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__6915 = o;
      if (G__6915) {
        var bit__4302__auto__ = G__6915.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4302__auto__ || G__6915.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__6915.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__6915);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__6915);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__6916 = cljs.core.next.call(null, es);
          var G__6917 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__6916;
          tcoll__$1 = G__6917;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__6918 = ascending_QMARK_ ? t.left : t.right;
      var G__6919 = cljs.core.conj.call(null, stack__$1, t);
      t = G__6918;
      stack__$1 = G__6919;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/BlackNode");
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__6921 = null;
  var G__6921__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__6921__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__6921 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6921__2.call(this, self__, k);
      case 3:
        return G__6921__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6921.cljs$core$IFn$_invoke$arity$2 = G__6921__2;
  G__6921.cljs$core$IFn$_invoke$arity$3 = G__6921__3;
  return G__6921;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args6920) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6920)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/RedNode");
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__6923 = null;
  var G__6923__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__6923__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__6923 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6923__2.call(this, self__, k);
      case 3:
        return G__6923__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6923.cljs$core$IFn$_invoke$arity$2 = G__6923__2;
  G__6923.cljs$core$IFn$_invoke$arity$3 = G__6923__3;
  return G__6923;
}();
cljs.core.RedNode.prototype.apply = function(self__, args6922) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6922)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove.call(null, comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__6925 = cljs.core.seq.call(null, coll);
  var chunk__6926 = null;
  var count__6927 = 0;
  var i__6928 = 0;
  while (true) {
    if (i__6928 < count__6927) {
      var vec__6929 = cljs.core._nth.call(null, chunk__6926, i__6928);
      var k = cljs.core.nth.call(null, vec__6929, 0, null);
      var v = cljs.core.nth.call(null, vec__6929, 1, null);
      f.call(null, v, k);
      var G__6931 = seq__6925;
      var G__6932 = chunk__6926;
      var G__6933 = count__6927;
      var G__6934 = i__6928 + 1;
      seq__6925 = G__6931;
      chunk__6926 = G__6932;
      count__6927 = G__6933;
      i__6928 = G__6934;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__6925);
      if (temp__4126__auto__) {
        var seq__6925__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6925__$1)) {
          var c__4408__auto__ = cljs.core.chunk_first.call(null, seq__6925__$1);
          var G__6935 = cljs.core.chunk_rest.call(null, seq__6925__$1);
          var G__6936 = c__4408__auto__;
          var G__6937 = cljs.core.count.call(null, c__4408__auto__);
          var G__6938 = 0;
          seq__6925 = G__6935;
          chunk__6926 = G__6936;
          count__6927 = G__6937;
          i__6928 = G__6938;
          continue;
        } else {
          var vec__6930 = cljs.core.first.call(null, seq__6925__$1);
          var k = cljs.core.nth.call(null, vec__6930, 0, null);
          var v = cljs.core.nth.call(null, vec__6930, 1, null);
          f.call(null, v, k);
          var G__6939 = cljs.core.next.call(null, seq__6925__$1);
          var G__6940 = null;
          var G__6941 = 0;
          var G__6942 = 0;
          seq__6925 = G__6939;
          chunk__6926 = G__6940;
          count__6927 = G__6941;
          i__6928 = G__6942;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__6943 = t.left;
          t = G__6943;
          continue;
        } else {
          var G__6944 = t.right;
          t = G__6944;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__6945 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__6946 = cljs.core.next.call(null, es);
          ret = G__6945;
          es = G__6946;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__6947 = null;
  var G__6947__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__6947__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__6947 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6947__2.call(this, self__, k);
      case 3:
        return G__6947__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6947.cljs$core$IFn$_invoke$arity$2 = G__6947__2;
  G__6947.cljs$core$IFn$_invoke$arity$3 = G__6947__3;
  return G__6947;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args6924) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6924)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__6948 = cljs.core.conj.call(null, stack, t);
              var G__6949 = t.left;
              stack = G__6948;
              t = G__6949;
              continue;
            } else {
              var G__6950 = stack;
              var G__6951 = t.right;
              stack = G__6950;
              t = G__6951;
              continue;
            }
          } else {
            if (c > 0) {
              var G__6952 = cljs.core.conj.call(null, stack, t);
              var G__6953 = t.right;
              stack = G__6952;
              t = G__6953;
              continue;
            } else {
              var G__6954 = stack;
              var G__6955 = t.left;
              stack = G__6954;
              t = G__6955;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__6956 = cljs.core.nnext.call(null, in$);
        var G__6957 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__6956;
        out = G__6957;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__6958) {
    var keyvals = cljs.core.seq(arglist__6958);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__6959) {
    var keyvals = cljs.core.seq(arglist__6959);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj6963 = {};
      return obj6963;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__6964 = cljs.core.nnext.call(null, kvs);
        kvs = G__6964;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__6965) {
    var keyvals = cljs.core.seq(arglist__6965);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__6966 = cljs.core.nnext.call(null, in$);
        var G__6967 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__6966;
        out = G__6967;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__6968) {
    var keyvals = cljs.core.seq(arglist__6968);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__6969 = cljs.core.nnext.call(null, in$);
        var G__6970 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__6969;
        out = G__6970;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__6971) {
    var comparator = cljs.core.first(arglist__6971);
    var keyvals = cljs.core.rest(arglist__6971);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/KeySeq");
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__6972 = self__.mseq;
    if (G__6972) {
      var bit__4302__auto__ = G__6972.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4302__auto__ || G__6972.cljs$core$INext$) {
        return true;
      } else {
        if (!G__6972.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6972);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6972);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__6973 = self__.mseq;
    if (G__6973) {
      var bit__4302__auto__ = G__6973.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4302__auto__ || G__6973.cljs$core$INext$) {
        return true;
      } else {
        if (!G__6973.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6973);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6973);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ValSeq");
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__6974 = self__.mseq;
    if (G__6974) {
      var bit__4302__auto__ = G__6974.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4302__auto__ || G__6974.cljs$core$INext$) {
        return true;
      } else {
        if (!G__6974.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6974);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6974);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__6975 = self__.mseq;
    if (G__6975) {
      var bit__4302__auto__ = G__6975.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4302__auto__ || G__6975.cljs$core$INext$) {
        return true;
      } else {
        if (!G__6975.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6975);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6975);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__6976_SHARP_, p2__6977_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3639__auto__ = p1__6976_SHARP_;
          if (cljs.core.truth_(or__3639__auto__)) {
            return or__3639__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__6977_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__6978) {
    var maps = cljs.core.seq(arglist__6978);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3639__auto__ = m1;
            if (cljs.core.truth_(or__3639__auto__)) {
              return or__3639__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__6979) {
    var f = cljs.core.first(arglist__6979);
    var maps = cljs.core.rest(arglist__6979);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__6980 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__6981 = cljs.core.next.call(null, keys);
      ret = G__6980;
      keys = G__6981;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__6984 = cljs.core.seq.call(null, coll);
  var chunk__6985 = null;
  var count__6986 = 0;
  var i__6987 = 0;
  while (true) {
    if (i__6987 < count__6986) {
      var vec__6988 = cljs.core._nth.call(null, chunk__6985, i__6987);
      var k = cljs.core.nth.call(null, vec__6988, 0, null);
      var v = cljs.core.nth.call(null, vec__6988, 1, null);
      f.call(null, v, k);
      var G__6990 = seq__6984;
      var G__6991 = chunk__6985;
      var G__6992 = count__6986;
      var G__6993 = i__6987 + 1;
      seq__6984 = G__6990;
      chunk__6985 = G__6991;
      count__6986 = G__6992;
      i__6987 = G__6993;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__6984);
      if (temp__4126__auto__) {
        var seq__6984__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6984__$1)) {
          var c__4408__auto__ = cljs.core.chunk_first.call(null, seq__6984__$1);
          var G__6994 = cljs.core.chunk_rest.call(null, seq__6984__$1);
          var G__6995 = c__4408__auto__;
          var G__6996 = cljs.core.count.call(null, c__4408__auto__);
          var G__6997 = 0;
          seq__6984 = G__6994;
          chunk__6985 = G__6995;
          count__6986 = G__6996;
          i__6987 = G__6997;
          continue;
        } else {
          var vec__6989 = cljs.core.first.call(null, seq__6984__$1);
          var k = cljs.core.nth.call(null, vec__6989, 0, null);
          var v = cljs.core.nth.call(null, vec__6989, 1, null);
          f.call(null, v, k);
          var G__6998 = cljs.core.next.call(null, seq__6984__$1);
          var G__6999 = null;
          var G__7000 = 0;
          var G__7001 = 0;
          seq__6984 = G__6998;
          chunk__6985 = G__6999;
          count__6986 = G__7000;
          i__6987 = G__7001;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__6982_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__6982_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__7002 = null;
  var G__7002__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__7002__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__7002 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7002__2.call(this, self__, k);
      case 3:
        return G__7002__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7002.cljs$core$IFn$_invoke$arity$2 = G__7002__2;
  G__7002.cljs$core$IFn$_invoke$arity$3 = G__7002__3;
  return G__7002;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args6983) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6983)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__7003 = i + 1;
        var G__7004 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__7003;
        out = G__7004;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__7005 = i + 1;
        var G__7006 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__7005;
        out = G__7006;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/TransientHashSet");
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__7008 = null;
  var G__7008__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__7008__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__7008 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7008__2.call(this, self__, k);
      case 3:
        return G__7008__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7008.cljs$core$IFn$_invoke$arity$2 = G__7008__2;
  G__7008.cljs$core$IFn$_invoke$arity$3 = G__7008__3;
  return G__7008;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args7007) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args7007)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__7011 = cljs.core.seq.call(null, coll);
  var chunk__7012 = null;
  var count__7013 = 0;
  var i__7014 = 0;
  while (true) {
    if (i__7014 < count__7013) {
      var vec__7015 = cljs.core._nth.call(null, chunk__7012, i__7014);
      var k = cljs.core.nth.call(null, vec__7015, 0, null);
      var v = cljs.core.nth.call(null, vec__7015, 1, null);
      f.call(null, v, k);
      var G__7017 = seq__7011;
      var G__7018 = chunk__7012;
      var G__7019 = count__7013;
      var G__7020 = i__7014 + 1;
      seq__7011 = G__7017;
      chunk__7012 = G__7018;
      count__7013 = G__7019;
      i__7014 = G__7020;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__7011);
      if (temp__4126__auto__) {
        var seq__7011__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__7011__$1)) {
          var c__4408__auto__ = cljs.core.chunk_first.call(null, seq__7011__$1);
          var G__7021 = cljs.core.chunk_rest.call(null, seq__7011__$1);
          var G__7022 = c__4408__auto__;
          var G__7023 = cljs.core.count.call(null, c__4408__auto__);
          var G__7024 = 0;
          seq__7011 = G__7021;
          chunk__7012 = G__7022;
          count__7013 = G__7023;
          i__7014 = G__7024;
          continue;
        } else {
          var vec__7016 = cljs.core.first.call(null, seq__7011__$1);
          var k = cljs.core.nth.call(null, vec__7016, 0, null);
          var v = cljs.core.nth.call(null, vec__7016, 1, null);
          f.call(null, v, k);
          var G__7025 = cljs.core.next.call(null, seq__7011__$1);
          var G__7026 = null;
          var G__7027 = 0;
          var G__7028 = 0;
          seq__7011 = G__7025;
          chunk__7012 = G__7026;
          count__7013 = G__7027;
          i__7014 = G__7028;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__7009_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__7009_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__7029 = null;
  var G__7029__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__7029__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__7029 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7029__2.call(this, self__, k);
      case 3:
        return G__7029__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7029.cljs$core$IFn$_invoke$arity$2 = G__7029__2;
  G__7029.cljs$core$IFn$_invoke$arity$3 = G__7029__3;
  return G__7029;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args7010) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args7010)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4502__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4502__auto__.length) {
        var G__7030 = i + 1;
        var G__7031 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__7030;
        res = G__7031;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__7032 = cljs.core._next.call(null, in$__$1);
          var G__7033 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
          in$__$1 = G__7032;
          out = G__7033;
          continue;
        } else {
          return cljs.core._persistent_BANG_.call(null, out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__7034__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__7034 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__7034__delegate.call(this, keys);
    };
    G__7034.cljs$lang$maxFixedArity = 0;
    G__7034.cljs$lang$applyTo = function(arglist__7035) {
      var keys = cljs.core.seq(arglist__7035);
      return G__7034__delegate(keys);
    };
    G__7034.cljs$core$IFn$_invoke$arity$variadic = G__7034__delegate;
    return G__7034;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__7036) {
    var keys = cljs.core.seq(arglist__7036);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__7037) {
    var comparator = cljs.core.first(arglist__7037);
    var keys = cljs.core.rest(arglist__7037);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.call(null, function(p1__7038_SHARP_) {
      var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__7038_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val.call(null, e);
      } else {
        return p1__7038_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_.call(null, coll)) {
      var n = cljs.core.count.call(null, coll);
      return cljs.core.reduce.call(null, function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
    } else {
      return cljs.core.map.call(null, function(p1__7039_SHARP_) {
        var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__7039_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second.call(null, e);
        } else {
          return p1__7039_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__7046, seen__$1) {
        while (true) {
          var vec__7047 = p__7046;
          var f = cljs.core.nth.call(null, vec__7047, 0, null);
          var xs__$1 = vec__7047;
          var temp__4126__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4126__auto__) {
            var s = temp__4126__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__7048 = cljs.core.rest.call(null, s);
              var G__7049 = seen__$1;
              p__7046 = G__7048;
              seen__$1 = G__7049;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__7050 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__7051 = cljs.core.next.call(null, s__$1);
      ret = G__7050;
      s__$1 = G__7051;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__7053 = x;
    if (G__7053) {
      var bit__4295__auto__ = G__7053.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4295__auto__ || G__7053.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error("Doesn't support name: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__7054 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__7055 = cljs.core.next.call(null, ks);
      var G__7056 = cljs.core.next.call(null, vs);
      map = G__7054;
      ks = G__7055;
      vs = G__7056;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__7059__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__7057_SHARP_, p2__7058_SHARP_) {
        return max_key.call(null, k, p1__7057_SHARP_, p2__7058_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__7059 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__7059__delegate.call(this, k, x, y, more);
    };
    G__7059.cljs$lang$maxFixedArity = 3;
    G__7059.cljs$lang$applyTo = function(arglist__7060) {
      var k = cljs.core.first(arglist__7060);
      arglist__7060 = cljs.core.next(arglist__7060);
      var x = cljs.core.first(arglist__7060);
      arglist__7060 = cljs.core.next(arglist__7060);
      var y = cljs.core.first(arglist__7060);
      var more = cljs.core.rest(arglist__7060);
      return G__7059__delegate(k, x, y, more);
    };
    G__7059.cljs$core$IFn$_invoke$arity$variadic = G__7059__delegate;
    return G__7059;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__7063__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__7061_SHARP_, p2__7062_SHARP_) {
        return min_key.call(null, k, p1__7061_SHARP_, p2__7062_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__7063 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__7063__delegate.call(this, k, x, y, more);
    };
    G__7063.cljs$lang$maxFixedArity = 3;
    G__7063.cljs$lang$applyTo = function(arglist__7064) {
      var k = cljs.core.first(arglist__7064);
      arglist__7064 = cljs.core.next(arglist__7064);
      var x = cljs.core.first(arglist__7064);
      arglist__7064 = cljs.core.next(arglist__7064);
      var y = cljs.core.first(arglist__7064);
      var more = cljs.core.rest(arglist__7064);
      return G__7063__delegate(k, x, y, more);
    };
    G__7063.cljs$core$IFn$_invoke$arity$variadic = G__7063__delegate;
    return G__7063;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ArrayList");
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(f1) {
      var a = cljs.core.array_list.call(null);
      return function(a) {
        return function() {
          var G__7065 = null;
          var G__7065__0 = function() {
            return f1.call(null);
          };
          var G__7065__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return f1.call(null, result, v);
            }();
            return f1.call(null, result__$1);
          };
          var G__7065__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return f1.call(null, result, v);
            } else {
              return result;
            }
          };
          G__7065 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__7065__0.call(this);
              case 1:
                return G__7065__1.call(this, result);
              case 2:
                return G__7065__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__7065.cljs$core$IFn$_invoke$arity$0 = G__7065__0;
          G__7065.cljs$core$IFn$_invoke$arity$1 = G__7065__1;
          G__7065.cljs$core$IFn$_invoke$arity$2 = G__7065__2;
          return G__7065;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(f1) {
      return function() {
        var G__7066 = null;
        var G__7066__0 = function() {
          return f1.call(null);
        };
        var G__7066__1 = function(result) {
          return f1.call(null, result);
        };
        var G__7066__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return f1.call(null, result, input);
          } else {
            return cljs.core.reduced.call(null, result);
          }
        };
        G__7066 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__7066__0.call(this);
            case 1:
              return G__7066__1.call(this, result);
            case 2:
              return G__7066__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__7066.cljs$core$IFn$_invoke$arity$0 = G__7066__0;
        G__7066.cljs$core$IFn$_invoke$arity$1 = G__7066__1;
        G__7066.cljs$core$IFn$_invoke$arity$2 = G__7066__2;
        return G__7066;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__7069 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__7069, 0, null);
        var s = vec__7069;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__7070 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__7070, 0, null);
      var s = vec__7070;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__7073 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__7073, 0, null);
        var s = vec__7073;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__7074 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__7074, 0, null);
      var s = vec__7074;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Range");
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil.call(null, (self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_ordered_coll.call(null, rng__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f, s);
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(f1) {
      var ia = cljs.core.atom.call(null, -1);
      return function(ia) {
        return function() {
          var G__7075 = null;
          var G__7075__0 = function() {
            return f1.call(null);
          };
          var G__7075__1 = function(result) {
            return f1.call(null, result);
          };
          var G__7075__2 = function(result, input) {
            var i = cljs.core.swap_BANG_.call(null, ia, cljs.core.inc);
            if (cljs.core.rem.call(null, i, n) === 0) {
              return f1.call(null, result, input);
            } else {
              return result;
            }
          };
          G__7075 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__7075__0.call(this);
              case 1:
                return G__7075__1.call(this, result);
              case 2:
                return G__7075__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__7075.cljs$core$IFn$_invoke$arity$0 = G__7075__0;
          G__7075.cljs$core$IFn$_invoke$arity$1 = G__7075__1;
          G__7075.cljs$core$IFn$_invoke$arity$2 = G__7075__2;
          return G__7075;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(f1) {
      var a = cljs.core.array_list.call(null);
      var pa = cljs.core.atom.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__7077 = null;
          var G__7077__0 = function() {
            return f1.call(null);
          };
          var G__7077__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return f1.call(null, result, v);
            }();
            return f1.call(null, result__$1);
          };
          var G__7077__2 = function(result, input) {
            var pval = cljs.core.deref.call(null, pa);
            var val = f.call(null, input);
            cljs.core.reset_BANG_.call(null, pa, val);
            if (cljs.core.keyword_identical_QMARK_.call(null, pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.call(null, val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              var ret = f1.call(null, result, v);
              if (cljs.core.reduced_QMARK_.call(null, ret)) {
              } else {
                a.add(input);
              }
              return ret;
            }
          };
          G__7077 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__7077__0.call(this);
              case 1:
                return G__7077__1.call(this, result);
              case 2:
                return G__7077__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__7077.cljs$core$IFn$_invoke$arity$0 = G__7077__0;
          G__7077.cljs$core$IFn$_invoke$arity$1 = G__7077__1;
          G__7077.cljs$core$IFn$_invoke$arity$2 = G__7077__2;
          return G__7077;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first.call(null, s);
        var fv = f.call(null, fst);
        var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv, s, temp__4126__auto__) {
          return function(p1__7076_SHARP_) {
            return cljs.core._EQ_.call(null, fv, f.call(null, p1__7076_SHARP_));
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next.call(null, s)));
        return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__7088 = null;
      var G__7088__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__7088__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__7088__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__7088__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__7088__4 = function() {
        var G__7089__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__7089 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__7089__delegate.call(this, x, y, z, args);
        };
        G__7089.cljs$lang$maxFixedArity = 3;
        G__7089.cljs$lang$applyTo = function(arglist__7090) {
          var x = cljs.core.first(arglist__7090);
          arglist__7090 = cljs.core.next(arglist__7090);
          var y = cljs.core.first(arglist__7090);
          arglist__7090 = cljs.core.next(arglist__7090);
          var z = cljs.core.first(arglist__7090);
          var args = cljs.core.rest(arglist__7090);
          return G__7089__delegate(x, y, z, args);
        };
        G__7089.cljs$core$IFn$_invoke$arity$variadic = G__7089__delegate;
        return G__7089;
      }();
      G__7088 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7088__0.call(this);
          case 1:
            return G__7088__1.call(this, x);
          case 2:
            return G__7088__2.call(this, x, y);
          case 3:
            return G__7088__3.call(this, x, y, z);
          default:
            return G__7088__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7088.cljs$lang$maxFixedArity = 3;
      G__7088.cljs$lang$applyTo = G__7088__4.cljs$lang$applyTo;
      G__7088.cljs$core$IFn$_invoke$arity$0 = G__7088__0;
      G__7088.cljs$core$IFn$_invoke$arity$1 = G__7088__1;
      G__7088.cljs$core$IFn$_invoke$arity$2 = G__7088__2;
      G__7088.cljs$core$IFn$_invoke$arity$3 = G__7088__3;
      G__7088.cljs$core$IFn$_invoke$arity$variadic = G__7088__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7088;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__7091 = null;
      var G__7091__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__7091__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__7091__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__7091__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__7091__4 = function() {
        var G__7092__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__7092 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__7092__delegate.call(this, x, y, z, args);
        };
        G__7092.cljs$lang$maxFixedArity = 3;
        G__7092.cljs$lang$applyTo = function(arglist__7093) {
          var x = cljs.core.first(arglist__7093);
          arglist__7093 = cljs.core.next(arglist__7093);
          var y = cljs.core.first(arglist__7093);
          arglist__7093 = cljs.core.next(arglist__7093);
          var z = cljs.core.first(arglist__7093);
          var args = cljs.core.rest(arglist__7093);
          return G__7092__delegate(x, y, z, args);
        };
        G__7092.cljs$core$IFn$_invoke$arity$variadic = G__7092__delegate;
        return G__7092;
      }();
      G__7091 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7091__0.call(this);
          case 1:
            return G__7091__1.call(this, x);
          case 2:
            return G__7091__2.call(this, x, y);
          case 3:
            return G__7091__3.call(this, x, y, z);
          default:
            return G__7091__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7091.cljs$lang$maxFixedArity = 3;
      G__7091.cljs$lang$applyTo = G__7091__4.cljs$lang$applyTo;
      G__7091.cljs$core$IFn$_invoke$arity$0 = G__7091__0;
      G__7091.cljs$core$IFn$_invoke$arity$1 = G__7091__1;
      G__7091.cljs$core$IFn$_invoke$arity$2 = G__7091__2;
      G__7091.cljs$core$IFn$_invoke$arity$3 = G__7091__3;
      G__7091.cljs$core$IFn$_invoke$arity$variadic = G__7091__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7091;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__7094 = null;
      var G__7094__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__7094__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__7094__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__7094__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__7094__4 = function() {
        var G__7095__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__7095 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__7095__delegate.call(this, x, y, z, args);
        };
        G__7095.cljs$lang$maxFixedArity = 3;
        G__7095.cljs$lang$applyTo = function(arglist__7096) {
          var x = cljs.core.first(arglist__7096);
          arglist__7096 = cljs.core.next(arglist__7096);
          var y = cljs.core.first(arglist__7096);
          arglist__7096 = cljs.core.next(arglist__7096);
          var z = cljs.core.first(arglist__7096);
          var args = cljs.core.rest(arglist__7096);
          return G__7095__delegate(x, y, z, args);
        };
        G__7095.cljs$core$IFn$_invoke$arity$variadic = G__7095__delegate;
        return G__7095;
      }();
      G__7094 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7094__0.call(this);
          case 1:
            return G__7094__1.call(this, x);
          case 2:
            return G__7094__2.call(this, x, y);
          case 3:
            return G__7094__3.call(this, x, y, z);
          default:
            return G__7094__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7094.cljs$lang$maxFixedArity = 3;
      G__7094.cljs$lang$applyTo = G__7094__4.cljs$lang$applyTo;
      G__7094.cljs$core$IFn$_invoke$arity$0 = G__7094__0;
      G__7094.cljs$core$IFn$_invoke$arity$1 = G__7094__1;
      G__7094.cljs$core$IFn$_invoke$arity$2 = G__7094__2;
      G__7094.cljs$core$IFn$_invoke$arity$3 = G__7094__3;
      G__7094.cljs$core$IFn$_invoke$arity$variadic = G__7094__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7094;
    }();
  };
  var juxt__4 = function() {
    var G__7097__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__7098 = null;
          var G__7098__0 = function() {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__7078_SHARP_, p2__7079_SHARP_) {
                return cljs.core.conj.call(null, p1__7078_SHARP_, p2__7079_SHARP_.call(null));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__7098__1 = function(x) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__7080_SHARP_, p2__7081_SHARP_) {
                return cljs.core.conj.call(null, p1__7080_SHARP_, p2__7081_SHARP_.call(null, x));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__7098__2 = function(x, y) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__7082_SHARP_, p2__7083_SHARP_) {
                return cljs.core.conj.call(null, p1__7082_SHARP_, p2__7083_SHARP_.call(null, x, y));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__7098__3 = function(x, y, z) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__7084_SHARP_, p2__7085_SHARP_) {
                return cljs.core.conj.call(null, p1__7084_SHARP_, p2__7085_SHARP_.call(null, x, y, z));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__7098__4 = function() {
            var G__7099__delegate = function(x, y, z, args) {
              return cljs.core.reduce.call(null, function(fs__$1) {
                return function(p1__7086_SHARP_, p2__7087_SHARP_) {
                  return cljs.core.conj.call(null, p1__7086_SHARP_, cljs.core.apply.call(null, p2__7087_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__7099 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__7099__delegate.call(this, x, y, z, args);
            };
            G__7099.cljs$lang$maxFixedArity = 3;
            G__7099.cljs$lang$applyTo = function(arglist__7100) {
              var x = cljs.core.first(arglist__7100);
              arglist__7100 = cljs.core.next(arglist__7100);
              var y = cljs.core.first(arglist__7100);
              arglist__7100 = cljs.core.next(arglist__7100);
              var z = cljs.core.first(arglist__7100);
              var args = cljs.core.rest(arglist__7100);
              return G__7099__delegate(x, y, z, args);
            };
            G__7099.cljs$core$IFn$_invoke$arity$variadic = G__7099__delegate;
            return G__7099;
          }();
          G__7098 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__7098__0.call(this);
              case 1:
                return G__7098__1.call(this, x);
              case 2:
                return G__7098__2.call(this, x, y);
              case 3:
                return G__7098__3.call(this, x, y, z);
              default:
                return G__7098__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__7098.cljs$lang$maxFixedArity = 3;
          G__7098.cljs$lang$applyTo = G__7098__4.cljs$lang$applyTo;
          G__7098.cljs$core$IFn$_invoke$arity$0 = G__7098__0;
          G__7098.cljs$core$IFn$_invoke$arity$1 = G__7098__1;
          G__7098.cljs$core$IFn$_invoke$arity$2 = G__7098__2;
          G__7098.cljs$core$IFn$_invoke$arity$3 = G__7098__3;
          G__7098.cljs$core$IFn$_invoke$arity$variadic = G__7098__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__7098;
        }();
      }(fs__$1);
    };
    var G__7097 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__7097__delegate.call(this, f, g, h, fs);
    };
    G__7097.cljs$lang$maxFixedArity = 3;
    G__7097.cljs$lang$applyTo = function(arglist__7101) {
      var f = cljs.core.first(arglist__7101);
      arglist__7101 = cljs.core.next(arglist__7101);
      var g = cljs.core.first(arglist__7101);
      arglist__7101 = cljs.core.next(arglist__7101);
      var h = cljs.core.first(arglist__7101);
      var fs = cljs.core.rest(arglist__7101);
      return G__7097__delegate(f, g, h, fs);
    };
    G__7097.cljs$core$IFn$_invoke$arity$variadic = G__7097__delegate;
    return G__7097;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__7102 = cljs.core.next.call(null, coll);
        coll = G__7102;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__7103 = n - 1;
        var G__7104 = cljs.core.next.call(null, coll);
        n = G__7103;
        coll = G__7104;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__7106 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__7106, 0, null);
  var flags = cljs.core.nth.call(null, vec__7106, 1, null);
  var pattern = cljs.core.nth.call(null, vec__7106, 2, null);
  return new RegExp(pattern, flags);
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_7108 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_7109__$1 = cljs.core.next.call(null, coll);
      var n_7110 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
      while (true) {
        if (coll_7109__$1 && (n_7110 == null || !(n_7110 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_7109__$1), writer, opts);
          var G__7111 = cljs.core.next.call(null, coll_7109__$1);
          var G__7112 = n_7110 - 1;
          coll_7109__$1 = G__7111;
          n_7110 = G__7112;
          continue;
        } else {
          if (cljs.core.seq.call(null, coll_7109__$1) && n_7110 === 0) {
            cljs.core._write.call(null, writer, sep);
            cljs.core._write.call(null, writer, "...");
          } else {
          }
        }
        break;
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_7108;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__7117 = cljs.core.seq.call(null, ss);
    var chunk__7118 = null;
    var count__7119 = 0;
    var i__7120 = 0;
    while (true) {
      if (i__7120 < count__7119) {
        var s = cljs.core._nth.call(null, chunk__7118, i__7120);
        cljs.core._write.call(null, writer, s);
        var G__7121 = seq__7117;
        var G__7122 = chunk__7118;
        var G__7123 = count__7119;
        var G__7124 = i__7120 + 1;
        seq__7117 = G__7121;
        chunk__7118 = G__7122;
        count__7119 = G__7123;
        i__7120 = G__7124;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__7117);
        if (temp__4126__auto__) {
          var seq__7117__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7117__$1)) {
            var c__4408__auto__ = cljs.core.chunk_first.call(null, seq__7117__$1);
            var G__7125 = cljs.core.chunk_rest.call(null, seq__7117__$1);
            var G__7126 = c__4408__auto__;
            var G__7127 = cljs.core.count.call(null, c__4408__auto__);
            var G__7128 = 0;
            seq__7117 = G__7125;
            chunk__7118 = G__7126;
            count__7119 = G__7127;
            i__7120 = G__7128;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__7117__$1);
            cljs.core._write.call(null, writer, s);
            var G__7129 = cljs.core.next.call(null, seq__7117__$1);
            var G__7130 = null;
            var G__7131 = 0;
            var G__7132 = 0;
            seq__7117 = G__7129;
            chunk__7118 = G__7130;
            count__7119 = G__7131;
            i__7120 = G__7132;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__7133) {
    var writer = cljs.core.first(arglist__7133);
    var ss = cljs.core.rest(arglist__7133);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj7135 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj7135;
}();
cljs.core.quote_string = function quote_string(s) {
  return'"' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })) + '"';
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__3627__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__3627__auto__)) {
          var and__3627__auto____$1 = function() {
            var G__7141 = obj;
            if (G__7141) {
              var bit__4302__auto__ = G__7141.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4302__auto__ || G__7141.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__7141.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__7141);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__7141);
            }
          }();
          if (and__3627__auto____$1) {
            return cljs.core.meta.call(null, obj);
          } else {
            return and__3627__auto____$1;
          }
        } else {
          return and__3627__auto__;
        }
      }())) {
        cljs.core._write.call(null, writer, "^");
        pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
        cljs.core._write.call(null, writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write.call(null, writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__7142 = obj;
            if (G__7142) {
              var bit__4295__auto__ = G__7142.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4295__auto__ || G__7142.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._pr_writer.call(null, obj, writer, opts);
          } else {
            if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
              return cljs.core._write.call(null, writer, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
            } else {
              if (cljs.core.object_QMARK_.call(null, obj)) {
                cljs.core._write.call(null, writer, "#js ");
                return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (goog.isString(obj)) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                    } else {
                      return cljs.core._write.call(null, writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_.call(null, obj)) {
                      return cljs.core.write_all.call(null, writer, "#\x3c", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "\x3e");
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);
                          while (true) {
                            if (cljs.core.count.call(null, ns) < len) {
                              var G__7144 = "0" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);
                              ns = G__7144;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.call(null, writer, '#inst "', "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj.getUTCFullYear()), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                      } else {
                        if (cljs.core.regexp_QMARK_.call(null, obj)) {
                          return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                        } else {
                          if (function() {
                            var G__7143 = obj;
                            if (G__7143) {
                              var bit__4302__auto__ = G__7143.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4302__auto__ || G__7143.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__7143.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__7143);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__7143);
                            }
                          }()) {
                            return cljs.core._pr_writer.call(null, obj, writer, opts);
                          } else {
                            return cljs.core.write_all.call(null, writer, "#\x3c", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "\x3e");
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__7149 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__7150 = null;
  var count__7151 = 0;
  var i__7152 = 0;
  while (true) {
    if (i__7152 < count__7151) {
      var obj = cljs.core._nth.call(null, chunk__7150, i__7152);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__7153 = seq__7149;
      var G__7154 = chunk__7150;
      var G__7155 = count__7151;
      var G__7156 = i__7152 + 1;
      seq__7149 = G__7153;
      chunk__7150 = G__7154;
      count__7151 = G__7155;
      i__7152 = G__7156;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__7149);
      if (temp__4126__auto__) {
        var seq__7149__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__7149__$1)) {
          var c__4408__auto__ = cljs.core.chunk_first.call(null, seq__7149__$1);
          var G__7157 = cljs.core.chunk_rest.call(null, seq__7149__$1);
          var G__7158 = c__4408__auto__;
          var G__7159 = cljs.core.count.call(null, c__4408__auto__);
          var G__7160 = 0;
          seq__7149 = G__7157;
          chunk__7150 = G__7158;
          count__7151 = G__7159;
          i__7152 = G__7160;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__7149__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__7161 = cljs.core.next.call(null, seq__7149__$1);
          var G__7162 = null;
          var G__7163 = 0;
          var G__7164 = 0;
          seq__7149 = G__7161;
          chunk__7150 = G__7162;
          count__7151 = G__7163;
          i__7152 = G__7164;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_sb_with_opts.call(null, objs, opts));
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__7165) {
    var objs = cljs.core.seq(arglist__7165);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__7166) {
    var objs = cljs.core.seq(arglist__7166);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__7167) {
    var objs = cljs.core.seq(arglist__7167);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__7168) {
    var objs = cljs.core.seq(arglist__7168);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__7169) {
    var objs = cljs.core.seq(arglist__7169);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__7170) {
    var objs = cljs.core.seq(arglist__7170);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__7171) {
    var objs = cljs.core.seq(arglist__7171);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__7172) {
    var objs = cljs.core.seq(arglist__7172);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, a__$1.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__7173) {
    var iref = cljs.core.first(arglist__7173);
    arglist__7173 = cljs.core.next(arglist__7173);
    var f = cljs.core.first(arglist__7173);
    var args = cljs.core.rest(arglist__7173);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix_string) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc)));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Delay");
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not.call(null, self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.preserving_reduced = function preserving_reduced(f1) {
  return function(p1__7174_SHARP_, p2__7175_SHARP_) {
    var ret = f1.call(null, p1__7174_SHARP_, p2__7175_SHARP_);
    if (cljs.core.reduced_QMARK_.call(null, ret)) {
      return cljs.core.reduced.call(null, ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cat(f1) {
  var rf1 = cljs.core.preserving_reduced.call(null, f1);
  return function(rf1) {
    return function() {
      var G__7176 = null;
      var G__7176__0 = function() {
        return f1.call(null);
      };
      var G__7176__1 = function(result) {
        return f1.call(null, result);
      };
      var G__7176__2 = function(result, input) {
        return cljs.core.reduce.call(null, rf1, result, input);
      };
      G__7176 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__7176__0.call(this);
          case 1:
            return G__7176__1.call(this, result);
          case 2:
            return G__7176__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7176.cljs$core$IFn$_invoke$arity$0 = G__7176__0;
      G__7176.cljs$core$IFn$_invoke$arity$1 = G__7176__1;
      G__7176.cljs$core$IFn$_invoke$arity$2 = G__7176__2;
      return G__7176;
    }();
  }(rf1);
};
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(f1) {
      var pa = cljs.core.atom.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__7177 = null;
          var G__7177__0 = function() {
            return f1.call(null);
          };
          var G__7177__1 = function(result) {
            return f1.call(null, result);
          };
          var G__7177__2 = function(result, input) {
            var prior = cljs.core.deref.call(null, pa);
            cljs.core.reset_BANG_.call(null, pa, input);
            if (cljs.core._EQ_.call(null, prior, input)) {
              return result;
            } else {
              return f1.call(null, result, input);
            }
          };
          G__7177 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__7177__0.call(this);
              case 1:
                return G__7177__1.call(this, result);
              case 2:
                return G__7177__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__7177.cljs$core$IFn$_invoke$arity$0 = G__7177__0;
          G__7177.cljs$core$IFn$_invoke$arity$1 = G__7177__1;
          G__7177.cljs$core$IFn$_invoke$arity$2 = G__7177__2;
          return G__7177;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.call(null, dedupe.call(null), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Iteration = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Iteration.cljs$lang$type = true;
cljs.core.Iteration.cljs$lang$ctorStr = "cljs.core/Iteration";
cljs.core.Iteration.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Iteration");
};
cljs.core.Iteration.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Iteration.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.call(null, self__.xform, f, init, self__.coll);
};
cljs.core.Iteration.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq.call(null, cljs.core.sequence.call(null, self__.xform, self__.coll));
};
cljs.core.__GT_Iteration = function __GT_Iteration(xform, coll) {
  return new cljs.core.Iteration(xform, coll);
};
cljs.core.iteration = function iteration(xform, coll) {
  return new cljs.core.Iteration(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.call(null, function(p1__7179_SHARP_, p2__7178_SHARP_) {
    return proc.call(null, p2__7178_SHARP_);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj7181 = {};
  return obj7181;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3627__auto__ = x;
    if (and__3627__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4275__auto__ = x == null ? null : x;
    return function() {
      var or__3639__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3627__auto__ = x;
    if (and__3627__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4275__auto__ = x == null ? null : x;
    return function() {
      var or__3639__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__7183 = k;
    if (G__7183) {
      var bit__4302__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3639__auto__ = bit__4302__auto__;
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          return G__7183.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__7183.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__7183);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__7183);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__7197 = x;
      if (G__7197) {
        var bit__4302__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3639__auto__ = bit__4302__auto__;
          if (cljs.core.truth_(or__3639__auto__)) {
            return or__3639__auto__;
          } else {
            return G__7197.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__7197.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__7197);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__7197);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj7199 = {};
              return obj7199;
            }();
            var seq__7200_7210 = cljs.core.seq.call(null, x);
            var chunk__7201_7211 = null;
            var count__7202_7212 = 0;
            var i__7203_7213 = 0;
            while (true) {
              if (i__7203_7213 < count__7202_7212) {
                var vec__7204_7214 = cljs.core._nth.call(null, chunk__7201_7211, i__7203_7213);
                var k_7215 = cljs.core.nth.call(null, vec__7204_7214, 0, null);
                var v_7216 = cljs.core.nth.call(null, vec__7204_7214, 1, null);
                m[cljs.core.key__GT_js.call(null, k_7215)] = clj__GT_js.call(null, v_7216);
                var G__7217 = seq__7200_7210;
                var G__7218 = chunk__7201_7211;
                var G__7219 = count__7202_7212;
                var G__7220 = i__7203_7213 + 1;
                seq__7200_7210 = G__7217;
                chunk__7201_7211 = G__7218;
                count__7202_7212 = G__7219;
                i__7203_7213 = G__7220;
                continue;
              } else {
                var temp__4126__auto___7221 = cljs.core.seq.call(null, seq__7200_7210);
                if (temp__4126__auto___7221) {
                  var seq__7200_7222__$1 = temp__4126__auto___7221;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__7200_7222__$1)) {
                    var c__4408__auto___7223 = cljs.core.chunk_first.call(null, seq__7200_7222__$1);
                    var G__7224 = cljs.core.chunk_rest.call(null, seq__7200_7222__$1);
                    var G__7225 = c__4408__auto___7223;
                    var G__7226 = cljs.core.count.call(null, c__4408__auto___7223);
                    var G__7227 = 0;
                    seq__7200_7210 = G__7224;
                    chunk__7201_7211 = G__7225;
                    count__7202_7212 = G__7226;
                    i__7203_7213 = G__7227;
                    continue;
                  } else {
                    var vec__7205_7228 = cljs.core.first.call(null, seq__7200_7222__$1);
                    var k_7229 = cljs.core.nth.call(null, vec__7205_7228, 0, null);
                    var v_7230 = cljs.core.nth.call(null, vec__7205_7228, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_7229)] = clj__GT_js.call(null, v_7230);
                    var G__7231 = cljs.core.next.call(null, seq__7200_7222__$1);
                    var G__7232 = null;
                    var G__7233 = 0;
                    var G__7234 = 0;
                    seq__7200_7210 = G__7231;
                    chunk__7201_7211 = G__7232;
                    count__7202_7212 = G__7233;
                    i__7203_7213 = G__7234;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__7206_7235 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__7207_7236 = null;
              var count__7208_7237 = 0;
              var i__7209_7238 = 0;
              while (true) {
                if (i__7209_7238 < count__7208_7237) {
                  var x_7239__$1 = cljs.core._nth.call(null, chunk__7207_7236, i__7209_7238);
                  arr.push(x_7239__$1);
                  var G__7240 = seq__7206_7235;
                  var G__7241 = chunk__7207_7236;
                  var G__7242 = count__7208_7237;
                  var G__7243 = i__7209_7238 + 1;
                  seq__7206_7235 = G__7240;
                  chunk__7207_7236 = G__7241;
                  count__7208_7237 = G__7242;
                  i__7209_7238 = G__7243;
                  continue;
                } else {
                  var temp__4126__auto___7244 = cljs.core.seq.call(null, seq__7206_7235);
                  if (temp__4126__auto___7244) {
                    var seq__7206_7245__$1 = temp__4126__auto___7244;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__7206_7245__$1)) {
                      var c__4408__auto___7246 = cljs.core.chunk_first.call(null, seq__7206_7245__$1);
                      var G__7247 = cljs.core.chunk_rest.call(null, seq__7206_7245__$1);
                      var G__7248 = c__4408__auto___7246;
                      var G__7249 = cljs.core.count.call(null, c__4408__auto___7246);
                      var G__7250 = 0;
                      seq__7206_7235 = G__7247;
                      chunk__7207_7236 = G__7248;
                      count__7208_7237 = G__7249;
                      i__7209_7238 = G__7250;
                      continue;
                    } else {
                      var x_7251__$1 = cljs.core.first.call(null, seq__7206_7245__$1);
                      arr.push(x_7251__$1);
                      var G__7252 = cljs.core.next.call(null, seq__7206_7245__$1);
                      var G__7253 = null;
                      var G__7254 = 0;
                      var G__7255 = 0;
                      seq__7206_7235 = G__7252;
                      chunk__7207_7236 = G__7253;
                      count__7208_7237 = G__7254;
                      i__7209_7238 = G__7255;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj7257 = {};
  return obj7257;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3627__auto__ = x;
    if (and__3627__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4275__auto__ = x == null ? null : x;
    return function() {
      var or__3639__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__7278__delegate = function(x, opts) {
      if (function() {
        var G__7268 = x;
        if (G__7268) {
          var bit__4302__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3639__auto__ = bit__4302__auto__;
            if (cljs.core.truth_(or__3639__auto__)) {
              return or__3639__auto__;
            } else {
              return G__7268.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__7268.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__7268);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__7268);
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq.call(null, opts)) {
          var map__7269 = opts;
          var map__7269__$1 = cljs.core.seq_QMARK_.call(null, map__7269) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7269) : map__7269;
          var keywordize_keys = cljs.core.get.call(null, map__7269__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__7269, map__7269__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if (cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                  } else {
                    if (cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4377__auto__ = function(map__7269, map__7269__$1, keywordize_keys, keyfn) {
                          return function iter__7274(s__7275) {
                            return new cljs.core.LazySeq(null, function(map__7269, map__7269__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__7275__$1 = s__7275;
                                while (true) {
                                  var temp__4126__auto__ = cljs.core.seq.call(null, s__7275__$1);
                                  if (temp__4126__auto__) {
                                    var s__7275__$2 = temp__4126__auto__;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__7275__$2)) {
                                      var c__4375__auto__ = cljs.core.chunk_first.call(null, s__7275__$2);
                                      var size__4376__auto__ = cljs.core.count.call(null, c__4375__auto__);
                                      var b__7277 = cljs.core.chunk_buffer.call(null, size__4376__auto__);
                                      if (function() {
                                        var i__7276 = 0;
                                        while (true) {
                                          if (i__7276 < size__4376__auto__) {
                                            var k = cljs.core._nth.call(null, c__4375__auto__, i__7276);
                                            cljs.core.chunk_append.call(null, b__7277, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                            var G__7279 = i__7276 + 1;
                                            i__7276 = G__7279;
                                            continue;
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__7277), iter__7274.call(null, cljs.core.chunk_rest.call(null, s__7275__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__7277), null);
                                      }
                                    } else {
                                      var k = cljs.core.first.call(null, s__7275__$2);
                                      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__7274.call(null, cljs.core.rest.call(null, s__7275__$2)));
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(map__7269, map__7269__$1, keywordize_keys, keyfn), null, null);
                          };
                        }(map__7269, map__7269__$1, keywordize_keys, keyfn);
                        return iter__4377__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                      }());
                    } else {
                      return x__$1;
                    }
                  }
                }
              }
            };
          }(map__7269, map__7269__$1, keywordize_keys, keyfn);
          return f.call(null, x);
        } else {
          return null;
        }
      }
    };
    var G__7278 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__7278__delegate.call(this, x, opts);
    };
    G__7278.cljs$lang$maxFixedArity = 1;
    G__7278.cljs$lang$applyTo = function(arglist__7280) {
      var x = cljs.core.first(arglist__7280);
      var opts = cljs.core.rest(arglist__7280);
      return G__7278__delegate(x, opts);
    };
    G__7278.cljs$core$IFn$_invoke$arity$variadic = G__7278__delegate;
    return G__7278;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function() {
      var G__7281__delegate = function(args) {
        var v = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.call(null, f, args);
          cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__7281 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__7281__delegate.call(this, args);
      };
      G__7281.cljs$lang$maxFixedArity = 0;
      G__7281.cljs$lang$applyTo = function(arglist__7282) {
        var args = cljs.core.seq(arglist__7282);
        return G__7281__delegate(args);
      };
      G__7281.cljs$core$IFn$_invoke$arity$variadic = G__7281__delegate;
      return G__7281;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__7283 = ret;
        f = G__7283;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__7284__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__7284 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__7284__delegate.call(this, f, args);
    };
    G__7284.cljs$lang$maxFixedArity = 1;
    G__7284.cljs$lang$applyTo = function(arglist__7285) {
      var f = cljs.core.first(arglist__7285);
      var args = cljs.core.rest(arglist__7285);
      return G__7284__delegate(f, args);
    };
    G__7284.cljs$core$IFn$_invoke$arity$variadic = G__7284__delegate;
    return G__7284;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc_BANG_.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__7286) {
    var f = cljs.core.first(arglist__7286);
    var args = cljs.core.rest(arglist__7286);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3639__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__3639__auto__) {
      return or__3639__auto__;
    } else {
      var or__3639__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3639__auto____$1) {
        return or__3639__auto____$1;
      } else {
        var and__3627__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__3627__auto__) {
          var and__3627__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__3627__auto____$1) {
            var and__3627__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__3627__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__7287 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__7288 = i + 1;
                  ret = G__7287;
                  i = G__7288;
                  continue;
                }
                break;
              }
            } else {
              return and__3627__auto____$2;
            }
          } else {
            return and__3627__auto____$1;
          }
        } else {
          return and__3627__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null)))));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.call(null, tag, parent)) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null)))));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3639__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "already has" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent) + "as ancestor");
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error("Cyclic derivation:" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent) + "has" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "as ancestor");
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3639__auto__)) {
      return or__3639__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__7289_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__7289_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__7289_SHARP_), cljs.core.second.call(null, p1__7289_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__7290_SHARP_, p2__7291_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.derive, p1__7290_SHARP_, p2__7291_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3639__auto__ = cljs.core.truth_(function() {
    var and__3627__auto__ = xprefs;
    if (cljs.core.truth_(and__3627__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__3627__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3639__auto__)) {
    return or__3639__auto__;
  } else {
    var or__3639__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__7292 = cljs.core.rest.call(null, ps);
          ps = G__7292;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3639__auto____$1)) {
      return or__3639__auto____$1;
    } else {
      var or__3639__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__7293 = cljs.core.rest.call(null, ps);
            ps = G__7293;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3639__auto____$2)) {
        return or__3639__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3639__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__3639__auto__)) {
    return or__3639__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__7296) {
    var vec__7297 = p__7296;
    var k = cljs.core.nth.call(null, vec__7297, 0, null);
    var _ = cljs.core.nth.call(null, vec__7297, 1, null);
    var e = vec__7297;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3639__auto__ = be == null;
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error("Multiple methods in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + "' match dispatch value: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val) + " -\x3e " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(k) + " and " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, be2)) + ", and neither is preferred");
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj7299 = {};
  return obj7299;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3627__auto__ = mf;
    if (and__3627__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4275__auto__ = mf == null ? null : mf;
    return function() {
      var or__3639__auto__ = cljs.core._reset[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._reset["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3627__auto__ = mf;
    if (and__3627__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4275__auto__ = mf == null ? null : mf;
    return function() {
      var or__3639__auto__ = cljs.core._add_method[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._add_method["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3627__auto__ = mf;
    if (and__3627__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4275__auto__ = mf == null ? null : mf;
    return function() {
      var or__3639__auto__ = cljs.core._remove_method[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._remove_method["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3627__auto__ = mf;
    if (and__3627__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4275__auto__ = mf == null ? null : mf;
    return function() {
      var or__3639__auto__ = cljs.core._prefer_method[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3627__auto__ = mf;
    if (and__3627__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4275__auto__ = mf == null ? null : mf;
    return function() {
      var or__3639__auto__ = cljs.core._get_method[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._get_method["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3627__auto__ = mf;
    if (and__3627__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4275__auto__ = mf == null ? null : mf;
    return function() {
      var or__3639__auto__ = cljs.core._methods[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._methods["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3627__auto__ = mf;
    if (and__3627__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4275__auto__ = mf == null ? null : mf;
    return function() {
      var or__3639__auto__ = cljs.core._prefers[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._prefers["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error("No method in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + "' for dispatch value: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 256;
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/MultiFn");
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error("Preference conflict in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name) + "': " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_y) + " is already preferred to " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_x));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__7301 = null;
  var G__7301__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a);
  };
  var G__7301__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b);
  };
  var G__7301__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c);
  };
  var G__7301__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d);
  };
  var G__7301__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e);
  };
  var G__7301__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f);
  };
  var G__7301__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__7301__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__7301__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__7301__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__7301__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__7301__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__7301__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__7301__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__7301__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__7301__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__7301__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__7301__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__7301__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__7301__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__7301__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__7301 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 2:
        return G__7301__2.call(this, self__, a);
      case 3:
        return G__7301__3.call(this, self__, a, b);
      case 4:
        return G__7301__4.call(this, self__, a, b, c);
      case 5:
        return G__7301__5.call(this, self__, a, b, c, d);
      case 6:
        return G__7301__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__7301__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__7301__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__7301__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__7301__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__7301__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__7301__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__7301__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__7301__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__7301__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__7301__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__7301__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__7301__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__7301__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__7301__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__7301__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__7301__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7301.cljs$core$IFn$_invoke$arity$2 = G__7301__2;
  G__7301.cljs$core$IFn$_invoke$arity$3 = G__7301__3;
  G__7301.cljs$core$IFn$_invoke$arity$4 = G__7301__4;
  G__7301.cljs$core$IFn$_invoke$arity$5 = G__7301__5;
  G__7301.cljs$core$IFn$_invoke$arity$6 = G__7301__6;
  G__7301.cljs$core$IFn$_invoke$arity$7 = G__7301__7;
  G__7301.cljs$core$IFn$_invoke$arity$8 = G__7301__8;
  G__7301.cljs$core$IFn$_invoke$arity$9 = G__7301__9;
  G__7301.cljs$core$IFn$_invoke$arity$10 = G__7301__10;
  G__7301.cljs$core$IFn$_invoke$arity$11 = G__7301__11;
  G__7301.cljs$core$IFn$_invoke$arity$12 = G__7301__12;
  G__7301.cljs$core$IFn$_invoke$arity$13 = G__7301__13;
  G__7301.cljs$core$IFn$_invoke$arity$14 = G__7301__14;
  G__7301.cljs$core$IFn$_invoke$arity$15 = G__7301__15;
  G__7301.cljs$core$IFn$_invoke$arity$16 = G__7301__16;
  G__7301.cljs$core$IFn$_invoke$arity$17 = G__7301__17;
  G__7301.cljs$core$IFn$_invoke$arity$18 = G__7301__18;
  G__7301.cljs$core$IFn$_invoke$arity$19 = G__7301__19;
  G__7301.cljs$core$IFn$_invoke$arity$20 = G__7301__20;
  G__7301.cljs$core$IFn$_invoke$arity$21 = G__7301__21;
  G__7301.cljs$core$IFn$_invoke$arity$22 = G__7301__22;
  return G__7301;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args7300) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args7300)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/UUID");
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, '#uuid "' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.uuid) + '"');
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4218__auto__, writer__4219__auto__, opts__4220__auto__) {
  return cljs.core._write.call(null, writer__4219__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, 
  "letfn*", "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, 
  null), null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
goog.provide("quiescent");
goog.require("cljs.core");
quiescent.js_props = function js_props(obj) {
  if (cljs.core.map_QMARK_.call(null, obj)) {
    var o = function() {
      var obj10881 = {};
      return obj10881;
    }();
    var seq__10882_10888 = cljs.core.seq.call(null, obj);
    var chunk__10883_10889 = null;
    var count__10884_10890 = 0;
    var i__10885_10891 = 0;
    while (true) {
      if (i__10885_10891 < count__10884_10890) {
        var vec__10886_10892 = cljs.core._nth.call(null, chunk__10883_10889, i__10885_10891);
        var k_10893 = cljs.core.nth.call(null, vec__10886_10892, 0, null);
        var v_10894 = cljs.core.nth.call(null, vec__10886_10892, 1, null);
        o[cljs.core.name.call(null, k_10893)] = js_props.call(null, v_10894);
        var G__10895 = seq__10882_10888;
        var G__10896 = chunk__10883_10889;
        var G__10897 = count__10884_10890;
        var G__10898 = i__10885_10891 + 1;
        seq__10882_10888 = G__10895;
        chunk__10883_10889 = G__10896;
        count__10884_10890 = G__10897;
        i__10885_10891 = G__10898;
        continue;
      } else {
        var temp__4126__auto___10899 = cljs.core.seq.call(null, seq__10882_10888);
        if (temp__4126__auto___10899) {
          var seq__10882_10900__$1 = temp__4126__auto___10899;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__10882_10900__$1)) {
            var c__4408__auto___10901 = cljs.core.chunk_first.call(null, seq__10882_10900__$1);
            var G__10902 = cljs.core.chunk_rest.call(null, seq__10882_10900__$1);
            var G__10903 = c__4408__auto___10901;
            var G__10904 = cljs.core.count.call(null, c__4408__auto___10901);
            var G__10905 = 0;
            seq__10882_10888 = G__10902;
            chunk__10883_10889 = G__10903;
            count__10884_10890 = G__10904;
            i__10885_10891 = G__10905;
            continue;
          } else {
            var vec__10887_10906 = cljs.core.first.call(null, seq__10882_10900__$1);
            var k_10907 = cljs.core.nth.call(null, vec__10887_10906, 0, null);
            var v_10908 = cljs.core.nth.call(null, vec__10887_10906, 1, null);
            o[cljs.core.name.call(null, k_10907)] = js_props.call(null, v_10908);
            var G__10909 = cljs.core.next.call(null, seq__10882_10900__$1);
            var G__10910 = null;
            var G__10911 = 0;
            var G__10912 = 0;
            seq__10882_10888 = G__10909;
            chunk__10883_10889 = G__10910;
            count__10884_10890 = G__10911;
            i__10885_10891 = G__10912;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return o;
  } else {
    return obj;
  }
};
quiescent._STAR_component_STAR_ = null;
quiescent.component = function component(renderer) {
  var react_component = React.createClass({"render":function() {
    var this$ = this;
    var _STAR_component_STAR_10914 = quiescent._STAR_component_STAR_;
    try {
      quiescent._STAR_component_STAR_ = this$;
      return cljs.core.apply.call(null, renderer, this$.props["value"], this$.props["statics"]);
    } finally {
      quiescent._STAR_component_STAR_ = _STAR_component_STAR_10914;
    }
  }, "shouldComponentUpdate":function(next_props, _) {
    var this$ = this;
    return cljs.core.not_EQ_.call(null, this$.props["value"], next_props["value"]);
  }});
  return function(react_component) {
    return function() {
      var G__10915__delegate = function(value, static_args) {
        return react_component.call(null, {"statics":static_args, "value":value});
      };
      var G__10915 = function(value, var_args) {
        var static_args = null;
        if (arguments.length > 1) {
          static_args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
        }
        return G__10915__delegate.call(this, value, static_args);
      };
      G__10915.cljs$lang$maxFixedArity = 1;
      G__10915.cljs$lang$applyTo = function(arglist__10916) {
        var value = cljs.core.first(arglist__10916);
        var static_args = cljs.core.rest(arglist__10916);
        return G__10915__delegate(value, static_args);
      };
      G__10915.cljs$core$IFn$_invoke$arity$variadic = G__10915__delegate;
      return G__10915;
    }();
  }(react_component);
};
quiescent.WrapperComponent = React.createClass({"componentWillUnmount":function() {
  var this$ = this;
  var temp__4126__auto__ = this$.props["onWillUnmount"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    var _STAR_component_STAR_10921 = quiescent._STAR_component_STAR_;
    try {
      quiescent._STAR_component_STAR_ = this$;
      return f.call(null);
    } finally {
      quiescent._STAR_component_STAR_ = _STAR_component_STAR_10921;
    }
  } else {
    return null;
  }
}, "componentWillUpdate":function(_, ___$1) {
  var this$ = this;
  var temp__4126__auto__ = this$.props["onWillUpdate"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    var _STAR_component_STAR_10920 = quiescent._STAR_component_STAR_;
    try {
      quiescent._STAR_component_STAR_ = this$;
      return f.call(null);
    } finally {
      quiescent._STAR_component_STAR_ = _STAR_component_STAR_10920;
    }
  } else {
    return null;
  }
}, "componentWillMount":function() {
  var this$ = this;
  var temp__4126__auto__ = this$.props["onWillMount"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    var _STAR_component_STAR_10919 = quiescent._STAR_component_STAR_;
    try {
      quiescent._STAR_component_STAR_ = this$;
      return f.call(null);
    } finally {
      quiescent._STAR_component_STAR_ = _STAR_component_STAR_10919;
    }
  } else {
    return null;
  }
}, "componentDidMount":function() {
  var this$ = this;
  var temp__4126__auto__ = this$.props["onMount"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    var _STAR_component_STAR_10918 = quiescent._STAR_component_STAR_;
    try {
      quiescent._STAR_component_STAR_ = this$;
      return f.call(null, this$.getDOMNode());
    } finally {
      quiescent._STAR_component_STAR_ = _STAR_component_STAR_10918;
    }
  } else {
    return null;
  }
}, "componentDidUpdate":function(prev_props, prev_state) {
  var this$ = this;
  var temp__4126__auto__ = this$.props["onUpdate"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    var _STAR_component_STAR_10917 = quiescent._STAR_component_STAR_;
    try {
      quiescent._STAR_component_STAR_ = this$;
      return f.call(null, this$.getDOMNode());
    } finally {
      quiescent._STAR_component_STAR_ = _STAR_component_STAR_10917;
    }
  } else {
    return null;
  }
}, "render":function() {
  var this$ = this;
  return this$.props["wrappee"];
}});
quiescent.wrapper = function() {
  var wrapper__delegate = function(child, kvs) {
    var props = quiescent.js_props.call(null, cljs.core.apply.call(null, cljs.core.array_map, new cljs.core.Keyword(null, "wrappee", "wrappee", 876822573), child, kvs));
    var temp__4126__auto___10922 = child.props["key"];
    if (cljs.core.truth_(temp__4126__auto___10922)) {
      var key_10923 = temp__4126__auto___10922;
      props["key"] = key_10923;
    } else {
    }
    return quiescent.WrapperComponent.call(null, props);
  };
  var wrapper = function(child, var_args) {
    var kvs = null;
    if (arguments.length > 1) {
      kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return wrapper__delegate.call(this, child, kvs);
  };
  wrapper.cljs$lang$maxFixedArity = 1;
  wrapper.cljs$lang$applyTo = function(arglist__10924) {
    var child = cljs.core.first(arglist__10924);
    var kvs = cljs.core.rest(arglist__10924);
    return wrapper__delegate(child, kvs);
  };
  wrapper.cljs$core$IFn$_invoke$arity$variadic = wrapper__delegate;
  return wrapper;
}();
quiescent.on_update = function on_update(child, f) {
  return quiescent.wrapper.call(null, child, new cljs.core.Keyword(null, "onUpdate", "onUpdate", -315358968), f);
};
quiescent.on_mount = function on_mount(child, f) {
  return quiescent.wrapper.call(null, child, new cljs.core.Keyword(null, "onMount", "onMount", -876858467), f);
};
quiescent.on_render = function on_render(child, f) {
  return quiescent.wrapper.call(null, child, new cljs.core.Keyword(null, "onMount", "onMount", -876858467), f, new cljs.core.Keyword(null, "onUpdate", "onUpdate", -315358968), f);
};
quiescent.on_will_mount = function on_will_mount(child, f) {
  return quiescent.wrapper.call(null, child, new cljs.core.Keyword(null, "onWillMount", "onWillMount", -2065876946), f);
};
quiescent.on_will_update = function on_will_update(child, f) {
  return quiescent.wrapper.call(null, child, new cljs.core.Keyword(null, "onWillUpdate", "onWillUpdate", 1307659073), f);
};
quiescent.on_will_render = function on_will_render(child, f) {
  return quiescent.wrapper.call(null, child, new cljs.core.Keyword(null, "onWillMount", "onWillMount", -2065876946), f, new cljs.core.Keyword(null, "onWillUpdate", "onWillUpdate", 1307659073), f);
};
quiescent.on_will_unmount = function on_will_unmount(child, f) {
  return quiescent.wrapper.call(null, child, new cljs.core.Keyword(null, "onWillUnmount", "onWillUnmount", -16104606), f);
};
quiescent.render = function render(component, node) {
  return React.renderComponent(component, node);
};
goog.provide("quiescent.dom");
goog.require("cljs.core");
goog.require("quiescent");
goog.require("quiescent");
quiescent.dom.a = function() {
  var a__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7306_8254 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7307_8255 = null;
    var count__7308_8256 = 0;
    var i__7309_8257 = 0;
    while (true) {
      if (i__7309_8257 < count__7308_8256) {
        var arg__5130__auto___8258 = cljs.core._nth.call(null, chunk__7307_8255, i__7309_8257);
        a__5129__auto__.push(arg__5130__auto___8258);
        var G__8259 = seq__7306_8254;
        var G__8260 = chunk__7307_8255;
        var G__8261 = count__7308_8256;
        var G__8262 = i__7309_8257 + 1;
        seq__7306_8254 = G__8259;
        chunk__7307_8255 = G__8260;
        count__7308_8256 = G__8261;
        i__7309_8257 = G__8262;
        continue;
      } else {
        var temp__4126__auto___8263 = cljs.core.seq.call(null, seq__7306_8254);
        if (temp__4126__auto___8263) {
          var seq__7306_8264__$1 = temp__4126__auto___8263;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7306_8264__$1)) {
            var c__4408__auto___8265 = cljs.core.chunk_first.call(null, seq__7306_8264__$1);
            var G__8266 = cljs.core.chunk_rest.call(null, seq__7306_8264__$1);
            var G__8267 = c__4408__auto___8265;
            var G__8268 = cljs.core.count.call(null, c__4408__auto___8265);
            var G__8269 = 0;
            seq__7306_8254 = G__8266;
            chunk__7307_8255 = G__8267;
            count__7308_8256 = G__8268;
            i__7309_8257 = G__8269;
            continue;
          } else {
            var arg__5130__auto___8270 = cljs.core.first.call(null, seq__7306_8264__$1);
            a__5129__auto__.push(arg__5130__auto___8270);
            var G__8271 = cljs.core.next.call(null, seq__7306_8264__$1);
            var G__8272 = null;
            var G__8273 = 0;
            var G__8274 = 0;
            seq__7306_8254 = G__8271;
            chunk__7307_8255 = G__8272;
            count__7308_8256 = G__8273;
            i__7309_8257 = G__8274;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.a.apply(null, a__5129__auto__);
  };
  var a = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return a__delegate.call(this, args__5128__auto__);
  };
  a.cljs$lang$maxFixedArity = 0;
  a.cljs$lang$applyTo = function(arglist__8275) {
    var args__5128__auto__ = cljs.core.seq(arglist__8275);
    return a__delegate(args__5128__auto__);
  };
  a.cljs$core$IFn$_invoke$arity$variadic = a__delegate;
  return a;
}();
quiescent.dom.abbr = function() {
  var abbr__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7314_8276 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7315_8277 = null;
    var count__7316_8278 = 0;
    var i__7317_8279 = 0;
    while (true) {
      if (i__7317_8279 < count__7316_8278) {
        var arg__5130__auto___8280 = cljs.core._nth.call(null, chunk__7315_8277, i__7317_8279);
        a__5129__auto__.push(arg__5130__auto___8280);
        var G__8281 = seq__7314_8276;
        var G__8282 = chunk__7315_8277;
        var G__8283 = count__7316_8278;
        var G__8284 = i__7317_8279 + 1;
        seq__7314_8276 = G__8281;
        chunk__7315_8277 = G__8282;
        count__7316_8278 = G__8283;
        i__7317_8279 = G__8284;
        continue;
      } else {
        var temp__4126__auto___8285 = cljs.core.seq.call(null, seq__7314_8276);
        if (temp__4126__auto___8285) {
          var seq__7314_8286__$1 = temp__4126__auto___8285;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7314_8286__$1)) {
            var c__4408__auto___8287 = cljs.core.chunk_first.call(null, seq__7314_8286__$1);
            var G__8288 = cljs.core.chunk_rest.call(null, seq__7314_8286__$1);
            var G__8289 = c__4408__auto___8287;
            var G__8290 = cljs.core.count.call(null, c__4408__auto___8287);
            var G__8291 = 0;
            seq__7314_8276 = G__8288;
            chunk__7315_8277 = G__8289;
            count__7316_8278 = G__8290;
            i__7317_8279 = G__8291;
            continue;
          } else {
            var arg__5130__auto___8292 = cljs.core.first.call(null, seq__7314_8286__$1);
            a__5129__auto__.push(arg__5130__auto___8292);
            var G__8293 = cljs.core.next.call(null, seq__7314_8286__$1);
            var G__8294 = null;
            var G__8295 = 0;
            var G__8296 = 0;
            seq__7314_8276 = G__8293;
            chunk__7315_8277 = G__8294;
            count__7316_8278 = G__8295;
            i__7317_8279 = G__8296;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.abbr.apply(null, a__5129__auto__);
  };
  var abbr = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return abbr__delegate.call(this, args__5128__auto__);
  };
  abbr.cljs$lang$maxFixedArity = 0;
  abbr.cljs$lang$applyTo = function(arglist__8297) {
    var args__5128__auto__ = cljs.core.seq(arglist__8297);
    return abbr__delegate(args__5128__auto__);
  };
  abbr.cljs$core$IFn$_invoke$arity$variadic = abbr__delegate;
  return abbr;
}();
quiescent.dom.address = function() {
  var address__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7322_8298 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7323_8299 = null;
    var count__7324_8300 = 0;
    var i__7325_8301 = 0;
    while (true) {
      if (i__7325_8301 < count__7324_8300) {
        var arg__5130__auto___8302 = cljs.core._nth.call(null, chunk__7323_8299, i__7325_8301);
        a__5129__auto__.push(arg__5130__auto___8302);
        var G__8303 = seq__7322_8298;
        var G__8304 = chunk__7323_8299;
        var G__8305 = count__7324_8300;
        var G__8306 = i__7325_8301 + 1;
        seq__7322_8298 = G__8303;
        chunk__7323_8299 = G__8304;
        count__7324_8300 = G__8305;
        i__7325_8301 = G__8306;
        continue;
      } else {
        var temp__4126__auto___8307 = cljs.core.seq.call(null, seq__7322_8298);
        if (temp__4126__auto___8307) {
          var seq__7322_8308__$1 = temp__4126__auto___8307;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7322_8308__$1)) {
            var c__4408__auto___8309 = cljs.core.chunk_first.call(null, seq__7322_8308__$1);
            var G__8310 = cljs.core.chunk_rest.call(null, seq__7322_8308__$1);
            var G__8311 = c__4408__auto___8309;
            var G__8312 = cljs.core.count.call(null, c__4408__auto___8309);
            var G__8313 = 0;
            seq__7322_8298 = G__8310;
            chunk__7323_8299 = G__8311;
            count__7324_8300 = G__8312;
            i__7325_8301 = G__8313;
            continue;
          } else {
            var arg__5130__auto___8314 = cljs.core.first.call(null, seq__7322_8308__$1);
            a__5129__auto__.push(arg__5130__auto___8314);
            var G__8315 = cljs.core.next.call(null, seq__7322_8308__$1);
            var G__8316 = null;
            var G__8317 = 0;
            var G__8318 = 0;
            seq__7322_8298 = G__8315;
            chunk__7323_8299 = G__8316;
            count__7324_8300 = G__8317;
            i__7325_8301 = G__8318;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.address.apply(null, a__5129__auto__);
  };
  var address = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return address__delegate.call(this, args__5128__auto__);
  };
  address.cljs$lang$maxFixedArity = 0;
  address.cljs$lang$applyTo = function(arglist__8319) {
    var args__5128__auto__ = cljs.core.seq(arglist__8319);
    return address__delegate(args__5128__auto__);
  };
  address.cljs$core$IFn$_invoke$arity$variadic = address__delegate;
  return address;
}();
quiescent.dom.area = function() {
  var area__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7330_8320 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7331_8321 = null;
    var count__7332_8322 = 0;
    var i__7333_8323 = 0;
    while (true) {
      if (i__7333_8323 < count__7332_8322) {
        var arg__5130__auto___8324 = cljs.core._nth.call(null, chunk__7331_8321, i__7333_8323);
        a__5129__auto__.push(arg__5130__auto___8324);
        var G__8325 = seq__7330_8320;
        var G__8326 = chunk__7331_8321;
        var G__8327 = count__7332_8322;
        var G__8328 = i__7333_8323 + 1;
        seq__7330_8320 = G__8325;
        chunk__7331_8321 = G__8326;
        count__7332_8322 = G__8327;
        i__7333_8323 = G__8328;
        continue;
      } else {
        var temp__4126__auto___8329 = cljs.core.seq.call(null, seq__7330_8320);
        if (temp__4126__auto___8329) {
          var seq__7330_8330__$1 = temp__4126__auto___8329;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7330_8330__$1)) {
            var c__4408__auto___8331 = cljs.core.chunk_first.call(null, seq__7330_8330__$1);
            var G__8332 = cljs.core.chunk_rest.call(null, seq__7330_8330__$1);
            var G__8333 = c__4408__auto___8331;
            var G__8334 = cljs.core.count.call(null, c__4408__auto___8331);
            var G__8335 = 0;
            seq__7330_8320 = G__8332;
            chunk__7331_8321 = G__8333;
            count__7332_8322 = G__8334;
            i__7333_8323 = G__8335;
            continue;
          } else {
            var arg__5130__auto___8336 = cljs.core.first.call(null, seq__7330_8330__$1);
            a__5129__auto__.push(arg__5130__auto___8336);
            var G__8337 = cljs.core.next.call(null, seq__7330_8330__$1);
            var G__8338 = null;
            var G__8339 = 0;
            var G__8340 = 0;
            seq__7330_8320 = G__8337;
            chunk__7331_8321 = G__8338;
            count__7332_8322 = G__8339;
            i__7333_8323 = G__8340;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.area.apply(null, a__5129__auto__);
  };
  var area = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return area__delegate.call(this, args__5128__auto__);
  };
  area.cljs$lang$maxFixedArity = 0;
  area.cljs$lang$applyTo = function(arglist__8341) {
    var args__5128__auto__ = cljs.core.seq(arglist__8341);
    return area__delegate(args__5128__auto__);
  };
  area.cljs$core$IFn$_invoke$arity$variadic = area__delegate;
  return area;
}();
quiescent.dom.article = function() {
  var article__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7338_8342 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7339_8343 = null;
    var count__7340_8344 = 0;
    var i__7341_8345 = 0;
    while (true) {
      if (i__7341_8345 < count__7340_8344) {
        var arg__5130__auto___8346 = cljs.core._nth.call(null, chunk__7339_8343, i__7341_8345);
        a__5129__auto__.push(arg__5130__auto___8346);
        var G__8347 = seq__7338_8342;
        var G__8348 = chunk__7339_8343;
        var G__8349 = count__7340_8344;
        var G__8350 = i__7341_8345 + 1;
        seq__7338_8342 = G__8347;
        chunk__7339_8343 = G__8348;
        count__7340_8344 = G__8349;
        i__7341_8345 = G__8350;
        continue;
      } else {
        var temp__4126__auto___8351 = cljs.core.seq.call(null, seq__7338_8342);
        if (temp__4126__auto___8351) {
          var seq__7338_8352__$1 = temp__4126__auto___8351;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7338_8352__$1)) {
            var c__4408__auto___8353 = cljs.core.chunk_first.call(null, seq__7338_8352__$1);
            var G__8354 = cljs.core.chunk_rest.call(null, seq__7338_8352__$1);
            var G__8355 = c__4408__auto___8353;
            var G__8356 = cljs.core.count.call(null, c__4408__auto___8353);
            var G__8357 = 0;
            seq__7338_8342 = G__8354;
            chunk__7339_8343 = G__8355;
            count__7340_8344 = G__8356;
            i__7341_8345 = G__8357;
            continue;
          } else {
            var arg__5130__auto___8358 = cljs.core.first.call(null, seq__7338_8352__$1);
            a__5129__auto__.push(arg__5130__auto___8358);
            var G__8359 = cljs.core.next.call(null, seq__7338_8352__$1);
            var G__8360 = null;
            var G__8361 = 0;
            var G__8362 = 0;
            seq__7338_8342 = G__8359;
            chunk__7339_8343 = G__8360;
            count__7340_8344 = G__8361;
            i__7341_8345 = G__8362;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.article.apply(null, a__5129__auto__);
  };
  var article = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return article__delegate.call(this, args__5128__auto__);
  };
  article.cljs$lang$maxFixedArity = 0;
  article.cljs$lang$applyTo = function(arglist__8363) {
    var args__5128__auto__ = cljs.core.seq(arglist__8363);
    return article__delegate(args__5128__auto__);
  };
  article.cljs$core$IFn$_invoke$arity$variadic = article__delegate;
  return article;
}();
quiescent.dom.aside = function() {
  var aside__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7346_8364 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7347_8365 = null;
    var count__7348_8366 = 0;
    var i__7349_8367 = 0;
    while (true) {
      if (i__7349_8367 < count__7348_8366) {
        var arg__5130__auto___8368 = cljs.core._nth.call(null, chunk__7347_8365, i__7349_8367);
        a__5129__auto__.push(arg__5130__auto___8368);
        var G__8369 = seq__7346_8364;
        var G__8370 = chunk__7347_8365;
        var G__8371 = count__7348_8366;
        var G__8372 = i__7349_8367 + 1;
        seq__7346_8364 = G__8369;
        chunk__7347_8365 = G__8370;
        count__7348_8366 = G__8371;
        i__7349_8367 = G__8372;
        continue;
      } else {
        var temp__4126__auto___8373 = cljs.core.seq.call(null, seq__7346_8364);
        if (temp__4126__auto___8373) {
          var seq__7346_8374__$1 = temp__4126__auto___8373;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7346_8374__$1)) {
            var c__4408__auto___8375 = cljs.core.chunk_first.call(null, seq__7346_8374__$1);
            var G__8376 = cljs.core.chunk_rest.call(null, seq__7346_8374__$1);
            var G__8377 = c__4408__auto___8375;
            var G__8378 = cljs.core.count.call(null, c__4408__auto___8375);
            var G__8379 = 0;
            seq__7346_8364 = G__8376;
            chunk__7347_8365 = G__8377;
            count__7348_8366 = G__8378;
            i__7349_8367 = G__8379;
            continue;
          } else {
            var arg__5130__auto___8380 = cljs.core.first.call(null, seq__7346_8374__$1);
            a__5129__auto__.push(arg__5130__auto___8380);
            var G__8381 = cljs.core.next.call(null, seq__7346_8374__$1);
            var G__8382 = null;
            var G__8383 = 0;
            var G__8384 = 0;
            seq__7346_8364 = G__8381;
            chunk__7347_8365 = G__8382;
            count__7348_8366 = G__8383;
            i__7349_8367 = G__8384;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.aside.apply(null, a__5129__auto__);
  };
  var aside = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return aside__delegate.call(this, args__5128__auto__);
  };
  aside.cljs$lang$maxFixedArity = 0;
  aside.cljs$lang$applyTo = function(arglist__8385) {
    var args__5128__auto__ = cljs.core.seq(arglist__8385);
    return aside__delegate(args__5128__auto__);
  };
  aside.cljs$core$IFn$_invoke$arity$variadic = aside__delegate;
  return aside;
}();
quiescent.dom.audio = function() {
  var audio__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7354_8386 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7355_8387 = null;
    var count__7356_8388 = 0;
    var i__7357_8389 = 0;
    while (true) {
      if (i__7357_8389 < count__7356_8388) {
        var arg__5130__auto___8390 = cljs.core._nth.call(null, chunk__7355_8387, i__7357_8389);
        a__5129__auto__.push(arg__5130__auto___8390);
        var G__8391 = seq__7354_8386;
        var G__8392 = chunk__7355_8387;
        var G__8393 = count__7356_8388;
        var G__8394 = i__7357_8389 + 1;
        seq__7354_8386 = G__8391;
        chunk__7355_8387 = G__8392;
        count__7356_8388 = G__8393;
        i__7357_8389 = G__8394;
        continue;
      } else {
        var temp__4126__auto___8395 = cljs.core.seq.call(null, seq__7354_8386);
        if (temp__4126__auto___8395) {
          var seq__7354_8396__$1 = temp__4126__auto___8395;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7354_8396__$1)) {
            var c__4408__auto___8397 = cljs.core.chunk_first.call(null, seq__7354_8396__$1);
            var G__8398 = cljs.core.chunk_rest.call(null, seq__7354_8396__$1);
            var G__8399 = c__4408__auto___8397;
            var G__8400 = cljs.core.count.call(null, c__4408__auto___8397);
            var G__8401 = 0;
            seq__7354_8386 = G__8398;
            chunk__7355_8387 = G__8399;
            count__7356_8388 = G__8400;
            i__7357_8389 = G__8401;
            continue;
          } else {
            var arg__5130__auto___8402 = cljs.core.first.call(null, seq__7354_8396__$1);
            a__5129__auto__.push(arg__5130__auto___8402);
            var G__8403 = cljs.core.next.call(null, seq__7354_8396__$1);
            var G__8404 = null;
            var G__8405 = 0;
            var G__8406 = 0;
            seq__7354_8386 = G__8403;
            chunk__7355_8387 = G__8404;
            count__7356_8388 = G__8405;
            i__7357_8389 = G__8406;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.audio.apply(null, a__5129__auto__);
  };
  var audio = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return audio__delegate.call(this, args__5128__auto__);
  };
  audio.cljs$lang$maxFixedArity = 0;
  audio.cljs$lang$applyTo = function(arglist__8407) {
    var args__5128__auto__ = cljs.core.seq(arglist__8407);
    return audio__delegate(args__5128__auto__);
  };
  audio.cljs$core$IFn$_invoke$arity$variadic = audio__delegate;
  return audio;
}();
quiescent.dom.b = function() {
  var b__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7362_8408 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7363_8409 = null;
    var count__7364_8410 = 0;
    var i__7365_8411 = 0;
    while (true) {
      if (i__7365_8411 < count__7364_8410) {
        var arg__5130__auto___8412 = cljs.core._nth.call(null, chunk__7363_8409, i__7365_8411);
        a__5129__auto__.push(arg__5130__auto___8412);
        var G__8413 = seq__7362_8408;
        var G__8414 = chunk__7363_8409;
        var G__8415 = count__7364_8410;
        var G__8416 = i__7365_8411 + 1;
        seq__7362_8408 = G__8413;
        chunk__7363_8409 = G__8414;
        count__7364_8410 = G__8415;
        i__7365_8411 = G__8416;
        continue;
      } else {
        var temp__4126__auto___8417 = cljs.core.seq.call(null, seq__7362_8408);
        if (temp__4126__auto___8417) {
          var seq__7362_8418__$1 = temp__4126__auto___8417;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7362_8418__$1)) {
            var c__4408__auto___8419 = cljs.core.chunk_first.call(null, seq__7362_8418__$1);
            var G__8420 = cljs.core.chunk_rest.call(null, seq__7362_8418__$1);
            var G__8421 = c__4408__auto___8419;
            var G__8422 = cljs.core.count.call(null, c__4408__auto___8419);
            var G__8423 = 0;
            seq__7362_8408 = G__8420;
            chunk__7363_8409 = G__8421;
            count__7364_8410 = G__8422;
            i__7365_8411 = G__8423;
            continue;
          } else {
            var arg__5130__auto___8424 = cljs.core.first.call(null, seq__7362_8418__$1);
            a__5129__auto__.push(arg__5130__auto___8424);
            var G__8425 = cljs.core.next.call(null, seq__7362_8418__$1);
            var G__8426 = null;
            var G__8427 = 0;
            var G__8428 = 0;
            seq__7362_8408 = G__8425;
            chunk__7363_8409 = G__8426;
            count__7364_8410 = G__8427;
            i__7365_8411 = G__8428;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.b.apply(null, a__5129__auto__);
  };
  var b = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return b__delegate.call(this, args__5128__auto__);
  };
  b.cljs$lang$maxFixedArity = 0;
  b.cljs$lang$applyTo = function(arglist__8429) {
    var args__5128__auto__ = cljs.core.seq(arglist__8429);
    return b__delegate(args__5128__auto__);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = b__delegate;
  return b;
}();
quiescent.dom.base = function() {
  var base__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7370_8430 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7371_8431 = null;
    var count__7372_8432 = 0;
    var i__7373_8433 = 0;
    while (true) {
      if (i__7373_8433 < count__7372_8432) {
        var arg__5130__auto___8434 = cljs.core._nth.call(null, chunk__7371_8431, i__7373_8433);
        a__5129__auto__.push(arg__5130__auto___8434);
        var G__8435 = seq__7370_8430;
        var G__8436 = chunk__7371_8431;
        var G__8437 = count__7372_8432;
        var G__8438 = i__7373_8433 + 1;
        seq__7370_8430 = G__8435;
        chunk__7371_8431 = G__8436;
        count__7372_8432 = G__8437;
        i__7373_8433 = G__8438;
        continue;
      } else {
        var temp__4126__auto___8439 = cljs.core.seq.call(null, seq__7370_8430);
        if (temp__4126__auto___8439) {
          var seq__7370_8440__$1 = temp__4126__auto___8439;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7370_8440__$1)) {
            var c__4408__auto___8441 = cljs.core.chunk_first.call(null, seq__7370_8440__$1);
            var G__8442 = cljs.core.chunk_rest.call(null, seq__7370_8440__$1);
            var G__8443 = c__4408__auto___8441;
            var G__8444 = cljs.core.count.call(null, c__4408__auto___8441);
            var G__8445 = 0;
            seq__7370_8430 = G__8442;
            chunk__7371_8431 = G__8443;
            count__7372_8432 = G__8444;
            i__7373_8433 = G__8445;
            continue;
          } else {
            var arg__5130__auto___8446 = cljs.core.first.call(null, seq__7370_8440__$1);
            a__5129__auto__.push(arg__5130__auto___8446);
            var G__8447 = cljs.core.next.call(null, seq__7370_8440__$1);
            var G__8448 = null;
            var G__8449 = 0;
            var G__8450 = 0;
            seq__7370_8430 = G__8447;
            chunk__7371_8431 = G__8448;
            count__7372_8432 = G__8449;
            i__7373_8433 = G__8450;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.base.apply(null, a__5129__auto__);
  };
  var base = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return base__delegate.call(this, args__5128__auto__);
  };
  base.cljs$lang$maxFixedArity = 0;
  base.cljs$lang$applyTo = function(arglist__8451) {
    var args__5128__auto__ = cljs.core.seq(arglist__8451);
    return base__delegate(args__5128__auto__);
  };
  base.cljs$core$IFn$_invoke$arity$variadic = base__delegate;
  return base;
}();
quiescent.dom.bdi = function() {
  var bdi__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7378_8452 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7379_8453 = null;
    var count__7380_8454 = 0;
    var i__7381_8455 = 0;
    while (true) {
      if (i__7381_8455 < count__7380_8454) {
        var arg__5130__auto___8456 = cljs.core._nth.call(null, chunk__7379_8453, i__7381_8455);
        a__5129__auto__.push(arg__5130__auto___8456);
        var G__8457 = seq__7378_8452;
        var G__8458 = chunk__7379_8453;
        var G__8459 = count__7380_8454;
        var G__8460 = i__7381_8455 + 1;
        seq__7378_8452 = G__8457;
        chunk__7379_8453 = G__8458;
        count__7380_8454 = G__8459;
        i__7381_8455 = G__8460;
        continue;
      } else {
        var temp__4126__auto___8461 = cljs.core.seq.call(null, seq__7378_8452);
        if (temp__4126__auto___8461) {
          var seq__7378_8462__$1 = temp__4126__auto___8461;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7378_8462__$1)) {
            var c__4408__auto___8463 = cljs.core.chunk_first.call(null, seq__7378_8462__$1);
            var G__8464 = cljs.core.chunk_rest.call(null, seq__7378_8462__$1);
            var G__8465 = c__4408__auto___8463;
            var G__8466 = cljs.core.count.call(null, c__4408__auto___8463);
            var G__8467 = 0;
            seq__7378_8452 = G__8464;
            chunk__7379_8453 = G__8465;
            count__7380_8454 = G__8466;
            i__7381_8455 = G__8467;
            continue;
          } else {
            var arg__5130__auto___8468 = cljs.core.first.call(null, seq__7378_8462__$1);
            a__5129__auto__.push(arg__5130__auto___8468);
            var G__8469 = cljs.core.next.call(null, seq__7378_8462__$1);
            var G__8470 = null;
            var G__8471 = 0;
            var G__8472 = 0;
            seq__7378_8452 = G__8469;
            chunk__7379_8453 = G__8470;
            count__7380_8454 = G__8471;
            i__7381_8455 = G__8472;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.bdi.apply(null, a__5129__auto__);
  };
  var bdi = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return bdi__delegate.call(this, args__5128__auto__);
  };
  bdi.cljs$lang$maxFixedArity = 0;
  bdi.cljs$lang$applyTo = function(arglist__8473) {
    var args__5128__auto__ = cljs.core.seq(arglist__8473);
    return bdi__delegate(args__5128__auto__);
  };
  bdi.cljs$core$IFn$_invoke$arity$variadic = bdi__delegate;
  return bdi;
}();
quiescent.dom.bdo = function() {
  var bdo__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7386_8474 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7387_8475 = null;
    var count__7388_8476 = 0;
    var i__7389_8477 = 0;
    while (true) {
      if (i__7389_8477 < count__7388_8476) {
        var arg__5130__auto___8478 = cljs.core._nth.call(null, chunk__7387_8475, i__7389_8477);
        a__5129__auto__.push(arg__5130__auto___8478);
        var G__8479 = seq__7386_8474;
        var G__8480 = chunk__7387_8475;
        var G__8481 = count__7388_8476;
        var G__8482 = i__7389_8477 + 1;
        seq__7386_8474 = G__8479;
        chunk__7387_8475 = G__8480;
        count__7388_8476 = G__8481;
        i__7389_8477 = G__8482;
        continue;
      } else {
        var temp__4126__auto___8483 = cljs.core.seq.call(null, seq__7386_8474);
        if (temp__4126__auto___8483) {
          var seq__7386_8484__$1 = temp__4126__auto___8483;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7386_8484__$1)) {
            var c__4408__auto___8485 = cljs.core.chunk_first.call(null, seq__7386_8484__$1);
            var G__8486 = cljs.core.chunk_rest.call(null, seq__7386_8484__$1);
            var G__8487 = c__4408__auto___8485;
            var G__8488 = cljs.core.count.call(null, c__4408__auto___8485);
            var G__8489 = 0;
            seq__7386_8474 = G__8486;
            chunk__7387_8475 = G__8487;
            count__7388_8476 = G__8488;
            i__7389_8477 = G__8489;
            continue;
          } else {
            var arg__5130__auto___8490 = cljs.core.first.call(null, seq__7386_8484__$1);
            a__5129__auto__.push(arg__5130__auto___8490);
            var G__8491 = cljs.core.next.call(null, seq__7386_8484__$1);
            var G__8492 = null;
            var G__8493 = 0;
            var G__8494 = 0;
            seq__7386_8474 = G__8491;
            chunk__7387_8475 = G__8492;
            count__7388_8476 = G__8493;
            i__7389_8477 = G__8494;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.bdo.apply(null, a__5129__auto__);
  };
  var bdo = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return bdo__delegate.call(this, args__5128__auto__);
  };
  bdo.cljs$lang$maxFixedArity = 0;
  bdo.cljs$lang$applyTo = function(arglist__8495) {
    var args__5128__auto__ = cljs.core.seq(arglist__8495);
    return bdo__delegate(args__5128__auto__);
  };
  bdo.cljs$core$IFn$_invoke$arity$variadic = bdo__delegate;
  return bdo;
}();
quiescent.dom.big = function() {
  var big__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7394_8496 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7395_8497 = null;
    var count__7396_8498 = 0;
    var i__7397_8499 = 0;
    while (true) {
      if (i__7397_8499 < count__7396_8498) {
        var arg__5130__auto___8500 = cljs.core._nth.call(null, chunk__7395_8497, i__7397_8499);
        a__5129__auto__.push(arg__5130__auto___8500);
        var G__8501 = seq__7394_8496;
        var G__8502 = chunk__7395_8497;
        var G__8503 = count__7396_8498;
        var G__8504 = i__7397_8499 + 1;
        seq__7394_8496 = G__8501;
        chunk__7395_8497 = G__8502;
        count__7396_8498 = G__8503;
        i__7397_8499 = G__8504;
        continue;
      } else {
        var temp__4126__auto___8505 = cljs.core.seq.call(null, seq__7394_8496);
        if (temp__4126__auto___8505) {
          var seq__7394_8506__$1 = temp__4126__auto___8505;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7394_8506__$1)) {
            var c__4408__auto___8507 = cljs.core.chunk_first.call(null, seq__7394_8506__$1);
            var G__8508 = cljs.core.chunk_rest.call(null, seq__7394_8506__$1);
            var G__8509 = c__4408__auto___8507;
            var G__8510 = cljs.core.count.call(null, c__4408__auto___8507);
            var G__8511 = 0;
            seq__7394_8496 = G__8508;
            chunk__7395_8497 = G__8509;
            count__7396_8498 = G__8510;
            i__7397_8499 = G__8511;
            continue;
          } else {
            var arg__5130__auto___8512 = cljs.core.first.call(null, seq__7394_8506__$1);
            a__5129__auto__.push(arg__5130__auto___8512);
            var G__8513 = cljs.core.next.call(null, seq__7394_8506__$1);
            var G__8514 = null;
            var G__8515 = 0;
            var G__8516 = 0;
            seq__7394_8496 = G__8513;
            chunk__7395_8497 = G__8514;
            count__7396_8498 = G__8515;
            i__7397_8499 = G__8516;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.big.apply(null, a__5129__auto__);
  };
  var big = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return big__delegate.call(this, args__5128__auto__);
  };
  big.cljs$lang$maxFixedArity = 0;
  big.cljs$lang$applyTo = function(arglist__8517) {
    var args__5128__auto__ = cljs.core.seq(arglist__8517);
    return big__delegate(args__5128__auto__);
  };
  big.cljs$core$IFn$_invoke$arity$variadic = big__delegate;
  return big;
}();
quiescent.dom.blockquote = function() {
  var blockquote__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7402_8518 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7403_8519 = null;
    var count__7404_8520 = 0;
    var i__7405_8521 = 0;
    while (true) {
      if (i__7405_8521 < count__7404_8520) {
        var arg__5130__auto___8522 = cljs.core._nth.call(null, chunk__7403_8519, i__7405_8521);
        a__5129__auto__.push(arg__5130__auto___8522);
        var G__8523 = seq__7402_8518;
        var G__8524 = chunk__7403_8519;
        var G__8525 = count__7404_8520;
        var G__8526 = i__7405_8521 + 1;
        seq__7402_8518 = G__8523;
        chunk__7403_8519 = G__8524;
        count__7404_8520 = G__8525;
        i__7405_8521 = G__8526;
        continue;
      } else {
        var temp__4126__auto___8527 = cljs.core.seq.call(null, seq__7402_8518);
        if (temp__4126__auto___8527) {
          var seq__7402_8528__$1 = temp__4126__auto___8527;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7402_8528__$1)) {
            var c__4408__auto___8529 = cljs.core.chunk_first.call(null, seq__7402_8528__$1);
            var G__8530 = cljs.core.chunk_rest.call(null, seq__7402_8528__$1);
            var G__8531 = c__4408__auto___8529;
            var G__8532 = cljs.core.count.call(null, c__4408__auto___8529);
            var G__8533 = 0;
            seq__7402_8518 = G__8530;
            chunk__7403_8519 = G__8531;
            count__7404_8520 = G__8532;
            i__7405_8521 = G__8533;
            continue;
          } else {
            var arg__5130__auto___8534 = cljs.core.first.call(null, seq__7402_8528__$1);
            a__5129__auto__.push(arg__5130__auto___8534);
            var G__8535 = cljs.core.next.call(null, seq__7402_8528__$1);
            var G__8536 = null;
            var G__8537 = 0;
            var G__8538 = 0;
            seq__7402_8518 = G__8535;
            chunk__7403_8519 = G__8536;
            count__7404_8520 = G__8537;
            i__7405_8521 = G__8538;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.blockquote.apply(null, a__5129__auto__);
  };
  var blockquote = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return blockquote__delegate.call(this, args__5128__auto__);
  };
  blockquote.cljs$lang$maxFixedArity = 0;
  blockquote.cljs$lang$applyTo = function(arglist__8539) {
    var args__5128__auto__ = cljs.core.seq(arglist__8539);
    return blockquote__delegate(args__5128__auto__);
  };
  blockquote.cljs$core$IFn$_invoke$arity$variadic = blockquote__delegate;
  return blockquote;
}();
quiescent.dom.body = function() {
  var body__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7410_8540 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7411_8541 = null;
    var count__7412_8542 = 0;
    var i__7413_8543 = 0;
    while (true) {
      if (i__7413_8543 < count__7412_8542) {
        var arg__5130__auto___8544 = cljs.core._nth.call(null, chunk__7411_8541, i__7413_8543);
        a__5129__auto__.push(arg__5130__auto___8544);
        var G__8545 = seq__7410_8540;
        var G__8546 = chunk__7411_8541;
        var G__8547 = count__7412_8542;
        var G__8548 = i__7413_8543 + 1;
        seq__7410_8540 = G__8545;
        chunk__7411_8541 = G__8546;
        count__7412_8542 = G__8547;
        i__7413_8543 = G__8548;
        continue;
      } else {
        var temp__4126__auto___8549 = cljs.core.seq.call(null, seq__7410_8540);
        if (temp__4126__auto___8549) {
          var seq__7410_8550__$1 = temp__4126__auto___8549;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7410_8550__$1)) {
            var c__4408__auto___8551 = cljs.core.chunk_first.call(null, seq__7410_8550__$1);
            var G__8552 = cljs.core.chunk_rest.call(null, seq__7410_8550__$1);
            var G__8553 = c__4408__auto___8551;
            var G__8554 = cljs.core.count.call(null, c__4408__auto___8551);
            var G__8555 = 0;
            seq__7410_8540 = G__8552;
            chunk__7411_8541 = G__8553;
            count__7412_8542 = G__8554;
            i__7413_8543 = G__8555;
            continue;
          } else {
            var arg__5130__auto___8556 = cljs.core.first.call(null, seq__7410_8550__$1);
            a__5129__auto__.push(arg__5130__auto___8556);
            var G__8557 = cljs.core.next.call(null, seq__7410_8550__$1);
            var G__8558 = null;
            var G__8559 = 0;
            var G__8560 = 0;
            seq__7410_8540 = G__8557;
            chunk__7411_8541 = G__8558;
            count__7412_8542 = G__8559;
            i__7413_8543 = G__8560;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.body.apply(null, a__5129__auto__);
  };
  var body = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return body__delegate.call(this, args__5128__auto__);
  };
  body.cljs$lang$maxFixedArity = 0;
  body.cljs$lang$applyTo = function(arglist__8561) {
    var args__5128__auto__ = cljs.core.seq(arglist__8561);
    return body__delegate(args__5128__auto__);
  };
  body.cljs$core$IFn$_invoke$arity$variadic = body__delegate;
  return body;
}();
quiescent.dom.br = function() {
  var br__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7418_8562 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7419_8563 = null;
    var count__7420_8564 = 0;
    var i__7421_8565 = 0;
    while (true) {
      if (i__7421_8565 < count__7420_8564) {
        var arg__5130__auto___8566 = cljs.core._nth.call(null, chunk__7419_8563, i__7421_8565);
        a__5129__auto__.push(arg__5130__auto___8566);
        var G__8567 = seq__7418_8562;
        var G__8568 = chunk__7419_8563;
        var G__8569 = count__7420_8564;
        var G__8570 = i__7421_8565 + 1;
        seq__7418_8562 = G__8567;
        chunk__7419_8563 = G__8568;
        count__7420_8564 = G__8569;
        i__7421_8565 = G__8570;
        continue;
      } else {
        var temp__4126__auto___8571 = cljs.core.seq.call(null, seq__7418_8562);
        if (temp__4126__auto___8571) {
          var seq__7418_8572__$1 = temp__4126__auto___8571;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7418_8572__$1)) {
            var c__4408__auto___8573 = cljs.core.chunk_first.call(null, seq__7418_8572__$1);
            var G__8574 = cljs.core.chunk_rest.call(null, seq__7418_8572__$1);
            var G__8575 = c__4408__auto___8573;
            var G__8576 = cljs.core.count.call(null, c__4408__auto___8573);
            var G__8577 = 0;
            seq__7418_8562 = G__8574;
            chunk__7419_8563 = G__8575;
            count__7420_8564 = G__8576;
            i__7421_8565 = G__8577;
            continue;
          } else {
            var arg__5130__auto___8578 = cljs.core.first.call(null, seq__7418_8572__$1);
            a__5129__auto__.push(arg__5130__auto___8578);
            var G__8579 = cljs.core.next.call(null, seq__7418_8572__$1);
            var G__8580 = null;
            var G__8581 = 0;
            var G__8582 = 0;
            seq__7418_8562 = G__8579;
            chunk__7419_8563 = G__8580;
            count__7420_8564 = G__8581;
            i__7421_8565 = G__8582;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.br.apply(null, a__5129__auto__);
  };
  var br = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return br__delegate.call(this, args__5128__auto__);
  };
  br.cljs$lang$maxFixedArity = 0;
  br.cljs$lang$applyTo = function(arglist__8583) {
    var args__5128__auto__ = cljs.core.seq(arglist__8583);
    return br__delegate(args__5128__auto__);
  };
  br.cljs$core$IFn$_invoke$arity$variadic = br__delegate;
  return br;
}();
quiescent.dom.button = function() {
  var button__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7426_8584 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7427_8585 = null;
    var count__7428_8586 = 0;
    var i__7429_8587 = 0;
    while (true) {
      if (i__7429_8587 < count__7428_8586) {
        var arg__5130__auto___8588 = cljs.core._nth.call(null, chunk__7427_8585, i__7429_8587);
        a__5129__auto__.push(arg__5130__auto___8588);
        var G__8589 = seq__7426_8584;
        var G__8590 = chunk__7427_8585;
        var G__8591 = count__7428_8586;
        var G__8592 = i__7429_8587 + 1;
        seq__7426_8584 = G__8589;
        chunk__7427_8585 = G__8590;
        count__7428_8586 = G__8591;
        i__7429_8587 = G__8592;
        continue;
      } else {
        var temp__4126__auto___8593 = cljs.core.seq.call(null, seq__7426_8584);
        if (temp__4126__auto___8593) {
          var seq__7426_8594__$1 = temp__4126__auto___8593;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7426_8594__$1)) {
            var c__4408__auto___8595 = cljs.core.chunk_first.call(null, seq__7426_8594__$1);
            var G__8596 = cljs.core.chunk_rest.call(null, seq__7426_8594__$1);
            var G__8597 = c__4408__auto___8595;
            var G__8598 = cljs.core.count.call(null, c__4408__auto___8595);
            var G__8599 = 0;
            seq__7426_8584 = G__8596;
            chunk__7427_8585 = G__8597;
            count__7428_8586 = G__8598;
            i__7429_8587 = G__8599;
            continue;
          } else {
            var arg__5130__auto___8600 = cljs.core.first.call(null, seq__7426_8594__$1);
            a__5129__auto__.push(arg__5130__auto___8600);
            var G__8601 = cljs.core.next.call(null, seq__7426_8594__$1);
            var G__8602 = null;
            var G__8603 = 0;
            var G__8604 = 0;
            seq__7426_8584 = G__8601;
            chunk__7427_8585 = G__8602;
            count__7428_8586 = G__8603;
            i__7429_8587 = G__8604;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.button.apply(null, a__5129__auto__);
  };
  var button = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return button__delegate.call(this, args__5128__auto__);
  };
  button.cljs$lang$maxFixedArity = 0;
  button.cljs$lang$applyTo = function(arglist__8605) {
    var args__5128__auto__ = cljs.core.seq(arglist__8605);
    return button__delegate(args__5128__auto__);
  };
  button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
  return button;
}();
quiescent.dom.canvas = function() {
  var canvas__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7434_8606 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7435_8607 = null;
    var count__7436_8608 = 0;
    var i__7437_8609 = 0;
    while (true) {
      if (i__7437_8609 < count__7436_8608) {
        var arg__5130__auto___8610 = cljs.core._nth.call(null, chunk__7435_8607, i__7437_8609);
        a__5129__auto__.push(arg__5130__auto___8610);
        var G__8611 = seq__7434_8606;
        var G__8612 = chunk__7435_8607;
        var G__8613 = count__7436_8608;
        var G__8614 = i__7437_8609 + 1;
        seq__7434_8606 = G__8611;
        chunk__7435_8607 = G__8612;
        count__7436_8608 = G__8613;
        i__7437_8609 = G__8614;
        continue;
      } else {
        var temp__4126__auto___8615 = cljs.core.seq.call(null, seq__7434_8606);
        if (temp__4126__auto___8615) {
          var seq__7434_8616__$1 = temp__4126__auto___8615;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7434_8616__$1)) {
            var c__4408__auto___8617 = cljs.core.chunk_first.call(null, seq__7434_8616__$1);
            var G__8618 = cljs.core.chunk_rest.call(null, seq__7434_8616__$1);
            var G__8619 = c__4408__auto___8617;
            var G__8620 = cljs.core.count.call(null, c__4408__auto___8617);
            var G__8621 = 0;
            seq__7434_8606 = G__8618;
            chunk__7435_8607 = G__8619;
            count__7436_8608 = G__8620;
            i__7437_8609 = G__8621;
            continue;
          } else {
            var arg__5130__auto___8622 = cljs.core.first.call(null, seq__7434_8616__$1);
            a__5129__auto__.push(arg__5130__auto___8622);
            var G__8623 = cljs.core.next.call(null, seq__7434_8616__$1);
            var G__8624 = null;
            var G__8625 = 0;
            var G__8626 = 0;
            seq__7434_8606 = G__8623;
            chunk__7435_8607 = G__8624;
            count__7436_8608 = G__8625;
            i__7437_8609 = G__8626;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.canvas.apply(null, a__5129__auto__);
  };
  var canvas = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return canvas__delegate.call(this, args__5128__auto__);
  };
  canvas.cljs$lang$maxFixedArity = 0;
  canvas.cljs$lang$applyTo = function(arglist__8627) {
    var args__5128__auto__ = cljs.core.seq(arglist__8627);
    return canvas__delegate(args__5128__auto__);
  };
  canvas.cljs$core$IFn$_invoke$arity$variadic = canvas__delegate;
  return canvas;
}();
quiescent.dom.caption = function() {
  var caption__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7442_8628 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7443_8629 = null;
    var count__7444_8630 = 0;
    var i__7445_8631 = 0;
    while (true) {
      if (i__7445_8631 < count__7444_8630) {
        var arg__5130__auto___8632 = cljs.core._nth.call(null, chunk__7443_8629, i__7445_8631);
        a__5129__auto__.push(arg__5130__auto___8632);
        var G__8633 = seq__7442_8628;
        var G__8634 = chunk__7443_8629;
        var G__8635 = count__7444_8630;
        var G__8636 = i__7445_8631 + 1;
        seq__7442_8628 = G__8633;
        chunk__7443_8629 = G__8634;
        count__7444_8630 = G__8635;
        i__7445_8631 = G__8636;
        continue;
      } else {
        var temp__4126__auto___8637 = cljs.core.seq.call(null, seq__7442_8628);
        if (temp__4126__auto___8637) {
          var seq__7442_8638__$1 = temp__4126__auto___8637;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7442_8638__$1)) {
            var c__4408__auto___8639 = cljs.core.chunk_first.call(null, seq__7442_8638__$1);
            var G__8640 = cljs.core.chunk_rest.call(null, seq__7442_8638__$1);
            var G__8641 = c__4408__auto___8639;
            var G__8642 = cljs.core.count.call(null, c__4408__auto___8639);
            var G__8643 = 0;
            seq__7442_8628 = G__8640;
            chunk__7443_8629 = G__8641;
            count__7444_8630 = G__8642;
            i__7445_8631 = G__8643;
            continue;
          } else {
            var arg__5130__auto___8644 = cljs.core.first.call(null, seq__7442_8638__$1);
            a__5129__auto__.push(arg__5130__auto___8644);
            var G__8645 = cljs.core.next.call(null, seq__7442_8638__$1);
            var G__8646 = null;
            var G__8647 = 0;
            var G__8648 = 0;
            seq__7442_8628 = G__8645;
            chunk__7443_8629 = G__8646;
            count__7444_8630 = G__8647;
            i__7445_8631 = G__8648;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.caption.apply(null, a__5129__auto__);
  };
  var caption = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return caption__delegate.call(this, args__5128__auto__);
  };
  caption.cljs$lang$maxFixedArity = 0;
  caption.cljs$lang$applyTo = function(arglist__8649) {
    var args__5128__auto__ = cljs.core.seq(arglist__8649);
    return caption__delegate(args__5128__auto__);
  };
  caption.cljs$core$IFn$_invoke$arity$variadic = caption__delegate;
  return caption;
}();
quiescent.dom.cite = function() {
  var cite__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7450_8650 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7451_8651 = null;
    var count__7452_8652 = 0;
    var i__7453_8653 = 0;
    while (true) {
      if (i__7453_8653 < count__7452_8652) {
        var arg__5130__auto___8654 = cljs.core._nth.call(null, chunk__7451_8651, i__7453_8653);
        a__5129__auto__.push(arg__5130__auto___8654);
        var G__8655 = seq__7450_8650;
        var G__8656 = chunk__7451_8651;
        var G__8657 = count__7452_8652;
        var G__8658 = i__7453_8653 + 1;
        seq__7450_8650 = G__8655;
        chunk__7451_8651 = G__8656;
        count__7452_8652 = G__8657;
        i__7453_8653 = G__8658;
        continue;
      } else {
        var temp__4126__auto___8659 = cljs.core.seq.call(null, seq__7450_8650);
        if (temp__4126__auto___8659) {
          var seq__7450_8660__$1 = temp__4126__auto___8659;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7450_8660__$1)) {
            var c__4408__auto___8661 = cljs.core.chunk_first.call(null, seq__7450_8660__$1);
            var G__8662 = cljs.core.chunk_rest.call(null, seq__7450_8660__$1);
            var G__8663 = c__4408__auto___8661;
            var G__8664 = cljs.core.count.call(null, c__4408__auto___8661);
            var G__8665 = 0;
            seq__7450_8650 = G__8662;
            chunk__7451_8651 = G__8663;
            count__7452_8652 = G__8664;
            i__7453_8653 = G__8665;
            continue;
          } else {
            var arg__5130__auto___8666 = cljs.core.first.call(null, seq__7450_8660__$1);
            a__5129__auto__.push(arg__5130__auto___8666);
            var G__8667 = cljs.core.next.call(null, seq__7450_8660__$1);
            var G__8668 = null;
            var G__8669 = 0;
            var G__8670 = 0;
            seq__7450_8650 = G__8667;
            chunk__7451_8651 = G__8668;
            count__7452_8652 = G__8669;
            i__7453_8653 = G__8670;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.cite.apply(null, a__5129__auto__);
  };
  var cite = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cite__delegate.call(this, args__5128__auto__);
  };
  cite.cljs$lang$maxFixedArity = 0;
  cite.cljs$lang$applyTo = function(arglist__8671) {
    var args__5128__auto__ = cljs.core.seq(arglist__8671);
    return cite__delegate(args__5128__auto__);
  };
  cite.cljs$core$IFn$_invoke$arity$variadic = cite__delegate;
  return cite;
}();
quiescent.dom.code = function() {
  var code__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7458_8672 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7459_8673 = null;
    var count__7460_8674 = 0;
    var i__7461_8675 = 0;
    while (true) {
      if (i__7461_8675 < count__7460_8674) {
        var arg__5130__auto___8676 = cljs.core._nth.call(null, chunk__7459_8673, i__7461_8675);
        a__5129__auto__.push(arg__5130__auto___8676);
        var G__8677 = seq__7458_8672;
        var G__8678 = chunk__7459_8673;
        var G__8679 = count__7460_8674;
        var G__8680 = i__7461_8675 + 1;
        seq__7458_8672 = G__8677;
        chunk__7459_8673 = G__8678;
        count__7460_8674 = G__8679;
        i__7461_8675 = G__8680;
        continue;
      } else {
        var temp__4126__auto___8681 = cljs.core.seq.call(null, seq__7458_8672);
        if (temp__4126__auto___8681) {
          var seq__7458_8682__$1 = temp__4126__auto___8681;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7458_8682__$1)) {
            var c__4408__auto___8683 = cljs.core.chunk_first.call(null, seq__7458_8682__$1);
            var G__8684 = cljs.core.chunk_rest.call(null, seq__7458_8682__$1);
            var G__8685 = c__4408__auto___8683;
            var G__8686 = cljs.core.count.call(null, c__4408__auto___8683);
            var G__8687 = 0;
            seq__7458_8672 = G__8684;
            chunk__7459_8673 = G__8685;
            count__7460_8674 = G__8686;
            i__7461_8675 = G__8687;
            continue;
          } else {
            var arg__5130__auto___8688 = cljs.core.first.call(null, seq__7458_8682__$1);
            a__5129__auto__.push(arg__5130__auto___8688);
            var G__8689 = cljs.core.next.call(null, seq__7458_8682__$1);
            var G__8690 = null;
            var G__8691 = 0;
            var G__8692 = 0;
            seq__7458_8672 = G__8689;
            chunk__7459_8673 = G__8690;
            count__7460_8674 = G__8691;
            i__7461_8675 = G__8692;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.code.apply(null, a__5129__auto__);
  };
  var code = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return code__delegate.call(this, args__5128__auto__);
  };
  code.cljs$lang$maxFixedArity = 0;
  code.cljs$lang$applyTo = function(arglist__8693) {
    var args__5128__auto__ = cljs.core.seq(arglist__8693);
    return code__delegate(args__5128__auto__);
  };
  code.cljs$core$IFn$_invoke$arity$variadic = code__delegate;
  return code;
}();
quiescent.dom.col = function() {
  var col__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7466_8694 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7467_8695 = null;
    var count__7468_8696 = 0;
    var i__7469_8697 = 0;
    while (true) {
      if (i__7469_8697 < count__7468_8696) {
        var arg__5130__auto___8698 = cljs.core._nth.call(null, chunk__7467_8695, i__7469_8697);
        a__5129__auto__.push(arg__5130__auto___8698);
        var G__8699 = seq__7466_8694;
        var G__8700 = chunk__7467_8695;
        var G__8701 = count__7468_8696;
        var G__8702 = i__7469_8697 + 1;
        seq__7466_8694 = G__8699;
        chunk__7467_8695 = G__8700;
        count__7468_8696 = G__8701;
        i__7469_8697 = G__8702;
        continue;
      } else {
        var temp__4126__auto___8703 = cljs.core.seq.call(null, seq__7466_8694);
        if (temp__4126__auto___8703) {
          var seq__7466_8704__$1 = temp__4126__auto___8703;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7466_8704__$1)) {
            var c__4408__auto___8705 = cljs.core.chunk_first.call(null, seq__7466_8704__$1);
            var G__8706 = cljs.core.chunk_rest.call(null, seq__7466_8704__$1);
            var G__8707 = c__4408__auto___8705;
            var G__8708 = cljs.core.count.call(null, c__4408__auto___8705);
            var G__8709 = 0;
            seq__7466_8694 = G__8706;
            chunk__7467_8695 = G__8707;
            count__7468_8696 = G__8708;
            i__7469_8697 = G__8709;
            continue;
          } else {
            var arg__5130__auto___8710 = cljs.core.first.call(null, seq__7466_8704__$1);
            a__5129__auto__.push(arg__5130__auto___8710);
            var G__8711 = cljs.core.next.call(null, seq__7466_8704__$1);
            var G__8712 = null;
            var G__8713 = 0;
            var G__8714 = 0;
            seq__7466_8694 = G__8711;
            chunk__7467_8695 = G__8712;
            count__7468_8696 = G__8713;
            i__7469_8697 = G__8714;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.col.apply(null, a__5129__auto__);
  };
  var col = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return col__delegate.call(this, args__5128__auto__);
  };
  col.cljs$lang$maxFixedArity = 0;
  col.cljs$lang$applyTo = function(arglist__8715) {
    var args__5128__auto__ = cljs.core.seq(arglist__8715);
    return col__delegate(args__5128__auto__);
  };
  col.cljs$core$IFn$_invoke$arity$variadic = col__delegate;
  return col;
}();
quiescent.dom.colgroup = function() {
  var colgroup__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7474_8716 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7475_8717 = null;
    var count__7476_8718 = 0;
    var i__7477_8719 = 0;
    while (true) {
      if (i__7477_8719 < count__7476_8718) {
        var arg__5130__auto___8720 = cljs.core._nth.call(null, chunk__7475_8717, i__7477_8719);
        a__5129__auto__.push(arg__5130__auto___8720);
        var G__8721 = seq__7474_8716;
        var G__8722 = chunk__7475_8717;
        var G__8723 = count__7476_8718;
        var G__8724 = i__7477_8719 + 1;
        seq__7474_8716 = G__8721;
        chunk__7475_8717 = G__8722;
        count__7476_8718 = G__8723;
        i__7477_8719 = G__8724;
        continue;
      } else {
        var temp__4126__auto___8725 = cljs.core.seq.call(null, seq__7474_8716);
        if (temp__4126__auto___8725) {
          var seq__7474_8726__$1 = temp__4126__auto___8725;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7474_8726__$1)) {
            var c__4408__auto___8727 = cljs.core.chunk_first.call(null, seq__7474_8726__$1);
            var G__8728 = cljs.core.chunk_rest.call(null, seq__7474_8726__$1);
            var G__8729 = c__4408__auto___8727;
            var G__8730 = cljs.core.count.call(null, c__4408__auto___8727);
            var G__8731 = 0;
            seq__7474_8716 = G__8728;
            chunk__7475_8717 = G__8729;
            count__7476_8718 = G__8730;
            i__7477_8719 = G__8731;
            continue;
          } else {
            var arg__5130__auto___8732 = cljs.core.first.call(null, seq__7474_8726__$1);
            a__5129__auto__.push(arg__5130__auto___8732);
            var G__8733 = cljs.core.next.call(null, seq__7474_8726__$1);
            var G__8734 = null;
            var G__8735 = 0;
            var G__8736 = 0;
            seq__7474_8716 = G__8733;
            chunk__7475_8717 = G__8734;
            count__7476_8718 = G__8735;
            i__7477_8719 = G__8736;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.colgroup.apply(null, a__5129__auto__);
  };
  var colgroup = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return colgroup__delegate.call(this, args__5128__auto__);
  };
  colgroup.cljs$lang$maxFixedArity = 0;
  colgroup.cljs$lang$applyTo = function(arglist__8737) {
    var args__5128__auto__ = cljs.core.seq(arglist__8737);
    return colgroup__delegate(args__5128__auto__);
  };
  colgroup.cljs$core$IFn$_invoke$arity$variadic = colgroup__delegate;
  return colgroup;
}();
quiescent.dom.data = function() {
  var data__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7482_8738 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7483_8739 = null;
    var count__7484_8740 = 0;
    var i__7485_8741 = 0;
    while (true) {
      if (i__7485_8741 < count__7484_8740) {
        var arg__5130__auto___8742 = cljs.core._nth.call(null, chunk__7483_8739, i__7485_8741);
        a__5129__auto__.push(arg__5130__auto___8742);
        var G__8743 = seq__7482_8738;
        var G__8744 = chunk__7483_8739;
        var G__8745 = count__7484_8740;
        var G__8746 = i__7485_8741 + 1;
        seq__7482_8738 = G__8743;
        chunk__7483_8739 = G__8744;
        count__7484_8740 = G__8745;
        i__7485_8741 = G__8746;
        continue;
      } else {
        var temp__4126__auto___8747 = cljs.core.seq.call(null, seq__7482_8738);
        if (temp__4126__auto___8747) {
          var seq__7482_8748__$1 = temp__4126__auto___8747;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7482_8748__$1)) {
            var c__4408__auto___8749 = cljs.core.chunk_first.call(null, seq__7482_8748__$1);
            var G__8750 = cljs.core.chunk_rest.call(null, seq__7482_8748__$1);
            var G__8751 = c__4408__auto___8749;
            var G__8752 = cljs.core.count.call(null, c__4408__auto___8749);
            var G__8753 = 0;
            seq__7482_8738 = G__8750;
            chunk__7483_8739 = G__8751;
            count__7484_8740 = G__8752;
            i__7485_8741 = G__8753;
            continue;
          } else {
            var arg__5130__auto___8754 = cljs.core.first.call(null, seq__7482_8748__$1);
            a__5129__auto__.push(arg__5130__auto___8754);
            var G__8755 = cljs.core.next.call(null, seq__7482_8748__$1);
            var G__8756 = null;
            var G__8757 = 0;
            var G__8758 = 0;
            seq__7482_8738 = G__8755;
            chunk__7483_8739 = G__8756;
            count__7484_8740 = G__8757;
            i__7485_8741 = G__8758;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.data.apply(null, a__5129__auto__);
  };
  var data = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return data__delegate.call(this, args__5128__auto__);
  };
  data.cljs$lang$maxFixedArity = 0;
  data.cljs$lang$applyTo = function(arglist__8759) {
    var args__5128__auto__ = cljs.core.seq(arglist__8759);
    return data__delegate(args__5128__auto__);
  };
  data.cljs$core$IFn$_invoke$arity$variadic = data__delegate;
  return data;
}();
quiescent.dom.datalist = function() {
  var datalist__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7490_8760 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7491_8761 = null;
    var count__7492_8762 = 0;
    var i__7493_8763 = 0;
    while (true) {
      if (i__7493_8763 < count__7492_8762) {
        var arg__5130__auto___8764 = cljs.core._nth.call(null, chunk__7491_8761, i__7493_8763);
        a__5129__auto__.push(arg__5130__auto___8764);
        var G__8765 = seq__7490_8760;
        var G__8766 = chunk__7491_8761;
        var G__8767 = count__7492_8762;
        var G__8768 = i__7493_8763 + 1;
        seq__7490_8760 = G__8765;
        chunk__7491_8761 = G__8766;
        count__7492_8762 = G__8767;
        i__7493_8763 = G__8768;
        continue;
      } else {
        var temp__4126__auto___8769 = cljs.core.seq.call(null, seq__7490_8760);
        if (temp__4126__auto___8769) {
          var seq__7490_8770__$1 = temp__4126__auto___8769;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7490_8770__$1)) {
            var c__4408__auto___8771 = cljs.core.chunk_first.call(null, seq__7490_8770__$1);
            var G__8772 = cljs.core.chunk_rest.call(null, seq__7490_8770__$1);
            var G__8773 = c__4408__auto___8771;
            var G__8774 = cljs.core.count.call(null, c__4408__auto___8771);
            var G__8775 = 0;
            seq__7490_8760 = G__8772;
            chunk__7491_8761 = G__8773;
            count__7492_8762 = G__8774;
            i__7493_8763 = G__8775;
            continue;
          } else {
            var arg__5130__auto___8776 = cljs.core.first.call(null, seq__7490_8770__$1);
            a__5129__auto__.push(arg__5130__auto___8776);
            var G__8777 = cljs.core.next.call(null, seq__7490_8770__$1);
            var G__8778 = null;
            var G__8779 = 0;
            var G__8780 = 0;
            seq__7490_8760 = G__8777;
            chunk__7491_8761 = G__8778;
            count__7492_8762 = G__8779;
            i__7493_8763 = G__8780;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.datalist.apply(null, a__5129__auto__);
  };
  var datalist = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return datalist__delegate.call(this, args__5128__auto__);
  };
  datalist.cljs$lang$maxFixedArity = 0;
  datalist.cljs$lang$applyTo = function(arglist__8781) {
    var args__5128__auto__ = cljs.core.seq(arglist__8781);
    return datalist__delegate(args__5128__auto__);
  };
  datalist.cljs$core$IFn$_invoke$arity$variadic = datalist__delegate;
  return datalist;
}();
quiescent.dom.dd = function() {
  var dd__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7498_8782 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7499_8783 = null;
    var count__7500_8784 = 0;
    var i__7501_8785 = 0;
    while (true) {
      if (i__7501_8785 < count__7500_8784) {
        var arg__5130__auto___8786 = cljs.core._nth.call(null, chunk__7499_8783, i__7501_8785);
        a__5129__auto__.push(arg__5130__auto___8786);
        var G__8787 = seq__7498_8782;
        var G__8788 = chunk__7499_8783;
        var G__8789 = count__7500_8784;
        var G__8790 = i__7501_8785 + 1;
        seq__7498_8782 = G__8787;
        chunk__7499_8783 = G__8788;
        count__7500_8784 = G__8789;
        i__7501_8785 = G__8790;
        continue;
      } else {
        var temp__4126__auto___8791 = cljs.core.seq.call(null, seq__7498_8782);
        if (temp__4126__auto___8791) {
          var seq__7498_8792__$1 = temp__4126__auto___8791;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7498_8792__$1)) {
            var c__4408__auto___8793 = cljs.core.chunk_first.call(null, seq__7498_8792__$1);
            var G__8794 = cljs.core.chunk_rest.call(null, seq__7498_8792__$1);
            var G__8795 = c__4408__auto___8793;
            var G__8796 = cljs.core.count.call(null, c__4408__auto___8793);
            var G__8797 = 0;
            seq__7498_8782 = G__8794;
            chunk__7499_8783 = G__8795;
            count__7500_8784 = G__8796;
            i__7501_8785 = G__8797;
            continue;
          } else {
            var arg__5130__auto___8798 = cljs.core.first.call(null, seq__7498_8792__$1);
            a__5129__auto__.push(arg__5130__auto___8798);
            var G__8799 = cljs.core.next.call(null, seq__7498_8792__$1);
            var G__8800 = null;
            var G__8801 = 0;
            var G__8802 = 0;
            seq__7498_8782 = G__8799;
            chunk__7499_8783 = G__8800;
            count__7500_8784 = G__8801;
            i__7501_8785 = G__8802;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.dd.apply(null, a__5129__auto__);
  };
  var dd = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return dd__delegate.call(this, args__5128__auto__);
  };
  dd.cljs$lang$maxFixedArity = 0;
  dd.cljs$lang$applyTo = function(arglist__8803) {
    var args__5128__auto__ = cljs.core.seq(arglist__8803);
    return dd__delegate(args__5128__auto__);
  };
  dd.cljs$core$IFn$_invoke$arity$variadic = dd__delegate;
  return dd;
}();
quiescent.dom.del = function() {
  var del__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7506_8804 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7507_8805 = null;
    var count__7508_8806 = 0;
    var i__7509_8807 = 0;
    while (true) {
      if (i__7509_8807 < count__7508_8806) {
        var arg__5130__auto___8808 = cljs.core._nth.call(null, chunk__7507_8805, i__7509_8807);
        a__5129__auto__.push(arg__5130__auto___8808);
        var G__8809 = seq__7506_8804;
        var G__8810 = chunk__7507_8805;
        var G__8811 = count__7508_8806;
        var G__8812 = i__7509_8807 + 1;
        seq__7506_8804 = G__8809;
        chunk__7507_8805 = G__8810;
        count__7508_8806 = G__8811;
        i__7509_8807 = G__8812;
        continue;
      } else {
        var temp__4126__auto___8813 = cljs.core.seq.call(null, seq__7506_8804);
        if (temp__4126__auto___8813) {
          var seq__7506_8814__$1 = temp__4126__auto___8813;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7506_8814__$1)) {
            var c__4408__auto___8815 = cljs.core.chunk_first.call(null, seq__7506_8814__$1);
            var G__8816 = cljs.core.chunk_rest.call(null, seq__7506_8814__$1);
            var G__8817 = c__4408__auto___8815;
            var G__8818 = cljs.core.count.call(null, c__4408__auto___8815);
            var G__8819 = 0;
            seq__7506_8804 = G__8816;
            chunk__7507_8805 = G__8817;
            count__7508_8806 = G__8818;
            i__7509_8807 = G__8819;
            continue;
          } else {
            var arg__5130__auto___8820 = cljs.core.first.call(null, seq__7506_8814__$1);
            a__5129__auto__.push(arg__5130__auto___8820);
            var G__8821 = cljs.core.next.call(null, seq__7506_8814__$1);
            var G__8822 = null;
            var G__8823 = 0;
            var G__8824 = 0;
            seq__7506_8804 = G__8821;
            chunk__7507_8805 = G__8822;
            count__7508_8806 = G__8823;
            i__7509_8807 = G__8824;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.del.apply(null, a__5129__auto__);
  };
  var del = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return del__delegate.call(this, args__5128__auto__);
  };
  del.cljs$lang$maxFixedArity = 0;
  del.cljs$lang$applyTo = function(arglist__8825) {
    var args__5128__auto__ = cljs.core.seq(arglist__8825);
    return del__delegate(args__5128__auto__);
  };
  del.cljs$core$IFn$_invoke$arity$variadic = del__delegate;
  return del;
}();
quiescent.dom.details = function() {
  var details__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7514_8826 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7515_8827 = null;
    var count__7516_8828 = 0;
    var i__7517_8829 = 0;
    while (true) {
      if (i__7517_8829 < count__7516_8828) {
        var arg__5130__auto___8830 = cljs.core._nth.call(null, chunk__7515_8827, i__7517_8829);
        a__5129__auto__.push(arg__5130__auto___8830);
        var G__8831 = seq__7514_8826;
        var G__8832 = chunk__7515_8827;
        var G__8833 = count__7516_8828;
        var G__8834 = i__7517_8829 + 1;
        seq__7514_8826 = G__8831;
        chunk__7515_8827 = G__8832;
        count__7516_8828 = G__8833;
        i__7517_8829 = G__8834;
        continue;
      } else {
        var temp__4126__auto___8835 = cljs.core.seq.call(null, seq__7514_8826);
        if (temp__4126__auto___8835) {
          var seq__7514_8836__$1 = temp__4126__auto___8835;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7514_8836__$1)) {
            var c__4408__auto___8837 = cljs.core.chunk_first.call(null, seq__7514_8836__$1);
            var G__8838 = cljs.core.chunk_rest.call(null, seq__7514_8836__$1);
            var G__8839 = c__4408__auto___8837;
            var G__8840 = cljs.core.count.call(null, c__4408__auto___8837);
            var G__8841 = 0;
            seq__7514_8826 = G__8838;
            chunk__7515_8827 = G__8839;
            count__7516_8828 = G__8840;
            i__7517_8829 = G__8841;
            continue;
          } else {
            var arg__5130__auto___8842 = cljs.core.first.call(null, seq__7514_8836__$1);
            a__5129__auto__.push(arg__5130__auto___8842);
            var G__8843 = cljs.core.next.call(null, seq__7514_8836__$1);
            var G__8844 = null;
            var G__8845 = 0;
            var G__8846 = 0;
            seq__7514_8826 = G__8843;
            chunk__7515_8827 = G__8844;
            count__7516_8828 = G__8845;
            i__7517_8829 = G__8846;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.details.apply(null, a__5129__auto__);
  };
  var details = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return details__delegate.call(this, args__5128__auto__);
  };
  details.cljs$lang$maxFixedArity = 0;
  details.cljs$lang$applyTo = function(arglist__8847) {
    var args__5128__auto__ = cljs.core.seq(arglist__8847);
    return details__delegate(args__5128__auto__);
  };
  details.cljs$core$IFn$_invoke$arity$variadic = details__delegate;
  return details;
}();
quiescent.dom.dfn = function() {
  var dfn__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7522_8848 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7523_8849 = null;
    var count__7524_8850 = 0;
    var i__7525_8851 = 0;
    while (true) {
      if (i__7525_8851 < count__7524_8850) {
        var arg__5130__auto___8852 = cljs.core._nth.call(null, chunk__7523_8849, i__7525_8851);
        a__5129__auto__.push(arg__5130__auto___8852);
        var G__8853 = seq__7522_8848;
        var G__8854 = chunk__7523_8849;
        var G__8855 = count__7524_8850;
        var G__8856 = i__7525_8851 + 1;
        seq__7522_8848 = G__8853;
        chunk__7523_8849 = G__8854;
        count__7524_8850 = G__8855;
        i__7525_8851 = G__8856;
        continue;
      } else {
        var temp__4126__auto___8857 = cljs.core.seq.call(null, seq__7522_8848);
        if (temp__4126__auto___8857) {
          var seq__7522_8858__$1 = temp__4126__auto___8857;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7522_8858__$1)) {
            var c__4408__auto___8859 = cljs.core.chunk_first.call(null, seq__7522_8858__$1);
            var G__8860 = cljs.core.chunk_rest.call(null, seq__7522_8858__$1);
            var G__8861 = c__4408__auto___8859;
            var G__8862 = cljs.core.count.call(null, c__4408__auto___8859);
            var G__8863 = 0;
            seq__7522_8848 = G__8860;
            chunk__7523_8849 = G__8861;
            count__7524_8850 = G__8862;
            i__7525_8851 = G__8863;
            continue;
          } else {
            var arg__5130__auto___8864 = cljs.core.first.call(null, seq__7522_8858__$1);
            a__5129__auto__.push(arg__5130__auto___8864);
            var G__8865 = cljs.core.next.call(null, seq__7522_8858__$1);
            var G__8866 = null;
            var G__8867 = 0;
            var G__8868 = 0;
            seq__7522_8848 = G__8865;
            chunk__7523_8849 = G__8866;
            count__7524_8850 = G__8867;
            i__7525_8851 = G__8868;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.dfn.apply(null, a__5129__auto__);
  };
  var dfn = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return dfn__delegate.call(this, args__5128__auto__);
  };
  dfn.cljs$lang$maxFixedArity = 0;
  dfn.cljs$lang$applyTo = function(arglist__8869) {
    var args__5128__auto__ = cljs.core.seq(arglist__8869);
    return dfn__delegate(args__5128__auto__);
  };
  dfn.cljs$core$IFn$_invoke$arity$variadic = dfn__delegate;
  return dfn;
}();
quiescent.dom.div = function() {
  var div__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7530_8870 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7531_8871 = null;
    var count__7532_8872 = 0;
    var i__7533_8873 = 0;
    while (true) {
      if (i__7533_8873 < count__7532_8872) {
        var arg__5130__auto___8874 = cljs.core._nth.call(null, chunk__7531_8871, i__7533_8873);
        a__5129__auto__.push(arg__5130__auto___8874);
        var G__8875 = seq__7530_8870;
        var G__8876 = chunk__7531_8871;
        var G__8877 = count__7532_8872;
        var G__8878 = i__7533_8873 + 1;
        seq__7530_8870 = G__8875;
        chunk__7531_8871 = G__8876;
        count__7532_8872 = G__8877;
        i__7533_8873 = G__8878;
        continue;
      } else {
        var temp__4126__auto___8879 = cljs.core.seq.call(null, seq__7530_8870);
        if (temp__4126__auto___8879) {
          var seq__7530_8880__$1 = temp__4126__auto___8879;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7530_8880__$1)) {
            var c__4408__auto___8881 = cljs.core.chunk_first.call(null, seq__7530_8880__$1);
            var G__8882 = cljs.core.chunk_rest.call(null, seq__7530_8880__$1);
            var G__8883 = c__4408__auto___8881;
            var G__8884 = cljs.core.count.call(null, c__4408__auto___8881);
            var G__8885 = 0;
            seq__7530_8870 = G__8882;
            chunk__7531_8871 = G__8883;
            count__7532_8872 = G__8884;
            i__7533_8873 = G__8885;
            continue;
          } else {
            var arg__5130__auto___8886 = cljs.core.first.call(null, seq__7530_8880__$1);
            a__5129__auto__.push(arg__5130__auto___8886);
            var G__8887 = cljs.core.next.call(null, seq__7530_8880__$1);
            var G__8888 = null;
            var G__8889 = 0;
            var G__8890 = 0;
            seq__7530_8870 = G__8887;
            chunk__7531_8871 = G__8888;
            count__7532_8872 = G__8889;
            i__7533_8873 = G__8890;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.div.apply(null, a__5129__auto__);
  };
  var div = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return div__delegate.call(this, args__5128__auto__);
  };
  div.cljs$lang$maxFixedArity = 0;
  div.cljs$lang$applyTo = function(arglist__8891) {
    var args__5128__auto__ = cljs.core.seq(arglist__8891);
    return div__delegate(args__5128__auto__);
  };
  div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
  return div;
}();
quiescent.dom.dl = function() {
  var dl__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7538_8892 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7539_8893 = null;
    var count__7540_8894 = 0;
    var i__7541_8895 = 0;
    while (true) {
      if (i__7541_8895 < count__7540_8894) {
        var arg__5130__auto___8896 = cljs.core._nth.call(null, chunk__7539_8893, i__7541_8895);
        a__5129__auto__.push(arg__5130__auto___8896);
        var G__8897 = seq__7538_8892;
        var G__8898 = chunk__7539_8893;
        var G__8899 = count__7540_8894;
        var G__8900 = i__7541_8895 + 1;
        seq__7538_8892 = G__8897;
        chunk__7539_8893 = G__8898;
        count__7540_8894 = G__8899;
        i__7541_8895 = G__8900;
        continue;
      } else {
        var temp__4126__auto___8901 = cljs.core.seq.call(null, seq__7538_8892);
        if (temp__4126__auto___8901) {
          var seq__7538_8902__$1 = temp__4126__auto___8901;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7538_8902__$1)) {
            var c__4408__auto___8903 = cljs.core.chunk_first.call(null, seq__7538_8902__$1);
            var G__8904 = cljs.core.chunk_rest.call(null, seq__7538_8902__$1);
            var G__8905 = c__4408__auto___8903;
            var G__8906 = cljs.core.count.call(null, c__4408__auto___8903);
            var G__8907 = 0;
            seq__7538_8892 = G__8904;
            chunk__7539_8893 = G__8905;
            count__7540_8894 = G__8906;
            i__7541_8895 = G__8907;
            continue;
          } else {
            var arg__5130__auto___8908 = cljs.core.first.call(null, seq__7538_8902__$1);
            a__5129__auto__.push(arg__5130__auto___8908);
            var G__8909 = cljs.core.next.call(null, seq__7538_8902__$1);
            var G__8910 = null;
            var G__8911 = 0;
            var G__8912 = 0;
            seq__7538_8892 = G__8909;
            chunk__7539_8893 = G__8910;
            count__7540_8894 = G__8911;
            i__7541_8895 = G__8912;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.dl.apply(null, a__5129__auto__);
  };
  var dl = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return dl__delegate.call(this, args__5128__auto__);
  };
  dl.cljs$lang$maxFixedArity = 0;
  dl.cljs$lang$applyTo = function(arglist__8913) {
    var args__5128__auto__ = cljs.core.seq(arglist__8913);
    return dl__delegate(args__5128__auto__);
  };
  dl.cljs$core$IFn$_invoke$arity$variadic = dl__delegate;
  return dl;
}();
quiescent.dom.dt = function() {
  var dt__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7546_8914 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7547_8915 = null;
    var count__7548_8916 = 0;
    var i__7549_8917 = 0;
    while (true) {
      if (i__7549_8917 < count__7548_8916) {
        var arg__5130__auto___8918 = cljs.core._nth.call(null, chunk__7547_8915, i__7549_8917);
        a__5129__auto__.push(arg__5130__auto___8918);
        var G__8919 = seq__7546_8914;
        var G__8920 = chunk__7547_8915;
        var G__8921 = count__7548_8916;
        var G__8922 = i__7549_8917 + 1;
        seq__7546_8914 = G__8919;
        chunk__7547_8915 = G__8920;
        count__7548_8916 = G__8921;
        i__7549_8917 = G__8922;
        continue;
      } else {
        var temp__4126__auto___8923 = cljs.core.seq.call(null, seq__7546_8914);
        if (temp__4126__auto___8923) {
          var seq__7546_8924__$1 = temp__4126__auto___8923;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7546_8924__$1)) {
            var c__4408__auto___8925 = cljs.core.chunk_first.call(null, seq__7546_8924__$1);
            var G__8926 = cljs.core.chunk_rest.call(null, seq__7546_8924__$1);
            var G__8927 = c__4408__auto___8925;
            var G__8928 = cljs.core.count.call(null, c__4408__auto___8925);
            var G__8929 = 0;
            seq__7546_8914 = G__8926;
            chunk__7547_8915 = G__8927;
            count__7548_8916 = G__8928;
            i__7549_8917 = G__8929;
            continue;
          } else {
            var arg__5130__auto___8930 = cljs.core.first.call(null, seq__7546_8924__$1);
            a__5129__auto__.push(arg__5130__auto___8930);
            var G__8931 = cljs.core.next.call(null, seq__7546_8924__$1);
            var G__8932 = null;
            var G__8933 = 0;
            var G__8934 = 0;
            seq__7546_8914 = G__8931;
            chunk__7547_8915 = G__8932;
            count__7548_8916 = G__8933;
            i__7549_8917 = G__8934;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.dt.apply(null, a__5129__auto__);
  };
  var dt = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return dt__delegate.call(this, args__5128__auto__);
  };
  dt.cljs$lang$maxFixedArity = 0;
  dt.cljs$lang$applyTo = function(arglist__8935) {
    var args__5128__auto__ = cljs.core.seq(arglist__8935);
    return dt__delegate(args__5128__auto__);
  };
  dt.cljs$core$IFn$_invoke$arity$variadic = dt__delegate;
  return dt;
}();
quiescent.dom.em = function() {
  var em__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7554_8936 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7555_8937 = null;
    var count__7556_8938 = 0;
    var i__7557_8939 = 0;
    while (true) {
      if (i__7557_8939 < count__7556_8938) {
        var arg__5130__auto___8940 = cljs.core._nth.call(null, chunk__7555_8937, i__7557_8939);
        a__5129__auto__.push(arg__5130__auto___8940);
        var G__8941 = seq__7554_8936;
        var G__8942 = chunk__7555_8937;
        var G__8943 = count__7556_8938;
        var G__8944 = i__7557_8939 + 1;
        seq__7554_8936 = G__8941;
        chunk__7555_8937 = G__8942;
        count__7556_8938 = G__8943;
        i__7557_8939 = G__8944;
        continue;
      } else {
        var temp__4126__auto___8945 = cljs.core.seq.call(null, seq__7554_8936);
        if (temp__4126__auto___8945) {
          var seq__7554_8946__$1 = temp__4126__auto___8945;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7554_8946__$1)) {
            var c__4408__auto___8947 = cljs.core.chunk_first.call(null, seq__7554_8946__$1);
            var G__8948 = cljs.core.chunk_rest.call(null, seq__7554_8946__$1);
            var G__8949 = c__4408__auto___8947;
            var G__8950 = cljs.core.count.call(null, c__4408__auto___8947);
            var G__8951 = 0;
            seq__7554_8936 = G__8948;
            chunk__7555_8937 = G__8949;
            count__7556_8938 = G__8950;
            i__7557_8939 = G__8951;
            continue;
          } else {
            var arg__5130__auto___8952 = cljs.core.first.call(null, seq__7554_8946__$1);
            a__5129__auto__.push(arg__5130__auto___8952);
            var G__8953 = cljs.core.next.call(null, seq__7554_8946__$1);
            var G__8954 = null;
            var G__8955 = 0;
            var G__8956 = 0;
            seq__7554_8936 = G__8953;
            chunk__7555_8937 = G__8954;
            count__7556_8938 = G__8955;
            i__7557_8939 = G__8956;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.em.apply(null, a__5129__auto__);
  };
  var em = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return em__delegate.call(this, args__5128__auto__);
  };
  em.cljs$lang$maxFixedArity = 0;
  em.cljs$lang$applyTo = function(arglist__8957) {
    var args__5128__auto__ = cljs.core.seq(arglist__8957);
    return em__delegate(args__5128__auto__);
  };
  em.cljs$core$IFn$_invoke$arity$variadic = em__delegate;
  return em;
}();
quiescent.dom.embed = function() {
  var embed__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7570_8958 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7571_8959 = null;
    var count__7572_8960 = 0;
    var i__7573_8961 = 0;
    while (true) {
      if (i__7573_8961 < count__7572_8960) {
        var arg__5130__auto___8962 = cljs.core._nth.call(null, chunk__7571_8959, i__7573_8961);
        a__5129__auto__.push(arg__5130__auto___8962);
        var G__8963 = seq__7570_8958;
        var G__8964 = chunk__7571_8959;
        var G__8965 = count__7572_8960;
        var G__8966 = i__7573_8961 + 1;
        seq__7570_8958 = G__8963;
        chunk__7571_8959 = G__8964;
        count__7572_8960 = G__8965;
        i__7573_8961 = G__8966;
        continue;
      } else {
        var temp__4126__auto___8967 = cljs.core.seq.call(null, seq__7570_8958);
        if (temp__4126__auto___8967) {
          var seq__7570_8968__$1 = temp__4126__auto___8967;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7570_8968__$1)) {
            var c__4408__auto___8969 = cljs.core.chunk_first.call(null, seq__7570_8968__$1);
            var G__8970 = cljs.core.chunk_rest.call(null, seq__7570_8968__$1);
            var G__8971 = c__4408__auto___8969;
            var G__8972 = cljs.core.count.call(null, c__4408__auto___8969);
            var G__8973 = 0;
            seq__7570_8958 = G__8970;
            chunk__7571_8959 = G__8971;
            count__7572_8960 = G__8972;
            i__7573_8961 = G__8973;
            continue;
          } else {
            var arg__5130__auto___8974 = cljs.core.first.call(null, seq__7570_8968__$1);
            a__5129__auto__.push(arg__5130__auto___8974);
            var G__8975 = cljs.core.next.call(null, seq__7570_8968__$1);
            var G__8976 = null;
            var G__8977 = 0;
            var G__8978 = 0;
            seq__7570_8958 = G__8975;
            chunk__7571_8959 = G__8976;
            count__7572_8960 = G__8977;
            i__7573_8961 = G__8978;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.embed.apply(null, a__5129__auto__);
  };
  var embed = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return embed__delegate.call(this, args__5128__auto__);
  };
  embed.cljs$lang$maxFixedArity = 0;
  embed.cljs$lang$applyTo = function(arglist__8979) {
    var args__5128__auto__ = cljs.core.seq(arglist__8979);
    return embed__delegate(args__5128__auto__);
  };
  embed.cljs$core$IFn$_invoke$arity$variadic = embed__delegate;
  return embed;
}();
quiescent.dom.fieldset = function() {
  var fieldset__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7578_8980 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7579_8981 = null;
    var count__7580_8982 = 0;
    var i__7581_8983 = 0;
    while (true) {
      if (i__7581_8983 < count__7580_8982) {
        var arg__5130__auto___8984 = cljs.core._nth.call(null, chunk__7579_8981, i__7581_8983);
        a__5129__auto__.push(arg__5130__auto___8984);
        var G__8985 = seq__7578_8980;
        var G__8986 = chunk__7579_8981;
        var G__8987 = count__7580_8982;
        var G__8988 = i__7581_8983 + 1;
        seq__7578_8980 = G__8985;
        chunk__7579_8981 = G__8986;
        count__7580_8982 = G__8987;
        i__7581_8983 = G__8988;
        continue;
      } else {
        var temp__4126__auto___8989 = cljs.core.seq.call(null, seq__7578_8980);
        if (temp__4126__auto___8989) {
          var seq__7578_8990__$1 = temp__4126__auto___8989;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7578_8990__$1)) {
            var c__4408__auto___8991 = cljs.core.chunk_first.call(null, seq__7578_8990__$1);
            var G__8992 = cljs.core.chunk_rest.call(null, seq__7578_8990__$1);
            var G__8993 = c__4408__auto___8991;
            var G__8994 = cljs.core.count.call(null, c__4408__auto___8991);
            var G__8995 = 0;
            seq__7578_8980 = G__8992;
            chunk__7579_8981 = G__8993;
            count__7580_8982 = G__8994;
            i__7581_8983 = G__8995;
            continue;
          } else {
            var arg__5130__auto___8996 = cljs.core.first.call(null, seq__7578_8990__$1);
            a__5129__auto__.push(arg__5130__auto___8996);
            var G__8997 = cljs.core.next.call(null, seq__7578_8990__$1);
            var G__8998 = null;
            var G__8999 = 0;
            var G__9000 = 0;
            seq__7578_8980 = G__8997;
            chunk__7579_8981 = G__8998;
            count__7580_8982 = G__8999;
            i__7581_8983 = G__9000;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.fieldset.apply(null, a__5129__auto__);
  };
  var fieldset = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return fieldset__delegate.call(this, args__5128__auto__);
  };
  fieldset.cljs$lang$maxFixedArity = 0;
  fieldset.cljs$lang$applyTo = function(arglist__9001) {
    var args__5128__auto__ = cljs.core.seq(arglist__9001);
    return fieldset__delegate(args__5128__auto__);
  };
  fieldset.cljs$core$IFn$_invoke$arity$variadic = fieldset__delegate;
  return fieldset;
}();
quiescent.dom.figcaption = function() {
  var figcaption__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7586_9002 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7587_9003 = null;
    var count__7588_9004 = 0;
    var i__7589_9005 = 0;
    while (true) {
      if (i__7589_9005 < count__7588_9004) {
        var arg__5130__auto___9006 = cljs.core._nth.call(null, chunk__7587_9003, i__7589_9005);
        a__5129__auto__.push(arg__5130__auto___9006);
        var G__9007 = seq__7586_9002;
        var G__9008 = chunk__7587_9003;
        var G__9009 = count__7588_9004;
        var G__9010 = i__7589_9005 + 1;
        seq__7586_9002 = G__9007;
        chunk__7587_9003 = G__9008;
        count__7588_9004 = G__9009;
        i__7589_9005 = G__9010;
        continue;
      } else {
        var temp__4126__auto___9011 = cljs.core.seq.call(null, seq__7586_9002);
        if (temp__4126__auto___9011) {
          var seq__7586_9012__$1 = temp__4126__auto___9011;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7586_9012__$1)) {
            var c__4408__auto___9013 = cljs.core.chunk_first.call(null, seq__7586_9012__$1);
            var G__9014 = cljs.core.chunk_rest.call(null, seq__7586_9012__$1);
            var G__9015 = c__4408__auto___9013;
            var G__9016 = cljs.core.count.call(null, c__4408__auto___9013);
            var G__9017 = 0;
            seq__7586_9002 = G__9014;
            chunk__7587_9003 = G__9015;
            count__7588_9004 = G__9016;
            i__7589_9005 = G__9017;
            continue;
          } else {
            var arg__5130__auto___9018 = cljs.core.first.call(null, seq__7586_9012__$1);
            a__5129__auto__.push(arg__5130__auto___9018);
            var G__9019 = cljs.core.next.call(null, seq__7586_9012__$1);
            var G__9020 = null;
            var G__9021 = 0;
            var G__9022 = 0;
            seq__7586_9002 = G__9019;
            chunk__7587_9003 = G__9020;
            count__7588_9004 = G__9021;
            i__7589_9005 = G__9022;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.figcaption.apply(null, a__5129__auto__);
  };
  var figcaption = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return figcaption__delegate.call(this, args__5128__auto__);
  };
  figcaption.cljs$lang$maxFixedArity = 0;
  figcaption.cljs$lang$applyTo = function(arglist__9023) {
    var args__5128__auto__ = cljs.core.seq(arglist__9023);
    return figcaption__delegate(args__5128__auto__);
  };
  figcaption.cljs$core$IFn$_invoke$arity$variadic = figcaption__delegate;
  return figcaption;
}();
quiescent.dom.figure = function() {
  var figure__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7594_9024 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7595_9025 = null;
    var count__7596_9026 = 0;
    var i__7597_9027 = 0;
    while (true) {
      if (i__7597_9027 < count__7596_9026) {
        var arg__5130__auto___9028 = cljs.core._nth.call(null, chunk__7595_9025, i__7597_9027);
        a__5129__auto__.push(arg__5130__auto___9028);
        var G__9029 = seq__7594_9024;
        var G__9030 = chunk__7595_9025;
        var G__9031 = count__7596_9026;
        var G__9032 = i__7597_9027 + 1;
        seq__7594_9024 = G__9029;
        chunk__7595_9025 = G__9030;
        count__7596_9026 = G__9031;
        i__7597_9027 = G__9032;
        continue;
      } else {
        var temp__4126__auto___9033 = cljs.core.seq.call(null, seq__7594_9024);
        if (temp__4126__auto___9033) {
          var seq__7594_9034__$1 = temp__4126__auto___9033;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7594_9034__$1)) {
            var c__4408__auto___9035 = cljs.core.chunk_first.call(null, seq__7594_9034__$1);
            var G__9036 = cljs.core.chunk_rest.call(null, seq__7594_9034__$1);
            var G__9037 = c__4408__auto___9035;
            var G__9038 = cljs.core.count.call(null, c__4408__auto___9035);
            var G__9039 = 0;
            seq__7594_9024 = G__9036;
            chunk__7595_9025 = G__9037;
            count__7596_9026 = G__9038;
            i__7597_9027 = G__9039;
            continue;
          } else {
            var arg__5130__auto___9040 = cljs.core.first.call(null, seq__7594_9034__$1);
            a__5129__auto__.push(arg__5130__auto___9040);
            var G__9041 = cljs.core.next.call(null, seq__7594_9034__$1);
            var G__9042 = null;
            var G__9043 = 0;
            var G__9044 = 0;
            seq__7594_9024 = G__9041;
            chunk__7595_9025 = G__9042;
            count__7596_9026 = G__9043;
            i__7597_9027 = G__9044;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.figure.apply(null, a__5129__auto__);
  };
  var figure = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return figure__delegate.call(this, args__5128__auto__);
  };
  figure.cljs$lang$maxFixedArity = 0;
  figure.cljs$lang$applyTo = function(arglist__9045) {
    var args__5128__auto__ = cljs.core.seq(arglist__9045);
    return figure__delegate(args__5128__auto__);
  };
  figure.cljs$core$IFn$_invoke$arity$variadic = figure__delegate;
  return figure;
}();
quiescent.dom.footer = function() {
  var footer__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7602_9046 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7603_9047 = null;
    var count__7604_9048 = 0;
    var i__7605_9049 = 0;
    while (true) {
      if (i__7605_9049 < count__7604_9048) {
        var arg__5130__auto___9050 = cljs.core._nth.call(null, chunk__7603_9047, i__7605_9049);
        a__5129__auto__.push(arg__5130__auto___9050);
        var G__9051 = seq__7602_9046;
        var G__9052 = chunk__7603_9047;
        var G__9053 = count__7604_9048;
        var G__9054 = i__7605_9049 + 1;
        seq__7602_9046 = G__9051;
        chunk__7603_9047 = G__9052;
        count__7604_9048 = G__9053;
        i__7605_9049 = G__9054;
        continue;
      } else {
        var temp__4126__auto___9055 = cljs.core.seq.call(null, seq__7602_9046);
        if (temp__4126__auto___9055) {
          var seq__7602_9056__$1 = temp__4126__auto___9055;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7602_9056__$1)) {
            var c__4408__auto___9057 = cljs.core.chunk_first.call(null, seq__7602_9056__$1);
            var G__9058 = cljs.core.chunk_rest.call(null, seq__7602_9056__$1);
            var G__9059 = c__4408__auto___9057;
            var G__9060 = cljs.core.count.call(null, c__4408__auto___9057);
            var G__9061 = 0;
            seq__7602_9046 = G__9058;
            chunk__7603_9047 = G__9059;
            count__7604_9048 = G__9060;
            i__7605_9049 = G__9061;
            continue;
          } else {
            var arg__5130__auto___9062 = cljs.core.first.call(null, seq__7602_9056__$1);
            a__5129__auto__.push(arg__5130__auto___9062);
            var G__9063 = cljs.core.next.call(null, seq__7602_9056__$1);
            var G__9064 = null;
            var G__9065 = 0;
            var G__9066 = 0;
            seq__7602_9046 = G__9063;
            chunk__7603_9047 = G__9064;
            count__7604_9048 = G__9065;
            i__7605_9049 = G__9066;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.footer.apply(null, a__5129__auto__);
  };
  var footer = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return footer__delegate.call(this, args__5128__auto__);
  };
  footer.cljs$lang$maxFixedArity = 0;
  footer.cljs$lang$applyTo = function(arglist__9067) {
    var args__5128__auto__ = cljs.core.seq(arglist__9067);
    return footer__delegate(args__5128__auto__);
  };
  footer.cljs$core$IFn$_invoke$arity$variadic = footer__delegate;
  return footer;
}();
quiescent.dom.form = function() {
  var form__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7610_9068 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7611_9069 = null;
    var count__7612_9070 = 0;
    var i__7613_9071 = 0;
    while (true) {
      if (i__7613_9071 < count__7612_9070) {
        var arg__5130__auto___9072 = cljs.core._nth.call(null, chunk__7611_9069, i__7613_9071);
        a__5129__auto__.push(arg__5130__auto___9072);
        var G__9073 = seq__7610_9068;
        var G__9074 = chunk__7611_9069;
        var G__9075 = count__7612_9070;
        var G__9076 = i__7613_9071 + 1;
        seq__7610_9068 = G__9073;
        chunk__7611_9069 = G__9074;
        count__7612_9070 = G__9075;
        i__7613_9071 = G__9076;
        continue;
      } else {
        var temp__4126__auto___9077 = cljs.core.seq.call(null, seq__7610_9068);
        if (temp__4126__auto___9077) {
          var seq__7610_9078__$1 = temp__4126__auto___9077;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7610_9078__$1)) {
            var c__4408__auto___9079 = cljs.core.chunk_first.call(null, seq__7610_9078__$1);
            var G__9080 = cljs.core.chunk_rest.call(null, seq__7610_9078__$1);
            var G__9081 = c__4408__auto___9079;
            var G__9082 = cljs.core.count.call(null, c__4408__auto___9079);
            var G__9083 = 0;
            seq__7610_9068 = G__9080;
            chunk__7611_9069 = G__9081;
            count__7612_9070 = G__9082;
            i__7613_9071 = G__9083;
            continue;
          } else {
            var arg__5130__auto___9084 = cljs.core.first.call(null, seq__7610_9078__$1);
            a__5129__auto__.push(arg__5130__auto___9084);
            var G__9085 = cljs.core.next.call(null, seq__7610_9078__$1);
            var G__9086 = null;
            var G__9087 = 0;
            var G__9088 = 0;
            seq__7610_9068 = G__9085;
            chunk__7611_9069 = G__9086;
            count__7612_9070 = G__9087;
            i__7613_9071 = G__9088;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.form.apply(null, a__5129__auto__);
  };
  var form = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return form__delegate.call(this, args__5128__auto__);
  };
  form.cljs$lang$maxFixedArity = 0;
  form.cljs$lang$applyTo = function(arglist__9089) {
    var args__5128__auto__ = cljs.core.seq(arglist__9089);
    return form__delegate(args__5128__auto__);
  };
  form.cljs$core$IFn$_invoke$arity$variadic = form__delegate;
  return form;
}();
quiescent.dom.h1 = function() {
  var h1__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7618_9090 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7619_9091 = null;
    var count__7620_9092 = 0;
    var i__7621_9093 = 0;
    while (true) {
      if (i__7621_9093 < count__7620_9092) {
        var arg__5130__auto___9094 = cljs.core._nth.call(null, chunk__7619_9091, i__7621_9093);
        a__5129__auto__.push(arg__5130__auto___9094);
        var G__9095 = seq__7618_9090;
        var G__9096 = chunk__7619_9091;
        var G__9097 = count__7620_9092;
        var G__9098 = i__7621_9093 + 1;
        seq__7618_9090 = G__9095;
        chunk__7619_9091 = G__9096;
        count__7620_9092 = G__9097;
        i__7621_9093 = G__9098;
        continue;
      } else {
        var temp__4126__auto___9099 = cljs.core.seq.call(null, seq__7618_9090);
        if (temp__4126__auto___9099) {
          var seq__7618_9100__$1 = temp__4126__auto___9099;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7618_9100__$1)) {
            var c__4408__auto___9101 = cljs.core.chunk_first.call(null, seq__7618_9100__$1);
            var G__9102 = cljs.core.chunk_rest.call(null, seq__7618_9100__$1);
            var G__9103 = c__4408__auto___9101;
            var G__9104 = cljs.core.count.call(null, c__4408__auto___9101);
            var G__9105 = 0;
            seq__7618_9090 = G__9102;
            chunk__7619_9091 = G__9103;
            count__7620_9092 = G__9104;
            i__7621_9093 = G__9105;
            continue;
          } else {
            var arg__5130__auto___9106 = cljs.core.first.call(null, seq__7618_9100__$1);
            a__5129__auto__.push(arg__5130__auto___9106);
            var G__9107 = cljs.core.next.call(null, seq__7618_9100__$1);
            var G__9108 = null;
            var G__9109 = 0;
            var G__9110 = 0;
            seq__7618_9090 = G__9107;
            chunk__7619_9091 = G__9108;
            count__7620_9092 = G__9109;
            i__7621_9093 = G__9110;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.h1.apply(null, a__5129__auto__);
  };
  var h1 = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return h1__delegate.call(this, args__5128__auto__);
  };
  h1.cljs$lang$maxFixedArity = 0;
  h1.cljs$lang$applyTo = function(arglist__9111) {
    var args__5128__auto__ = cljs.core.seq(arglist__9111);
    return h1__delegate(args__5128__auto__);
  };
  h1.cljs$core$IFn$_invoke$arity$variadic = h1__delegate;
  return h1;
}();
quiescent.dom.h2 = function() {
  var h2__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7626_9112 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7627_9113 = null;
    var count__7628_9114 = 0;
    var i__7629_9115 = 0;
    while (true) {
      if (i__7629_9115 < count__7628_9114) {
        var arg__5130__auto___9116 = cljs.core._nth.call(null, chunk__7627_9113, i__7629_9115);
        a__5129__auto__.push(arg__5130__auto___9116);
        var G__9117 = seq__7626_9112;
        var G__9118 = chunk__7627_9113;
        var G__9119 = count__7628_9114;
        var G__9120 = i__7629_9115 + 1;
        seq__7626_9112 = G__9117;
        chunk__7627_9113 = G__9118;
        count__7628_9114 = G__9119;
        i__7629_9115 = G__9120;
        continue;
      } else {
        var temp__4126__auto___9121 = cljs.core.seq.call(null, seq__7626_9112);
        if (temp__4126__auto___9121) {
          var seq__7626_9122__$1 = temp__4126__auto___9121;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7626_9122__$1)) {
            var c__4408__auto___9123 = cljs.core.chunk_first.call(null, seq__7626_9122__$1);
            var G__9124 = cljs.core.chunk_rest.call(null, seq__7626_9122__$1);
            var G__9125 = c__4408__auto___9123;
            var G__9126 = cljs.core.count.call(null, c__4408__auto___9123);
            var G__9127 = 0;
            seq__7626_9112 = G__9124;
            chunk__7627_9113 = G__9125;
            count__7628_9114 = G__9126;
            i__7629_9115 = G__9127;
            continue;
          } else {
            var arg__5130__auto___9128 = cljs.core.first.call(null, seq__7626_9122__$1);
            a__5129__auto__.push(arg__5130__auto___9128);
            var G__9129 = cljs.core.next.call(null, seq__7626_9122__$1);
            var G__9130 = null;
            var G__9131 = 0;
            var G__9132 = 0;
            seq__7626_9112 = G__9129;
            chunk__7627_9113 = G__9130;
            count__7628_9114 = G__9131;
            i__7629_9115 = G__9132;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.h2.apply(null, a__5129__auto__);
  };
  var h2 = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return h2__delegate.call(this, args__5128__auto__);
  };
  h2.cljs$lang$maxFixedArity = 0;
  h2.cljs$lang$applyTo = function(arglist__9133) {
    var args__5128__auto__ = cljs.core.seq(arglist__9133);
    return h2__delegate(args__5128__auto__);
  };
  h2.cljs$core$IFn$_invoke$arity$variadic = h2__delegate;
  return h2;
}();
quiescent.dom.h3 = function() {
  var h3__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7634_9134 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7635_9135 = null;
    var count__7636_9136 = 0;
    var i__7637_9137 = 0;
    while (true) {
      if (i__7637_9137 < count__7636_9136) {
        var arg__5130__auto___9138 = cljs.core._nth.call(null, chunk__7635_9135, i__7637_9137);
        a__5129__auto__.push(arg__5130__auto___9138);
        var G__9139 = seq__7634_9134;
        var G__9140 = chunk__7635_9135;
        var G__9141 = count__7636_9136;
        var G__9142 = i__7637_9137 + 1;
        seq__7634_9134 = G__9139;
        chunk__7635_9135 = G__9140;
        count__7636_9136 = G__9141;
        i__7637_9137 = G__9142;
        continue;
      } else {
        var temp__4126__auto___9143 = cljs.core.seq.call(null, seq__7634_9134);
        if (temp__4126__auto___9143) {
          var seq__7634_9144__$1 = temp__4126__auto___9143;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7634_9144__$1)) {
            var c__4408__auto___9145 = cljs.core.chunk_first.call(null, seq__7634_9144__$1);
            var G__9146 = cljs.core.chunk_rest.call(null, seq__7634_9144__$1);
            var G__9147 = c__4408__auto___9145;
            var G__9148 = cljs.core.count.call(null, c__4408__auto___9145);
            var G__9149 = 0;
            seq__7634_9134 = G__9146;
            chunk__7635_9135 = G__9147;
            count__7636_9136 = G__9148;
            i__7637_9137 = G__9149;
            continue;
          } else {
            var arg__5130__auto___9150 = cljs.core.first.call(null, seq__7634_9144__$1);
            a__5129__auto__.push(arg__5130__auto___9150);
            var G__9151 = cljs.core.next.call(null, seq__7634_9144__$1);
            var G__9152 = null;
            var G__9153 = 0;
            var G__9154 = 0;
            seq__7634_9134 = G__9151;
            chunk__7635_9135 = G__9152;
            count__7636_9136 = G__9153;
            i__7637_9137 = G__9154;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.h3.apply(null, a__5129__auto__);
  };
  var h3 = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return h3__delegate.call(this, args__5128__auto__);
  };
  h3.cljs$lang$maxFixedArity = 0;
  h3.cljs$lang$applyTo = function(arglist__9155) {
    var args__5128__auto__ = cljs.core.seq(arglist__9155);
    return h3__delegate(args__5128__auto__);
  };
  h3.cljs$core$IFn$_invoke$arity$variadic = h3__delegate;
  return h3;
}();
quiescent.dom.h4 = function() {
  var h4__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7642_9156 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7643_9157 = null;
    var count__7644_9158 = 0;
    var i__7645_9159 = 0;
    while (true) {
      if (i__7645_9159 < count__7644_9158) {
        var arg__5130__auto___9160 = cljs.core._nth.call(null, chunk__7643_9157, i__7645_9159);
        a__5129__auto__.push(arg__5130__auto___9160);
        var G__9161 = seq__7642_9156;
        var G__9162 = chunk__7643_9157;
        var G__9163 = count__7644_9158;
        var G__9164 = i__7645_9159 + 1;
        seq__7642_9156 = G__9161;
        chunk__7643_9157 = G__9162;
        count__7644_9158 = G__9163;
        i__7645_9159 = G__9164;
        continue;
      } else {
        var temp__4126__auto___9165 = cljs.core.seq.call(null, seq__7642_9156);
        if (temp__4126__auto___9165) {
          var seq__7642_9166__$1 = temp__4126__auto___9165;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7642_9166__$1)) {
            var c__4408__auto___9167 = cljs.core.chunk_first.call(null, seq__7642_9166__$1);
            var G__9168 = cljs.core.chunk_rest.call(null, seq__7642_9166__$1);
            var G__9169 = c__4408__auto___9167;
            var G__9170 = cljs.core.count.call(null, c__4408__auto___9167);
            var G__9171 = 0;
            seq__7642_9156 = G__9168;
            chunk__7643_9157 = G__9169;
            count__7644_9158 = G__9170;
            i__7645_9159 = G__9171;
            continue;
          } else {
            var arg__5130__auto___9172 = cljs.core.first.call(null, seq__7642_9166__$1);
            a__5129__auto__.push(arg__5130__auto___9172);
            var G__9173 = cljs.core.next.call(null, seq__7642_9166__$1);
            var G__9174 = null;
            var G__9175 = 0;
            var G__9176 = 0;
            seq__7642_9156 = G__9173;
            chunk__7643_9157 = G__9174;
            count__7644_9158 = G__9175;
            i__7645_9159 = G__9176;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.h4.apply(null, a__5129__auto__);
  };
  var h4 = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return h4__delegate.call(this, args__5128__auto__);
  };
  h4.cljs$lang$maxFixedArity = 0;
  h4.cljs$lang$applyTo = function(arglist__9177) {
    var args__5128__auto__ = cljs.core.seq(arglist__9177);
    return h4__delegate(args__5128__auto__);
  };
  h4.cljs$core$IFn$_invoke$arity$variadic = h4__delegate;
  return h4;
}();
quiescent.dom.h5 = function() {
  var h5__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7650_9178 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7651_9179 = null;
    var count__7652_9180 = 0;
    var i__7653_9181 = 0;
    while (true) {
      if (i__7653_9181 < count__7652_9180) {
        var arg__5130__auto___9182 = cljs.core._nth.call(null, chunk__7651_9179, i__7653_9181);
        a__5129__auto__.push(arg__5130__auto___9182);
        var G__9183 = seq__7650_9178;
        var G__9184 = chunk__7651_9179;
        var G__9185 = count__7652_9180;
        var G__9186 = i__7653_9181 + 1;
        seq__7650_9178 = G__9183;
        chunk__7651_9179 = G__9184;
        count__7652_9180 = G__9185;
        i__7653_9181 = G__9186;
        continue;
      } else {
        var temp__4126__auto___9187 = cljs.core.seq.call(null, seq__7650_9178);
        if (temp__4126__auto___9187) {
          var seq__7650_9188__$1 = temp__4126__auto___9187;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7650_9188__$1)) {
            var c__4408__auto___9189 = cljs.core.chunk_first.call(null, seq__7650_9188__$1);
            var G__9190 = cljs.core.chunk_rest.call(null, seq__7650_9188__$1);
            var G__9191 = c__4408__auto___9189;
            var G__9192 = cljs.core.count.call(null, c__4408__auto___9189);
            var G__9193 = 0;
            seq__7650_9178 = G__9190;
            chunk__7651_9179 = G__9191;
            count__7652_9180 = G__9192;
            i__7653_9181 = G__9193;
            continue;
          } else {
            var arg__5130__auto___9194 = cljs.core.first.call(null, seq__7650_9188__$1);
            a__5129__auto__.push(arg__5130__auto___9194);
            var G__9195 = cljs.core.next.call(null, seq__7650_9188__$1);
            var G__9196 = null;
            var G__9197 = 0;
            var G__9198 = 0;
            seq__7650_9178 = G__9195;
            chunk__7651_9179 = G__9196;
            count__7652_9180 = G__9197;
            i__7653_9181 = G__9198;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.h5.apply(null, a__5129__auto__);
  };
  var h5 = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return h5__delegate.call(this, args__5128__auto__);
  };
  h5.cljs$lang$maxFixedArity = 0;
  h5.cljs$lang$applyTo = function(arglist__9199) {
    var args__5128__auto__ = cljs.core.seq(arglist__9199);
    return h5__delegate(args__5128__auto__);
  };
  h5.cljs$core$IFn$_invoke$arity$variadic = h5__delegate;
  return h5;
}();
quiescent.dom.h6 = function() {
  var h6__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7658_9200 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7659_9201 = null;
    var count__7660_9202 = 0;
    var i__7661_9203 = 0;
    while (true) {
      if (i__7661_9203 < count__7660_9202) {
        var arg__5130__auto___9204 = cljs.core._nth.call(null, chunk__7659_9201, i__7661_9203);
        a__5129__auto__.push(arg__5130__auto___9204);
        var G__9205 = seq__7658_9200;
        var G__9206 = chunk__7659_9201;
        var G__9207 = count__7660_9202;
        var G__9208 = i__7661_9203 + 1;
        seq__7658_9200 = G__9205;
        chunk__7659_9201 = G__9206;
        count__7660_9202 = G__9207;
        i__7661_9203 = G__9208;
        continue;
      } else {
        var temp__4126__auto___9209 = cljs.core.seq.call(null, seq__7658_9200);
        if (temp__4126__auto___9209) {
          var seq__7658_9210__$1 = temp__4126__auto___9209;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7658_9210__$1)) {
            var c__4408__auto___9211 = cljs.core.chunk_first.call(null, seq__7658_9210__$1);
            var G__9212 = cljs.core.chunk_rest.call(null, seq__7658_9210__$1);
            var G__9213 = c__4408__auto___9211;
            var G__9214 = cljs.core.count.call(null, c__4408__auto___9211);
            var G__9215 = 0;
            seq__7658_9200 = G__9212;
            chunk__7659_9201 = G__9213;
            count__7660_9202 = G__9214;
            i__7661_9203 = G__9215;
            continue;
          } else {
            var arg__5130__auto___9216 = cljs.core.first.call(null, seq__7658_9210__$1);
            a__5129__auto__.push(arg__5130__auto___9216);
            var G__9217 = cljs.core.next.call(null, seq__7658_9210__$1);
            var G__9218 = null;
            var G__9219 = 0;
            var G__9220 = 0;
            seq__7658_9200 = G__9217;
            chunk__7659_9201 = G__9218;
            count__7660_9202 = G__9219;
            i__7661_9203 = G__9220;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.h6.apply(null, a__5129__auto__);
  };
  var h6 = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return h6__delegate.call(this, args__5128__auto__);
  };
  h6.cljs$lang$maxFixedArity = 0;
  h6.cljs$lang$applyTo = function(arglist__9221) {
    var args__5128__auto__ = cljs.core.seq(arglist__9221);
    return h6__delegate(args__5128__auto__);
  };
  h6.cljs$core$IFn$_invoke$arity$variadic = h6__delegate;
  return h6;
}();
quiescent.dom.head = function() {
  var head__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7666_9222 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7667_9223 = null;
    var count__7668_9224 = 0;
    var i__7669_9225 = 0;
    while (true) {
      if (i__7669_9225 < count__7668_9224) {
        var arg__5130__auto___9226 = cljs.core._nth.call(null, chunk__7667_9223, i__7669_9225);
        a__5129__auto__.push(arg__5130__auto___9226);
        var G__9227 = seq__7666_9222;
        var G__9228 = chunk__7667_9223;
        var G__9229 = count__7668_9224;
        var G__9230 = i__7669_9225 + 1;
        seq__7666_9222 = G__9227;
        chunk__7667_9223 = G__9228;
        count__7668_9224 = G__9229;
        i__7669_9225 = G__9230;
        continue;
      } else {
        var temp__4126__auto___9231 = cljs.core.seq.call(null, seq__7666_9222);
        if (temp__4126__auto___9231) {
          var seq__7666_9232__$1 = temp__4126__auto___9231;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7666_9232__$1)) {
            var c__4408__auto___9233 = cljs.core.chunk_first.call(null, seq__7666_9232__$1);
            var G__9234 = cljs.core.chunk_rest.call(null, seq__7666_9232__$1);
            var G__9235 = c__4408__auto___9233;
            var G__9236 = cljs.core.count.call(null, c__4408__auto___9233);
            var G__9237 = 0;
            seq__7666_9222 = G__9234;
            chunk__7667_9223 = G__9235;
            count__7668_9224 = G__9236;
            i__7669_9225 = G__9237;
            continue;
          } else {
            var arg__5130__auto___9238 = cljs.core.first.call(null, seq__7666_9232__$1);
            a__5129__auto__.push(arg__5130__auto___9238);
            var G__9239 = cljs.core.next.call(null, seq__7666_9232__$1);
            var G__9240 = null;
            var G__9241 = 0;
            var G__9242 = 0;
            seq__7666_9222 = G__9239;
            chunk__7667_9223 = G__9240;
            count__7668_9224 = G__9241;
            i__7669_9225 = G__9242;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.head.apply(null, a__5129__auto__);
  };
  var head = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return head__delegate.call(this, args__5128__auto__);
  };
  head.cljs$lang$maxFixedArity = 0;
  head.cljs$lang$applyTo = function(arglist__9243) {
    var args__5128__auto__ = cljs.core.seq(arglist__9243);
    return head__delegate(args__5128__auto__);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
quiescent.dom.header = function() {
  var header__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7674_9244 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7675_9245 = null;
    var count__7676_9246 = 0;
    var i__7677_9247 = 0;
    while (true) {
      if (i__7677_9247 < count__7676_9246) {
        var arg__5130__auto___9248 = cljs.core._nth.call(null, chunk__7675_9245, i__7677_9247);
        a__5129__auto__.push(arg__5130__auto___9248);
        var G__9249 = seq__7674_9244;
        var G__9250 = chunk__7675_9245;
        var G__9251 = count__7676_9246;
        var G__9252 = i__7677_9247 + 1;
        seq__7674_9244 = G__9249;
        chunk__7675_9245 = G__9250;
        count__7676_9246 = G__9251;
        i__7677_9247 = G__9252;
        continue;
      } else {
        var temp__4126__auto___9253 = cljs.core.seq.call(null, seq__7674_9244);
        if (temp__4126__auto___9253) {
          var seq__7674_9254__$1 = temp__4126__auto___9253;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7674_9254__$1)) {
            var c__4408__auto___9255 = cljs.core.chunk_first.call(null, seq__7674_9254__$1);
            var G__9256 = cljs.core.chunk_rest.call(null, seq__7674_9254__$1);
            var G__9257 = c__4408__auto___9255;
            var G__9258 = cljs.core.count.call(null, c__4408__auto___9255);
            var G__9259 = 0;
            seq__7674_9244 = G__9256;
            chunk__7675_9245 = G__9257;
            count__7676_9246 = G__9258;
            i__7677_9247 = G__9259;
            continue;
          } else {
            var arg__5130__auto___9260 = cljs.core.first.call(null, seq__7674_9254__$1);
            a__5129__auto__.push(arg__5130__auto___9260);
            var G__9261 = cljs.core.next.call(null, seq__7674_9254__$1);
            var G__9262 = null;
            var G__9263 = 0;
            var G__9264 = 0;
            seq__7674_9244 = G__9261;
            chunk__7675_9245 = G__9262;
            count__7676_9246 = G__9263;
            i__7677_9247 = G__9264;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.header.apply(null, a__5129__auto__);
  };
  var header = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return header__delegate.call(this, args__5128__auto__);
  };
  header.cljs$lang$maxFixedArity = 0;
  header.cljs$lang$applyTo = function(arglist__9265) {
    var args__5128__auto__ = cljs.core.seq(arglist__9265);
    return header__delegate(args__5128__auto__);
  };
  header.cljs$core$IFn$_invoke$arity$variadic = header__delegate;
  return header;
}();
quiescent.dom.hr = function() {
  var hr__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7682_9266 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7683_9267 = null;
    var count__7684_9268 = 0;
    var i__7685_9269 = 0;
    while (true) {
      if (i__7685_9269 < count__7684_9268) {
        var arg__5130__auto___9270 = cljs.core._nth.call(null, chunk__7683_9267, i__7685_9269);
        a__5129__auto__.push(arg__5130__auto___9270);
        var G__9271 = seq__7682_9266;
        var G__9272 = chunk__7683_9267;
        var G__9273 = count__7684_9268;
        var G__9274 = i__7685_9269 + 1;
        seq__7682_9266 = G__9271;
        chunk__7683_9267 = G__9272;
        count__7684_9268 = G__9273;
        i__7685_9269 = G__9274;
        continue;
      } else {
        var temp__4126__auto___9275 = cljs.core.seq.call(null, seq__7682_9266);
        if (temp__4126__auto___9275) {
          var seq__7682_9276__$1 = temp__4126__auto___9275;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7682_9276__$1)) {
            var c__4408__auto___9277 = cljs.core.chunk_first.call(null, seq__7682_9276__$1);
            var G__9278 = cljs.core.chunk_rest.call(null, seq__7682_9276__$1);
            var G__9279 = c__4408__auto___9277;
            var G__9280 = cljs.core.count.call(null, c__4408__auto___9277);
            var G__9281 = 0;
            seq__7682_9266 = G__9278;
            chunk__7683_9267 = G__9279;
            count__7684_9268 = G__9280;
            i__7685_9269 = G__9281;
            continue;
          } else {
            var arg__5130__auto___9282 = cljs.core.first.call(null, seq__7682_9276__$1);
            a__5129__auto__.push(arg__5130__auto___9282);
            var G__9283 = cljs.core.next.call(null, seq__7682_9276__$1);
            var G__9284 = null;
            var G__9285 = 0;
            var G__9286 = 0;
            seq__7682_9266 = G__9283;
            chunk__7683_9267 = G__9284;
            count__7684_9268 = G__9285;
            i__7685_9269 = G__9286;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.hr.apply(null, a__5129__auto__);
  };
  var hr = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hr__delegate.call(this, args__5128__auto__);
  };
  hr.cljs$lang$maxFixedArity = 0;
  hr.cljs$lang$applyTo = function(arglist__9287) {
    var args__5128__auto__ = cljs.core.seq(arglist__9287);
    return hr__delegate(args__5128__auto__);
  };
  hr.cljs$core$IFn$_invoke$arity$variadic = hr__delegate;
  return hr;
}();
quiescent.dom.html = function() {
  var html__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7690_9288 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7691_9289 = null;
    var count__7692_9290 = 0;
    var i__7693_9291 = 0;
    while (true) {
      if (i__7693_9291 < count__7692_9290) {
        var arg__5130__auto___9292 = cljs.core._nth.call(null, chunk__7691_9289, i__7693_9291);
        a__5129__auto__.push(arg__5130__auto___9292);
        var G__9293 = seq__7690_9288;
        var G__9294 = chunk__7691_9289;
        var G__9295 = count__7692_9290;
        var G__9296 = i__7693_9291 + 1;
        seq__7690_9288 = G__9293;
        chunk__7691_9289 = G__9294;
        count__7692_9290 = G__9295;
        i__7693_9291 = G__9296;
        continue;
      } else {
        var temp__4126__auto___9297 = cljs.core.seq.call(null, seq__7690_9288);
        if (temp__4126__auto___9297) {
          var seq__7690_9298__$1 = temp__4126__auto___9297;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7690_9298__$1)) {
            var c__4408__auto___9299 = cljs.core.chunk_first.call(null, seq__7690_9298__$1);
            var G__9300 = cljs.core.chunk_rest.call(null, seq__7690_9298__$1);
            var G__9301 = c__4408__auto___9299;
            var G__9302 = cljs.core.count.call(null, c__4408__auto___9299);
            var G__9303 = 0;
            seq__7690_9288 = G__9300;
            chunk__7691_9289 = G__9301;
            count__7692_9290 = G__9302;
            i__7693_9291 = G__9303;
            continue;
          } else {
            var arg__5130__auto___9304 = cljs.core.first.call(null, seq__7690_9298__$1);
            a__5129__auto__.push(arg__5130__auto___9304);
            var G__9305 = cljs.core.next.call(null, seq__7690_9298__$1);
            var G__9306 = null;
            var G__9307 = 0;
            var G__9308 = 0;
            seq__7690_9288 = G__9305;
            chunk__7691_9289 = G__9306;
            count__7692_9290 = G__9307;
            i__7693_9291 = G__9308;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.html.apply(null, a__5129__auto__);
  };
  var html = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return html__delegate.call(this, args__5128__auto__);
  };
  html.cljs$lang$maxFixedArity = 0;
  html.cljs$lang$applyTo = function(arglist__9309) {
    var args__5128__auto__ = cljs.core.seq(arglist__9309);
    return html__delegate(args__5128__auto__);
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html;
}();
quiescent.dom.i = function() {
  var i__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7698_9310 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7699_9311 = null;
    var count__7700_9312 = 0;
    var i__7701_9313 = 0;
    while (true) {
      if (i__7701_9313 < count__7700_9312) {
        var arg__5130__auto___9314 = cljs.core._nth.call(null, chunk__7699_9311, i__7701_9313);
        a__5129__auto__.push(arg__5130__auto___9314);
        var G__9315 = seq__7698_9310;
        var G__9316 = chunk__7699_9311;
        var G__9317 = count__7700_9312;
        var G__9318 = i__7701_9313 + 1;
        seq__7698_9310 = G__9315;
        chunk__7699_9311 = G__9316;
        count__7700_9312 = G__9317;
        i__7701_9313 = G__9318;
        continue;
      } else {
        var temp__4126__auto___9319 = cljs.core.seq.call(null, seq__7698_9310);
        if (temp__4126__auto___9319) {
          var seq__7698_9320__$1 = temp__4126__auto___9319;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7698_9320__$1)) {
            var c__4408__auto___9321 = cljs.core.chunk_first.call(null, seq__7698_9320__$1);
            var G__9322 = cljs.core.chunk_rest.call(null, seq__7698_9320__$1);
            var G__9323 = c__4408__auto___9321;
            var G__9324 = cljs.core.count.call(null, c__4408__auto___9321);
            var G__9325 = 0;
            seq__7698_9310 = G__9322;
            chunk__7699_9311 = G__9323;
            count__7700_9312 = G__9324;
            i__7701_9313 = G__9325;
            continue;
          } else {
            var arg__5130__auto___9326 = cljs.core.first.call(null, seq__7698_9320__$1);
            a__5129__auto__.push(arg__5130__auto___9326);
            var G__9327 = cljs.core.next.call(null, seq__7698_9320__$1);
            var G__9328 = null;
            var G__9329 = 0;
            var G__9330 = 0;
            seq__7698_9310 = G__9327;
            chunk__7699_9311 = G__9328;
            count__7700_9312 = G__9329;
            i__7701_9313 = G__9330;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.i.apply(null, a__5129__auto__);
  };
  var i = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return i__delegate.call(this, args__5128__auto__);
  };
  i.cljs$lang$maxFixedArity = 0;
  i.cljs$lang$applyTo = function(arglist__9331) {
    var args__5128__auto__ = cljs.core.seq(arglist__9331);
    return i__delegate(args__5128__auto__);
  };
  i.cljs$core$IFn$_invoke$arity$variadic = i__delegate;
  return i;
}();
quiescent.dom.iframe = function() {
  var iframe__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7706_9332 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7707_9333 = null;
    var count__7708_9334 = 0;
    var i__7709_9335 = 0;
    while (true) {
      if (i__7709_9335 < count__7708_9334) {
        var arg__5130__auto___9336 = cljs.core._nth.call(null, chunk__7707_9333, i__7709_9335);
        a__5129__auto__.push(arg__5130__auto___9336);
        var G__9337 = seq__7706_9332;
        var G__9338 = chunk__7707_9333;
        var G__9339 = count__7708_9334;
        var G__9340 = i__7709_9335 + 1;
        seq__7706_9332 = G__9337;
        chunk__7707_9333 = G__9338;
        count__7708_9334 = G__9339;
        i__7709_9335 = G__9340;
        continue;
      } else {
        var temp__4126__auto___9341 = cljs.core.seq.call(null, seq__7706_9332);
        if (temp__4126__auto___9341) {
          var seq__7706_9342__$1 = temp__4126__auto___9341;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7706_9342__$1)) {
            var c__4408__auto___9343 = cljs.core.chunk_first.call(null, seq__7706_9342__$1);
            var G__9344 = cljs.core.chunk_rest.call(null, seq__7706_9342__$1);
            var G__9345 = c__4408__auto___9343;
            var G__9346 = cljs.core.count.call(null, c__4408__auto___9343);
            var G__9347 = 0;
            seq__7706_9332 = G__9344;
            chunk__7707_9333 = G__9345;
            count__7708_9334 = G__9346;
            i__7709_9335 = G__9347;
            continue;
          } else {
            var arg__5130__auto___9348 = cljs.core.first.call(null, seq__7706_9342__$1);
            a__5129__auto__.push(arg__5130__auto___9348);
            var G__9349 = cljs.core.next.call(null, seq__7706_9342__$1);
            var G__9350 = null;
            var G__9351 = 0;
            var G__9352 = 0;
            seq__7706_9332 = G__9349;
            chunk__7707_9333 = G__9350;
            count__7708_9334 = G__9351;
            i__7709_9335 = G__9352;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.iframe.apply(null, a__5129__auto__);
  };
  var iframe = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return iframe__delegate.call(this, args__5128__auto__);
  };
  iframe.cljs$lang$maxFixedArity = 0;
  iframe.cljs$lang$applyTo = function(arglist__9353) {
    var args__5128__auto__ = cljs.core.seq(arglist__9353);
    return iframe__delegate(args__5128__auto__);
  };
  iframe.cljs$core$IFn$_invoke$arity$variadic = iframe__delegate;
  return iframe;
}();
quiescent.dom.img = function() {
  var img__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7714_9354 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7715_9355 = null;
    var count__7716_9356 = 0;
    var i__7717_9357 = 0;
    while (true) {
      if (i__7717_9357 < count__7716_9356) {
        var arg__5130__auto___9358 = cljs.core._nth.call(null, chunk__7715_9355, i__7717_9357);
        a__5129__auto__.push(arg__5130__auto___9358);
        var G__9359 = seq__7714_9354;
        var G__9360 = chunk__7715_9355;
        var G__9361 = count__7716_9356;
        var G__9362 = i__7717_9357 + 1;
        seq__7714_9354 = G__9359;
        chunk__7715_9355 = G__9360;
        count__7716_9356 = G__9361;
        i__7717_9357 = G__9362;
        continue;
      } else {
        var temp__4126__auto___9363 = cljs.core.seq.call(null, seq__7714_9354);
        if (temp__4126__auto___9363) {
          var seq__7714_9364__$1 = temp__4126__auto___9363;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7714_9364__$1)) {
            var c__4408__auto___9365 = cljs.core.chunk_first.call(null, seq__7714_9364__$1);
            var G__9366 = cljs.core.chunk_rest.call(null, seq__7714_9364__$1);
            var G__9367 = c__4408__auto___9365;
            var G__9368 = cljs.core.count.call(null, c__4408__auto___9365);
            var G__9369 = 0;
            seq__7714_9354 = G__9366;
            chunk__7715_9355 = G__9367;
            count__7716_9356 = G__9368;
            i__7717_9357 = G__9369;
            continue;
          } else {
            var arg__5130__auto___9370 = cljs.core.first.call(null, seq__7714_9364__$1);
            a__5129__auto__.push(arg__5130__auto___9370);
            var G__9371 = cljs.core.next.call(null, seq__7714_9364__$1);
            var G__9372 = null;
            var G__9373 = 0;
            var G__9374 = 0;
            seq__7714_9354 = G__9371;
            chunk__7715_9355 = G__9372;
            count__7716_9356 = G__9373;
            i__7717_9357 = G__9374;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.img.apply(null, a__5129__auto__);
  };
  var img = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return img__delegate.call(this, args__5128__auto__);
  };
  img.cljs$lang$maxFixedArity = 0;
  img.cljs$lang$applyTo = function(arglist__9375) {
    var args__5128__auto__ = cljs.core.seq(arglist__9375);
    return img__delegate(args__5128__auto__);
  };
  img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
  return img;
}();
quiescent.dom.input = function() {
  var input__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7722_9376 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7723_9377 = null;
    var count__7724_9378 = 0;
    var i__7725_9379 = 0;
    while (true) {
      if (i__7725_9379 < count__7724_9378) {
        var arg__5130__auto___9380 = cljs.core._nth.call(null, chunk__7723_9377, i__7725_9379);
        a__5129__auto__.push(arg__5130__auto___9380);
        var G__9381 = seq__7722_9376;
        var G__9382 = chunk__7723_9377;
        var G__9383 = count__7724_9378;
        var G__9384 = i__7725_9379 + 1;
        seq__7722_9376 = G__9381;
        chunk__7723_9377 = G__9382;
        count__7724_9378 = G__9383;
        i__7725_9379 = G__9384;
        continue;
      } else {
        var temp__4126__auto___9385 = cljs.core.seq.call(null, seq__7722_9376);
        if (temp__4126__auto___9385) {
          var seq__7722_9386__$1 = temp__4126__auto___9385;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7722_9386__$1)) {
            var c__4408__auto___9387 = cljs.core.chunk_first.call(null, seq__7722_9386__$1);
            var G__9388 = cljs.core.chunk_rest.call(null, seq__7722_9386__$1);
            var G__9389 = c__4408__auto___9387;
            var G__9390 = cljs.core.count.call(null, c__4408__auto___9387);
            var G__9391 = 0;
            seq__7722_9376 = G__9388;
            chunk__7723_9377 = G__9389;
            count__7724_9378 = G__9390;
            i__7725_9379 = G__9391;
            continue;
          } else {
            var arg__5130__auto___9392 = cljs.core.first.call(null, seq__7722_9386__$1);
            a__5129__auto__.push(arg__5130__auto___9392);
            var G__9393 = cljs.core.next.call(null, seq__7722_9386__$1);
            var G__9394 = null;
            var G__9395 = 0;
            var G__9396 = 0;
            seq__7722_9376 = G__9393;
            chunk__7723_9377 = G__9394;
            count__7724_9378 = G__9395;
            i__7725_9379 = G__9396;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.input.apply(null, a__5129__auto__);
  };
  var input = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return input__delegate.call(this, args__5128__auto__);
  };
  input.cljs$lang$maxFixedArity = 0;
  input.cljs$lang$applyTo = function(arglist__9397) {
    var args__5128__auto__ = cljs.core.seq(arglist__9397);
    return input__delegate(args__5128__auto__);
  };
  input.cljs$core$IFn$_invoke$arity$variadic = input__delegate;
  return input;
}();
quiescent.dom.ins = function() {
  var ins__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7730_9398 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7731_9399 = null;
    var count__7732_9400 = 0;
    var i__7733_9401 = 0;
    while (true) {
      if (i__7733_9401 < count__7732_9400) {
        var arg__5130__auto___9402 = cljs.core._nth.call(null, chunk__7731_9399, i__7733_9401);
        a__5129__auto__.push(arg__5130__auto___9402);
        var G__9403 = seq__7730_9398;
        var G__9404 = chunk__7731_9399;
        var G__9405 = count__7732_9400;
        var G__9406 = i__7733_9401 + 1;
        seq__7730_9398 = G__9403;
        chunk__7731_9399 = G__9404;
        count__7732_9400 = G__9405;
        i__7733_9401 = G__9406;
        continue;
      } else {
        var temp__4126__auto___9407 = cljs.core.seq.call(null, seq__7730_9398);
        if (temp__4126__auto___9407) {
          var seq__7730_9408__$1 = temp__4126__auto___9407;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7730_9408__$1)) {
            var c__4408__auto___9409 = cljs.core.chunk_first.call(null, seq__7730_9408__$1);
            var G__9410 = cljs.core.chunk_rest.call(null, seq__7730_9408__$1);
            var G__9411 = c__4408__auto___9409;
            var G__9412 = cljs.core.count.call(null, c__4408__auto___9409);
            var G__9413 = 0;
            seq__7730_9398 = G__9410;
            chunk__7731_9399 = G__9411;
            count__7732_9400 = G__9412;
            i__7733_9401 = G__9413;
            continue;
          } else {
            var arg__5130__auto___9414 = cljs.core.first.call(null, seq__7730_9408__$1);
            a__5129__auto__.push(arg__5130__auto___9414);
            var G__9415 = cljs.core.next.call(null, seq__7730_9408__$1);
            var G__9416 = null;
            var G__9417 = 0;
            var G__9418 = 0;
            seq__7730_9398 = G__9415;
            chunk__7731_9399 = G__9416;
            count__7732_9400 = G__9417;
            i__7733_9401 = G__9418;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.ins.apply(null, a__5129__auto__);
  };
  var ins = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return ins__delegate.call(this, args__5128__auto__);
  };
  ins.cljs$lang$maxFixedArity = 0;
  ins.cljs$lang$applyTo = function(arglist__9419) {
    var args__5128__auto__ = cljs.core.seq(arglist__9419);
    return ins__delegate(args__5128__auto__);
  };
  ins.cljs$core$IFn$_invoke$arity$variadic = ins__delegate;
  return ins;
}();
quiescent.dom.kbd = function() {
  var kbd__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7738_9420 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7739_9421 = null;
    var count__7740_9422 = 0;
    var i__7741_9423 = 0;
    while (true) {
      if (i__7741_9423 < count__7740_9422) {
        var arg__5130__auto___9424 = cljs.core._nth.call(null, chunk__7739_9421, i__7741_9423);
        a__5129__auto__.push(arg__5130__auto___9424);
        var G__9425 = seq__7738_9420;
        var G__9426 = chunk__7739_9421;
        var G__9427 = count__7740_9422;
        var G__9428 = i__7741_9423 + 1;
        seq__7738_9420 = G__9425;
        chunk__7739_9421 = G__9426;
        count__7740_9422 = G__9427;
        i__7741_9423 = G__9428;
        continue;
      } else {
        var temp__4126__auto___9429 = cljs.core.seq.call(null, seq__7738_9420);
        if (temp__4126__auto___9429) {
          var seq__7738_9430__$1 = temp__4126__auto___9429;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7738_9430__$1)) {
            var c__4408__auto___9431 = cljs.core.chunk_first.call(null, seq__7738_9430__$1);
            var G__9432 = cljs.core.chunk_rest.call(null, seq__7738_9430__$1);
            var G__9433 = c__4408__auto___9431;
            var G__9434 = cljs.core.count.call(null, c__4408__auto___9431);
            var G__9435 = 0;
            seq__7738_9420 = G__9432;
            chunk__7739_9421 = G__9433;
            count__7740_9422 = G__9434;
            i__7741_9423 = G__9435;
            continue;
          } else {
            var arg__5130__auto___9436 = cljs.core.first.call(null, seq__7738_9430__$1);
            a__5129__auto__.push(arg__5130__auto___9436);
            var G__9437 = cljs.core.next.call(null, seq__7738_9430__$1);
            var G__9438 = null;
            var G__9439 = 0;
            var G__9440 = 0;
            seq__7738_9420 = G__9437;
            chunk__7739_9421 = G__9438;
            count__7740_9422 = G__9439;
            i__7741_9423 = G__9440;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.kbd.apply(null, a__5129__auto__);
  };
  var kbd = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return kbd__delegate.call(this, args__5128__auto__);
  };
  kbd.cljs$lang$maxFixedArity = 0;
  kbd.cljs$lang$applyTo = function(arglist__9441) {
    var args__5128__auto__ = cljs.core.seq(arglist__9441);
    return kbd__delegate(args__5128__auto__);
  };
  kbd.cljs$core$IFn$_invoke$arity$variadic = kbd__delegate;
  return kbd;
}();
quiescent.dom.keygen = function() {
  var keygen__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7746_9442 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7747_9443 = null;
    var count__7748_9444 = 0;
    var i__7749_9445 = 0;
    while (true) {
      if (i__7749_9445 < count__7748_9444) {
        var arg__5130__auto___9446 = cljs.core._nth.call(null, chunk__7747_9443, i__7749_9445);
        a__5129__auto__.push(arg__5130__auto___9446);
        var G__9447 = seq__7746_9442;
        var G__9448 = chunk__7747_9443;
        var G__9449 = count__7748_9444;
        var G__9450 = i__7749_9445 + 1;
        seq__7746_9442 = G__9447;
        chunk__7747_9443 = G__9448;
        count__7748_9444 = G__9449;
        i__7749_9445 = G__9450;
        continue;
      } else {
        var temp__4126__auto___9451 = cljs.core.seq.call(null, seq__7746_9442);
        if (temp__4126__auto___9451) {
          var seq__7746_9452__$1 = temp__4126__auto___9451;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7746_9452__$1)) {
            var c__4408__auto___9453 = cljs.core.chunk_first.call(null, seq__7746_9452__$1);
            var G__9454 = cljs.core.chunk_rest.call(null, seq__7746_9452__$1);
            var G__9455 = c__4408__auto___9453;
            var G__9456 = cljs.core.count.call(null, c__4408__auto___9453);
            var G__9457 = 0;
            seq__7746_9442 = G__9454;
            chunk__7747_9443 = G__9455;
            count__7748_9444 = G__9456;
            i__7749_9445 = G__9457;
            continue;
          } else {
            var arg__5130__auto___9458 = cljs.core.first.call(null, seq__7746_9452__$1);
            a__5129__auto__.push(arg__5130__auto___9458);
            var G__9459 = cljs.core.next.call(null, seq__7746_9452__$1);
            var G__9460 = null;
            var G__9461 = 0;
            var G__9462 = 0;
            seq__7746_9442 = G__9459;
            chunk__7747_9443 = G__9460;
            count__7748_9444 = G__9461;
            i__7749_9445 = G__9462;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.keygen.apply(null, a__5129__auto__);
  };
  var keygen = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return keygen__delegate.call(this, args__5128__auto__);
  };
  keygen.cljs$lang$maxFixedArity = 0;
  keygen.cljs$lang$applyTo = function(arglist__9463) {
    var args__5128__auto__ = cljs.core.seq(arglist__9463);
    return keygen__delegate(args__5128__auto__);
  };
  keygen.cljs$core$IFn$_invoke$arity$variadic = keygen__delegate;
  return keygen;
}();
quiescent.dom.label = function() {
  var label__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7754_9464 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7755_9465 = null;
    var count__7756_9466 = 0;
    var i__7757_9467 = 0;
    while (true) {
      if (i__7757_9467 < count__7756_9466) {
        var arg__5130__auto___9468 = cljs.core._nth.call(null, chunk__7755_9465, i__7757_9467);
        a__5129__auto__.push(arg__5130__auto___9468);
        var G__9469 = seq__7754_9464;
        var G__9470 = chunk__7755_9465;
        var G__9471 = count__7756_9466;
        var G__9472 = i__7757_9467 + 1;
        seq__7754_9464 = G__9469;
        chunk__7755_9465 = G__9470;
        count__7756_9466 = G__9471;
        i__7757_9467 = G__9472;
        continue;
      } else {
        var temp__4126__auto___9473 = cljs.core.seq.call(null, seq__7754_9464);
        if (temp__4126__auto___9473) {
          var seq__7754_9474__$1 = temp__4126__auto___9473;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7754_9474__$1)) {
            var c__4408__auto___9475 = cljs.core.chunk_first.call(null, seq__7754_9474__$1);
            var G__9476 = cljs.core.chunk_rest.call(null, seq__7754_9474__$1);
            var G__9477 = c__4408__auto___9475;
            var G__9478 = cljs.core.count.call(null, c__4408__auto___9475);
            var G__9479 = 0;
            seq__7754_9464 = G__9476;
            chunk__7755_9465 = G__9477;
            count__7756_9466 = G__9478;
            i__7757_9467 = G__9479;
            continue;
          } else {
            var arg__5130__auto___9480 = cljs.core.first.call(null, seq__7754_9474__$1);
            a__5129__auto__.push(arg__5130__auto___9480);
            var G__9481 = cljs.core.next.call(null, seq__7754_9474__$1);
            var G__9482 = null;
            var G__9483 = 0;
            var G__9484 = 0;
            seq__7754_9464 = G__9481;
            chunk__7755_9465 = G__9482;
            count__7756_9466 = G__9483;
            i__7757_9467 = G__9484;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.label.apply(null, a__5129__auto__);
  };
  var label = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return label__delegate.call(this, args__5128__auto__);
  };
  label.cljs$lang$maxFixedArity = 0;
  label.cljs$lang$applyTo = function(arglist__9485) {
    var args__5128__auto__ = cljs.core.seq(arglist__9485);
    return label__delegate(args__5128__auto__);
  };
  label.cljs$core$IFn$_invoke$arity$variadic = label__delegate;
  return label;
}();
quiescent.dom.legend = function() {
  var legend__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7762_9486 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7763_9487 = null;
    var count__7764_9488 = 0;
    var i__7765_9489 = 0;
    while (true) {
      if (i__7765_9489 < count__7764_9488) {
        var arg__5130__auto___9490 = cljs.core._nth.call(null, chunk__7763_9487, i__7765_9489);
        a__5129__auto__.push(arg__5130__auto___9490);
        var G__9491 = seq__7762_9486;
        var G__9492 = chunk__7763_9487;
        var G__9493 = count__7764_9488;
        var G__9494 = i__7765_9489 + 1;
        seq__7762_9486 = G__9491;
        chunk__7763_9487 = G__9492;
        count__7764_9488 = G__9493;
        i__7765_9489 = G__9494;
        continue;
      } else {
        var temp__4126__auto___9495 = cljs.core.seq.call(null, seq__7762_9486);
        if (temp__4126__auto___9495) {
          var seq__7762_9496__$1 = temp__4126__auto___9495;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7762_9496__$1)) {
            var c__4408__auto___9497 = cljs.core.chunk_first.call(null, seq__7762_9496__$1);
            var G__9498 = cljs.core.chunk_rest.call(null, seq__7762_9496__$1);
            var G__9499 = c__4408__auto___9497;
            var G__9500 = cljs.core.count.call(null, c__4408__auto___9497);
            var G__9501 = 0;
            seq__7762_9486 = G__9498;
            chunk__7763_9487 = G__9499;
            count__7764_9488 = G__9500;
            i__7765_9489 = G__9501;
            continue;
          } else {
            var arg__5130__auto___9502 = cljs.core.first.call(null, seq__7762_9496__$1);
            a__5129__auto__.push(arg__5130__auto___9502);
            var G__9503 = cljs.core.next.call(null, seq__7762_9496__$1);
            var G__9504 = null;
            var G__9505 = 0;
            var G__9506 = 0;
            seq__7762_9486 = G__9503;
            chunk__7763_9487 = G__9504;
            count__7764_9488 = G__9505;
            i__7765_9489 = G__9506;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.legend.apply(null, a__5129__auto__);
  };
  var legend = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return legend__delegate.call(this, args__5128__auto__);
  };
  legend.cljs$lang$maxFixedArity = 0;
  legend.cljs$lang$applyTo = function(arglist__9507) {
    var args__5128__auto__ = cljs.core.seq(arglist__9507);
    return legend__delegate(args__5128__auto__);
  };
  legend.cljs$core$IFn$_invoke$arity$variadic = legend__delegate;
  return legend;
}();
quiescent.dom.li = function() {
  var li__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7770_9508 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7771_9509 = null;
    var count__7772_9510 = 0;
    var i__7773_9511 = 0;
    while (true) {
      if (i__7773_9511 < count__7772_9510) {
        var arg__5130__auto___9512 = cljs.core._nth.call(null, chunk__7771_9509, i__7773_9511);
        a__5129__auto__.push(arg__5130__auto___9512);
        var G__9513 = seq__7770_9508;
        var G__9514 = chunk__7771_9509;
        var G__9515 = count__7772_9510;
        var G__9516 = i__7773_9511 + 1;
        seq__7770_9508 = G__9513;
        chunk__7771_9509 = G__9514;
        count__7772_9510 = G__9515;
        i__7773_9511 = G__9516;
        continue;
      } else {
        var temp__4126__auto___9517 = cljs.core.seq.call(null, seq__7770_9508);
        if (temp__4126__auto___9517) {
          var seq__7770_9518__$1 = temp__4126__auto___9517;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7770_9518__$1)) {
            var c__4408__auto___9519 = cljs.core.chunk_first.call(null, seq__7770_9518__$1);
            var G__9520 = cljs.core.chunk_rest.call(null, seq__7770_9518__$1);
            var G__9521 = c__4408__auto___9519;
            var G__9522 = cljs.core.count.call(null, c__4408__auto___9519);
            var G__9523 = 0;
            seq__7770_9508 = G__9520;
            chunk__7771_9509 = G__9521;
            count__7772_9510 = G__9522;
            i__7773_9511 = G__9523;
            continue;
          } else {
            var arg__5130__auto___9524 = cljs.core.first.call(null, seq__7770_9518__$1);
            a__5129__auto__.push(arg__5130__auto___9524);
            var G__9525 = cljs.core.next.call(null, seq__7770_9518__$1);
            var G__9526 = null;
            var G__9527 = 0;
            var G__9528 = 0;
            seq__7770_9508 = G__9525;
            chunk__7771_9509 = G__9526;
            count__7772_9510 = G__9527;
            i__7773_9511 = G__9528;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.li.apply(null, a__5129__auto__);
  };
  var li = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return li__delegate.call(this, args__5128__auto__);
  };
  li.cljs$lang$maxFixedArity = 0;
  li.cljs$lang$applyTo = function(arglist__9529) {
    var args__5128__auto__ = cljs.core.seq(arglist__9529);
    return li__delegate(args__5128__auto__);
  };
  li.cljs$core$IFn$_invoke$arity$variadic = li__delegate;
  return li;
}();
quiescent.dom.link = function() {
  var link__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7778_9530 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7779_9531 = null;
    var count__7780_9532 = 0;
    var i__7781_9533 = 0;
    while (true) {
      if (i__7781_9533 < count__7780_9532) {
        var arg__5130__auto___9534 = cljs.core._nth.call(null, chunk__7779_9531, i__7781_9533);
        a__5129__auto__.push(arg__5130__auto___9534);
        var G__9535 = seq__7778_9530;
        var G__9536 = chunk__7779_9531;
        var G__9537 = count__7780_9532;
        var G__9538 = i__7781_9533 + 1;
        seq__7778_9530 = G__9535;
        chunk__7779_9531 = G__9536;
        count__7780_9532 = G__9537;
        i__7781_9533 = G__9538;
        continue;
      } else {
        var temp__4126__auto___9539 = cljs.core.seq.call(null, seq__7778_9530);
        if (temp__4126__auto___9539) {
          var seq__7778_9540__$1 = temp__4126__auto___9539;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7778_9540__$1)) {
            var c__4408__auto___9541 = cljs.core.chunk_first.call(null, seq__7778_9540__$1);
            var G__9542 = cljs.core.chunk_rest.call(null, seq__7778_9540__$1);
            var G__9543 = c__4408__auto___9541;
            var G__9544 = cljs.core.count.call(null, c__4408__auto___9541);
            var G__9545 = 0;
            seq__7778_9530 = G__9542;
            chunk__7779_9531 = G__9543;
            count__7780_9532 = G__9544;
            i__7781_9533 = G__9545;
            continue;
          } else {
            var arg__5130__auto___9546 = cljs.core.first.call(null, seq__7778_9540__$1);
            a__5129__auto__.push(arg__5130__auto___9546);
            var G__9547 = cljs.core.next.call(null, seq__7778_9540__$1);
            var G__9548 = null;
            var G__9549 = 0;
            var G__9550 = 0;
            seq__7778_9530 = G__9547;
            chunk__7779_9531 = G__9548;
            count__7780_9532 = G__9549;
            i__7781_9533 = G__9550;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.link.apply(null, a__5129__auto__);
  };
  var link = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return link__delegate.call(this, args__5128__auto__);
  };
  link.cljs$lang$maxFixedArity = 0;
  link.cljs$lang$applyTo = function(arglist__9551) {
    var args__5128__auto__ = cljs.core.seq(arglist__9551);
    return link__delegate(args__5128__auto__);
  };
  link.cljs$core$IFn$_invoke$arity$variadic = link__delegate;
  return link;
}();
quiescent.dom.main = function() {
  var main__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7786_9552 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7787_9553 = null;
    var count__7788_9554 = 0;
    var i__7789_9555 = 0;
    while (true) {
      if (i__7789_9555 < count__7788_9554) {
        var arg__5130__auto___9556 = cljs.core._nth.call(null, chunk__7787_9553, i__7789_9555);
        a__5129__auto__.push(arg__5130__auto___9556);
        var G__9557 = seq__7786_9552;
        var G__9558 = chunk__7787_9553;
        var G__9559 = count__7788_9554;
        var G__9560 = i__7789_9555 + 1;
        seq__7786_9552 = G__9557;
        chunk__7787_9553 = G__9558;
        count__7788_9554 = G__9559;
        i__7789_9555 = G__9560;
        continue;
      } else {
        var temp__4126__auto___9561 = cljs.core.seq.call(null, seq__7786_9552);
        if (temp__4126__auto___9561) {
          var seq__7786_9562__$1 = temp__4126__auto___9561;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7786_9562__$1)) {
            var c__4408__auto___9563 = cljs.core.chunk_first.call(null, seq__7786_9562__$1);
            var G__9564 = cljs.core.chunk_rest.call(null, seq__7786_9562__$1);
            var G__9565 = c__4408__auto___9563;
            var G__9566 = cljs.core.count.call(null, c__4408__auto___9563);
            var G__9567 = 0;
            seq__7786_9552 = G__9564;
            chunk__7787_9553 = G__9565;
            count__7788_9554 = G__9566;
            i__7789_9555 = G__9567;
            continue;
          } else {
            var arg__5130__auto___9568 = cljs.core.first.call(null, seq__7786_9562__$1);
            a__5129__auto__.push(arg__5130__auto___9568);
            var G__9569 = cljs.core.next.call(null, seq__7786_9562__$1);
            var G__9570 = null;
            var G__9571 = 0;
            var G__9572 = 0;
            seq__7786_9552 = G__9569;
            chunk__7787_9553 = G__9570;
            count__7788_9554 = G__9571;
            i__7789_9555 = G__9572;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.main.apply(null, a__5129__auto__);
  };
  var main = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return main__delegate.call(this, args__5128__auto__);
  };
  main.cljs$lang$maxFixedArity = 0;
  main.cljs$lang$applyTo = function(arglist__9573) {
    var args__5128__auto__ = cljs.core.seq(arglist__9573);
    return main__delegate(args__5128__auto__);
  };
  main.cljs$core$IFn$_invoke$arity$variadic = main__delegate;
  return main;
}();
quiescent.dom.map = function() {
  var map__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7794_9574 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7795_9575 = null;
    var count__7796_9576 = 0;
    var i__7797_9577 = 0;
    while (true) {
      if (i__7797_9577 < count__7796_9576) {
        var arg__5130__auto___9578 = cljs.core._nth.call(null, chunk__7795_9575, i__7797_9577);
        a__5129__auto__.push(arg__5130__auto___9578);
        var G__9579 = seq__7794_9574;
        var G__9580 = chunk__7795_9575;
        var G__9581 = count__7796_9576;
        var G__9582 = i__7797_9577 + 1;
        seq__7794_9574 = G__9579;
        chunk__7795_9575 = G__9580;
        count__7796_9576 = G__9581;
        i__7797_9577 = G__9582;
        continue;
      } else {
        var temp__4126__auto___9583 = cljs.core.seq.call(null, seq__7794_9574);
        if (temp__4126__auto___9583) {
          var seq__7794_9584__$1 = temp__4126__auto___9583;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7794_9584__$1)) {
            var c__4408__auto___9585 = cljs.core.chunk_first.call(null, seq__7794_9584__$1);
            var G__9586 = cljs.core.chunk_rest.call(null, seq__7794_9584__$1);
            var G__9587 = c__4408__auto___9585;
            var G__9588 = cljs.core.count.call(null, c__4408__auto___9585);
            var G__9589 = 0;
            seq__7794_9574 = G__9586;
            chunk__7795_9575 = G__9587;
            count__7796_9576 = G__9588;
            i__7797_9577 = G__9589;
            continue;
          } else {
            var arg__5130__auto___9590 = cljs.core.first.call(null, seq__7794_9584__$1);
            a__5129__auto__.push(arg__5130__auto___9590);
            var G__9591 = cljs.core.next.call(null, seq__7794_9584__$1);
            var G__9592 = null;
            var G__9593 = 0;
            var G__9594 = 0;
            seq__7794_9574 = G__9591;
            chunk__7795_9575 = G__9592;
            count__7796_9576 = G__9593;
            i__7797_9577 = G__9594;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.map.apply(null, a__5129__auto__);
  };
  var map = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return map__delegate.call(this, args__5128__auto__);
  };
  map.cljs$lang$maxFixedArity = 0;
  map.cljs$lang$applyTo = function(arglist__9595) {
    var args__5128__auto__ = cljs.core.seq(arglist__9595);
    return map__delegate(args__5128__auto__);
  };
  map.cljs$core$IFn$_invoke$arity$variadic = map__delegate;
  return map;
}();
quiescent.dom.mark = function() {
  var mark__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7802_9596 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7803_9597 = null;
    var count__7804_9598 = 0;
    var i__7805_9599 = 0;
    while (true) {
      if (i__7805_9599 < count__7804_9598) {
        var arg__5130__auto___9600 = cljs.core._nth.call(null, chunk__7803_9597, i__7805_9599);
        a__5129__auto__.push(arg__5130__auto___9600);
        var G__9601 = seq__7802_9596;
        var G__9602 = chunk__7803_9597;
        var G__9603 = count__7804_9598;
        var G__9604 = i__7805_9599 + 1;
        seq__7802_9596 = G__9601;
        chunk__7803_9597 = G__9602;
        count__7804_9598 = G__9603;
        i__7805_9599 = G__9604;
        continue;
      } else {
        var temp__4126__auto___9605 = cljs.core.seq.call(null, seq__7802_9596);
        if (temp__4126__auto___9605) {
          var seq__7802_9606__$1 = temp__4126__auto___9605;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7802_9606__$1)) {
            var c__4408__auto___9607 = cljs.core.chunk_first.call(null, seq__7802_9606__$1);
            var G__9608 = cljs.core.chunk_rest.call(null, seq__7802_9606__$1);
            var G__9609 = c__4408__auto___9607;
            var G__9610 = cljs.core.count.call(null, c__4408__auto___9607);
            var G__9611 = 0;
            seq__7802_9596 = G__9608;
            chunk__7803_9597 = G__9609;
            count__7804_9598 = G__9610;
            i__7805_9599 = G__9611;
            continue;
          } else {
            var arg__5130__auto___9612 = cljs.core.first.call(null, seq__7802_9606__$1);
            a__5129__auto__.push(arg__5130__auto___9612);
            var G__9613 = cljs.core.next.call(null, seq__7802_9606__$1);
            var G__9614 = null;
            var G__9615 = 0;
            var G__9616 = 0;
            seq__7802_9596 = G__9613;
            chunk__7803_9597 = G__9614;
            count__7804_9598 = G__9615;
            i__7805_9599 = G__9616;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.mark.apply(null, a__5129__auto__);
  };
  var mark = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return mark__delegate.call(this, args__5128__auto__);
  };
  mark.cljs$lang$maxFixedArity = 0;
  mark.cljs$lang$applyTo = function(arglist__9617) {
    var args__5128__auto__ = cljs.core.seq(arglist__9617);
    return mark__delegate(args__5128__auto__);
  };
  mark.cljs$core$IFn$_invoke$arity$variadic = mark__delegate;
  return mark;
}();
quiescent.dom.menu = function() {
  var menu__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7810_9618 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7811_9619 = null;
    var count__7812_9620 = 0;
    var i__7813_9621 = 0;
    while (true) {
      if (i__7813_9621 < count__7812_9620) {
        var arg__5130__auto___9622 = cljs.core._nth.call(null, chunk__7811_9619, i__7813_9621);
        a__5129__auto__.push(arg__5130__auto___9622);
        var G__9623 = seq__7810_9618;
        var G__9624 = chunk__7811_9619;
        var G__9625 = count__7812_9620;
        var G__9626 = i__7813_9621 + 1;
        seq__7810_9618 = G__9623;
        chunk__7811_9619 = G__9624;
        count__7812_9620 = G__9625;
        i__7813_9621 = G__9626;
        continue;
      } else {
        var temp__4126__auto___9627 = cljs.core.seq.call(null, seq__7810_9618);
        if (temp__4126__auto___9627) {
          var seq__7810_9628__$1 = temp__4126__auto___9627;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7810_9628__$1)) {
            var c__4408__auto___9629 = cljs.core.chunk_first.call(null, seq__7810_9628__$1);
            var G__9630 = cljs.core.chunk_rest.call(null, seq__7810_9628__$1);
            var G__9631 = c__4408__auto___9629;
            var G__9632 = cljs.core.count.call(null, c__4408__auto___9629);
            var G__9633 = 0;
            seq__7810_9618 = G__9630;
            chunk__7811_9619 = G__9631;
            count__7812_9620 = G__9632;
            i__7813_9621 = G__9633;
            continue;
          } else {
            var arg__5130__auto___9634 = cljs.core.first.call(null, seq__7810_9628__$1);
            a__5129__auto__.push(arg__5130__auto___9634);
            var G__9635 = cljs.core.next.call(null, seq__7810_9628__$1);
            var G__9636 = null;
            var G__9637 = 0;
            var G__9638 = 0;
            seq__7810_9618 = G__9635;
            chunk__7811_9619 = G__9636;
            count__7812_9620 = G__9637;
            i__7813_9621 = G__9638;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.menu.apply(null, a__5129__auto__);
  };
  var menu = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return menu__delegate.call(this, args__5128__auto__);
  };
  menu.cljs$lang$maxFixedArity = 0;
  menu.cljs$lang$applyTo = function(arglist__9639) {
    var args__5128__auto__ = cljs.core.seq(arglist__9639);
    return menu__delegate(args__5128__auto__);
  };
  menu.cljs$core$IFn$_invoke$arity$variadic = menu__delegate;
  return menu;
}();
quiescent.dom.menuitem = function() {
  var menuitem__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7818_9640 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7819_9641 = null;
    var count__7820_9642 = 0;
    var i__7821_9643 = 0;
    while (true) {
      if (i__7821_9643 < count__7820_9642) {
        var arg__5130__auto___9644 = cljs.core._nth.call(null, chunk__7819_9641, i__7821_9643);
        a__5129__auto__.push(arg__5130__auto___9644);
        var G__9645 = seq__7818_9640;
        var G__9646 = chunk__7819_9641;
        var G__9647 = count__7820_9642;
        var G__9648 = i__7821_9643 + 1;
        seq__7818_9640 = G__9645;
        chunk__7819_9641 = G__9646;
        count__7820_9642 = G__9647;
        i__7821_9643 = G__9648;
        continue;
      } else {
        var temp__4126__auto___9649 = cljs.core.seq.call(null, seq__7818_9640);
        if (temp__4126__auto___9649) {
          var seq__7818_9650__$1 = temp__4126__auto___9649;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7818_9650__$1)) {
            var c__4408__auto___9651 = cljs.core.chunk_first.call(null, seq__7818_9650__$1);
            var G__9652 = cljs.core.chunk_rest.call(null, seq__7818_9650__$1);
            var G__9653 = c__4408__auto___9651;
            var G__9654 = cljs.core.count.call(null, c__4408__auto___9651);
            var G__9655 = 0;
            seq__7818_9640 = G__9652;
            chunk__7819_9641 = G__9653;
            count__7820_9642 = G__9654;
            i__7821_9643 = G__9655;
            continue;
          } else {
            var arg__5130__auto___9656 = cljs.core.first.call(null, seq__7818_9650__$1);
            a__5129__auto__.push(arg__5130__auto___9656);
            var G__9657 = cljs.core.next.call(null, seq__7818_9650__$1);
            var G__9658 = null;
            var G__9659 = 0;
            var G__9660 = 0;
            seq__7818_9640 = G__9657;
            chunk__7819_9641 = G__9658;
            count__7820_9642 = G__9659;
            i__7821_9643 = G__9660;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.menuitem.apply(null, a__5129__auto__);
  };
  var menuitem = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return menuitem__delegate.call(this, args__5128__auto__);
  };
  menuitem.cljs$lang$maxFixedArity = 0;
  menuitem.cljs$lang$applyTo = function(arglist__9661) {
    var args__5128__auto__ = cljs.core.seq(arglist__9661);
    return menuitem__delegate(args__5128__auto__);
  };
  menuitem.cljs$core$IFn$_invoke$arity$variadic = menuitem__delegate;
  return menuitem;
}();
quiescent.dom.meta = function() {
  var meta__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7826_9662 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7827_9663 = null;
    var count__7828_9664 = 0;
    var i__7829_9665 = 0;
    while (true) {
      if (i__7829_9665 < count__7828_9664) {
        var arg__5130__auto___9666 = cljs.core._nth.call(null, chunk__7827_9663, i__7829_9665);
        a__5129__auto__.push(arg__5130__auto___9666);
        var G__9667 = seq__7826_9662;
        var G__9668 = chunk__7827_9663;
        var G__9669 = count__7828_9664;
        var G__9670 = i__7829_9665 + 1;
        seq__7826_9662 = G__9667;
        chunk__7827_9663 = G__9668;
        count__7828_9664 = G__9669;
        i__7829_9665 = G__9670;
        continue;
      } else {
        var temp__4126__auto___9671 = cljs.core.seq.call(null, seq__7826_9662);
        if (temp__4126__auto___9671) {
          var seq__7826_9672__$1 = temp__4126__auto___9671;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7826_9672__$1)) {
            var c__4408__auto___9673 = cljs.core.chunk_first.call(null, seq__7826_9672__$1);
            var G__9674 = cljs.core.chunk_rest.call(null, seq__7826_9672__$1);
            var G__9675 = c__4408__auto___9673;
            var G__9676 = cljs.core.count.call(null, c__4408__auto___9673);
            var G__9677 = 0;
            seq__7826_9662 = G__9674;
            chunk__7827_9663 = G__9675;
            count__7828_9664 = G__9676;
            i__7829_9665 = G__9677;
            continue;
          } else {
            var arg__5130__auto___9678 = cljs.core.first.call(null, seq__7826_9672__$1);
            a__5129__auto__.push(arg__5130__auto___9678);
            var G__9679 = cljs.core.next.call(null, seq__7826_9672__$1);
            var G__9680 = null;
            var G__9681 = 0;
            var G__9682 = 0;
            seq__7826_9662 = G__9679;
            chunk__7827_9663 = G__9680;
            count__7828_9664 = G__9681;
            i__7829_9665 = G__9682;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.meta.apply(null, a__5129__auto__);
  };
  var meta = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return meta__delegate.call(this, args__5128__auto__);
  };
  meta.cljs$lang$maxFixedArity = 0;
  meta.cljs$lang$applyTo = function(arglist__9683) {
    var args__5128__auto__ = cljs.core.seq(arglist__9683);
    return meta__delegate(args__5128__auto__);
  };
  meta.cljs$core$IFn$_invoke$arity$variadic = meta__delegate;
  return meta;
}();
quiescent.dom.meter = function() {
  var meter__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7834_9684 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7835_9685 = null;
    var count__7836_9686 = 0;
    var i__7837_9687 = 0;
    while (true) {
      if (i__7837_9687 < count__7836_9686) {
        var arg__5130__auto___9688 = cljs.core._nth.call(null, chunk__7835_9685, i__7837_9687);
        a__5129__auto__.push(arg__5130__auto___9688);
        var G__9689 = seq__7834_9684;
        var G__9690 = chunk__7835_9685;
        var G__9691 = count__7836_9686;
        var G__9692 = i__7837_9687 + 1;
        seq__7834_9684 = G__9689;
        chunk__7835_9685 = G__9690;
        count__7836_9686 = G__9691;
        i__7837_9687 = G__9692;
        continue;
      } else {
        var temp__4126__auto___9693 = cljs.core.seq.call(null, seq__7834_9684);
        if (temp__4126__auto___9693) {
          var seq__7834_9694__$1 = temp__4126__auto___9693;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7834_9694__$1)) {
            var c__4408__auto___9695 = cljs.core.chunk_first.call(null, seq__7834_9694__$1);
            var G__9696 = cljs.core.chunk_rest.call(null, seq__7834_9694__$1);
            var G__9697 = c__4408__auto___9695;
            var G__9698 = cljs.core.count.call(null, c__4408__auto___9695);
            var G__9699 = 0;
            seq__7834_9684 = G__9696;
            chunk__7835_9685 = G__9697;
            count__7836_9686 = G__9698;
            i__7837_9687 = G__9699;
            continue;
          } else {
            var arg__5130__auto___9700 = cljs.core.first.call(null, seq__7834_9694__$1);
            a__5129__auto__.push(arg__5130__auto___9700);
            var G__9701 = cljs.core.next.call(null, seq__7834_9694__$1);
            var G__9702 = null;
            var G__9703 = 0;
            var G__9704 = 0;
            seq__7834_9684 = G__9701;
            chunk__7835_9685 = G__9702;
            count__7836_9686 = G__9703;
            i__7837_9687 = G__9704;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.meter.apply(null, a__5129__auto__);
  };
  var meter = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return meter__delegate.call(this, args__5128__auto__);
  };
  meter.cljs$lang$maxFixedArity = 0;
  meter.cljs$lang$applyTo = function(arglist__9705) {
    var args__5128__auto__ = cljs.core.seq(arglist__9705);
    return meter__delegate(args__5128__auto__);
  };
  meter.cljs$core$IFn$_invoke$arity$variadic = meter__delegate;
  return meter;
}();
quiescent.dom.nav = function() {
  var nav__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7842_9706 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7843_9707 = null;
    var count__7844_9708 = 0;
    var i__7845_9709 = 0;
    while (true) {
      if (i__7845_9709 < count__7844_9708) {
        var arg__5130__auto___9710 = cljs.core._nth.call(null, chunk__7843_9707, i__7845_9709);
        a__5129__auto__.push(arg__5130__auto___9710);
        var G__9711 = seq__7842_9706;
        var G__9712 = chunk__7843_9707;
        var G__9713 = count__7844_9708;
        var G__9714 = i__7845_9709 + 1;
        seq__7842_9706 = G__9711;
        chunk__7843_9707 = G__9712;
        count__7844_9708 = G__9713;
        i__7845_9709 = G__9714;
        continue;
      } else {
        var temp__4126__auto___9715 = cljs.core.seq.call(null, seq__7842_9706);
        if (temp__4126__auto___9715) {
          var seq__7842_9716__$1 = temp__4126__auto___9715;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7842_9716__$1)) {
            var c__4408__auto___9717 = cljs.core.chunk_first.call(null, seq__7842_9716__$1);
            var G__9718 = cljs.core.chunk_rest.call(null, seq__7842_9716__$1);
            var G__9719 = c__4408__auto___9717;
            var G__9720 = cljs.core.count.call(null, c__4408__auto___9717);
            var G__9721 = 0;
            seq__7842_9706 = G__9718;
            chunk__7843_9707 = G__9719;
            count__7844_9708 = G__9720;
            i__7845_9709 = G__9721;
            continue;
          } else {
            var arg__5130__auto___9722 = cljs.core.first.call(null, seq__7842_9716__$1);
            a__5129__auto__.push(arg__5130__auto___9722);
            var G__9723 = cljs.core.next.call(null, seq__7842_9716__$1);
            var G__9724 = null;
            var G__9725 = 0;
            var G__9726 = 0;
            seq__7842_9706 = G__9723;
            chunk__7843_9707 = G__9724;
            count__7844_9708 = G__9725;
            i__7845_9709 = G__9726;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.nav.apply(null, a__5129__auto__);
  };
  var nav = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return nav__delegate.call(this, args__5128__auto__);
  };
  nav.cljs$lang$maxFixedArity = 0;
  nav.cljs$lang$applyTo = function(arglist__9727) {
    var args__5128__auto__ = cljs.core.seq(arglist__9727);
    return nav__delegate(args__5128__auto__);
  };
  nav.cljs$core$IFn$_invoke$arity$variadic = nav__delegate;
  return nav;
}();
quiescent.dom.noscript = function() {
  var noscript__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7850_9728 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7851_9729 = null;
    var count__7852_9730 = 0;
    var i__7853_9731 = 0;
    while (true) {
      if (i__7853_9731 < count__7852_9730) {
        var arg__5130__auto___9732 = cljs.core._nth.call(null, chunk__7851_9729, i__7853_9731);
        a__5129__auto__.push(arg__5130__auto___9732);
        var G__9733 = seq__7850_9728;
        var G__9734 = chunk__7851_9729;
        var G__9735 = count__7852_9730;
        var G__9736 = i__7853_9731 + 1;
        seq__7850_9728 = G__9733;
        chunk__7851_9729 = G__9734;
        count__7852_9730 = G__9735;
        i__7853_9731 = G__9736;
        continue;
      } else {
        var temp__4126__auto___9737 = cljs.core.seq.call(null, seq__7850_9728);
        if (temp__4126__auto___9737) {
          var seq__7850_9738__$1 = temp__4126__auto___9737;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7850_9738__$1)) {
            var c__4408__auto___9739 = cljs.core.chunk_first.call(null, seq__7850_9738__$1);
            var G__9740 = cljs.core.chunk_rest.call(null, seq__7850_9738__$1);
            var G__9741 = c__4408__auto___9739;
            var G__9742 = cljs.core.count.call(null, c__4408__auto___9739);
            var G__9743 = 0;
            seq__7850_9728 = G__9740;
            chunk__7851_9729 = G__9741;
            count__7852_9730 = G__9742;
            i__7853_9731 = G__9743;
            continue;
          } else {
            var arg__5130__auto___9744 = cljs.core.first.call(null, seq__7850_9738__$1);
            a__5129__auto__.push(arg__5130__auto___9744);
            var G__9745 = cljs.core.next.call(null, seq__7850_9738__$1);
            var G__9746 = null;
            var G__9747 = 0;
            var G__9748 = 0;
            seq__7850_9728 = G__9745;
            chunk__7851_9729 = G__9746;
            count__7852_9730 = G__9747;
            i__7853_9731 = G__9748;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.noscript.apply(null, a__5129__auto__);
  };
  var noscript = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return noscript__delegate.call(this, args__5128__auto__);
  };
  noscript.cljs$lang$maxFixedArity = 0;
  noscript.cljs$lang$applyTo = function(arglist__9749) {
    var args__5128__auto__ = cljs.core.seq(arglist__9749);
    return noscript__delegate(args__5128__auto__);
  };
  noscript.cljs$core$IFn$_invoke$arity$variadic = noscript__delegate;
  return noscript;
}();
quiescent.dom.object = function() {
  var object__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7858_9750 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7859_9751 = null;
    var count__7860_9752 = 0;
    var i__7861_9753 = 0;
    while (true) {
      if (i__7861_9753 < count__7860_9752) {
        var arg__5130__auto___9754 = cljs.core._nth.call(null, chunk__7859_9751, i__7861_9753);
        a__5129__auto__.push(arg__5130__auto___9754);
        var G__9755 = seq__7858_9750;
        var G__9756 = chunk__7859_9751;
        var G__9757 = count__7860_9752;
        var G__9758 = i__7861_9753 + 1;
        seq__7858_9750 = G__9755;
        chunk__7859_9751 = G__9756;
        count__7860_9752 = G__9757;
        i__7861_9753 = G__9758;
        continue;
      } else {
        var temp__4126__auto___9759 = cljs.core.seq.call(null, seq__7858_9750);
        if (temp__4126__auto___9759) {
          var seq__7858_9760__$1 = temp__4126__auto___9759;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7858_9760__$1)) {
            var c__4408__auto___9761 = cljs.core.chunk_first.call(null, seq__7858_9760__$1);
            var G__9762 = cljs.core.chunk_rest.call(null, seq__7858_9760__$1);
            var G__9763 = c__4408__auto___9761;
            var G__9764 = cljs.core.count.call(null, c__4408__auto___9761);
            var G__9765 = 0;
            seq__7858_9750 = G__9762;
            chunk__7859_9751 = G__9763;
            count__7860_9752 = G__9764;
            i__7861_9753 = G__9765;
            continue;
          } else {
            var arg__5130__auto___9766 = cljs.core.first.call(null, seq__7858_9760__$1);
            a__5129__auto__.push(arg__5130__auto___9766);
            var G__9767 = cljs.core.next.call(null, seq__7858_9760__$1);
            var G__9768 = null;
            var G__9769 = 0;
            var G__9770 = 0;
            seq__7858_9750 = G__9767;
            chunk__7859_9751 = G__9768;
            count__7860_9752 = G__9769;
            i__7861_9753 = G__9770;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.object.apply(null, a__5129__auto__);
  };
  var object = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return object__delegate.call(this, args__5128__auto__);
  };
  object.cljs$lang$maxFixedArity = 0;
  object.cljs$lang$applyTo = function(arglist__9771) {
    var args__5128__auto__ = cljs.core.seq(arglist__9771);
    return object__delegate(args__5128__auto__);
  };
  object.cljs$core$IFn$_invoke$arity$variadic = object__delegate;
  return object;
}();
quiescent.dom.ol = function() {
  var ol__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7866_9772 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7867_9773 = null;
    var count__7868_9774 = 0;
    var i__7869_9775 = 0;
    while (true) {
      if (i__7869_9775 < count__7868_9774) {
        var arg__5130__auto___9776 = cljs.core._nth.call(null, chunk__7867_9773, i__7869_9775);
        a__5129__auto__.push(arg__5130__auto___9776);
        var G__9777 = seq__7866_9772;
        var G__9778 = chunk__7867_9773;
        var G__9779 = count__7868_9774;
        var G__9780 = i__7869_9775 + 1;
        seq__7866_9772 = G__9777;
        chunk__7867_9773 = G__9778;
        count__7868_9774 = G__9779;
        i__7869_9775 = G__9780;
        continue;
      } else {
        var temp__4126__auto___9781 = cljs.core.seq.call(null, seq__7866_9772);
        if (temp__4126__auto___9781) {
          var seq__7866_9782__$1 = temp__4126__auto___9781;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7866_9782__$1)) {
            var c__4408__auto___9783 = cljs.core.chunk_first.call(null, seq__7866_9782__$1);
            var G__9784 = cljs.core.chunk_rest.call(null, seq__7866_9782__$1);
            var G__9785 = c__4408__auto___9783;
            var G__9786 = cljs.core.count.call(null, c__4408__auto___9783);
            var G__9787 = 0;
            seq__7866_9772 = G__9784;
            chunk__7867_9773 = G__9785;
            count__7868_9774 = G__9786;
            i__7869_9775 = G__9787;
            continue;
          } else {
            var arg__5130__auto___9788 = cljs.core.first.call(null, seq__7866_9782__$1);
            a__5129__auto__.push(arg__5130__auto___9788);
            var G__9789 = cljs.core.next.call(null, seq__7866_9782__$1);
            var G__9790 = null;
            var G__9791 = 0;
            var G__9792 = 0;
            seq__7866_9772 = G__9789;
            chunk__7867_9773 = G__9790;
            count__7868_9774 = G__9791;
            i__7869_9775 = G__9792;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.ol.apply(null, a__5129__auto__);
  };
  var ol = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return ol__delegate.call(this, args__5128__auto__);
  };
  ol.cljs$lang$maxFixedArity = 0;
  ol.cljs$lang$applyTo = function(arglist__9793) {
    var args__5128__auto__ = cljs.core.seq(arglist__9793);
    return ol__delegate(args__5128__auto__);
  };
  ol.cljs$core$IFn$_invoke$arity$variadic = ol__delegate;
  return ol;
}();
quiescent.dom.optgroup = function() {
  var optgroup__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7874_9794 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7875_9795 = null;
    var count__7876_9796 = 0;
    var i__7877_9797 = 0;
    while (true) {
      if (i__7877_9797 < count__7876_9796) {
        var arg__5130__auto___9798 = cljs.core._nth.call(null, chunk__7875_9795, i__7877_9797);
        a__5129__auto__.push(arg__5130__auto___9798);
        var G__9799 = seq__7874_9794;
        var G__9800 = chunk__7875_9795;
        var G__9801 = count__7876_9796;
        var G__9802 = i__7877_9797 + 1;
        seq__7874_9794 = G__9799;
        chunk__7875_9795 = G__9800;
        count__7876_9796 = G__9801;
        i__7877_9797 = G__9802;
        continue;
      } else {
        var temp__4126__auto___9803 = cljs.core.seq.call(null, seq__7874_9794);
        if (temp__4126__auto___9803) {
          var seq__7874_9804__$1 = temp__4126__auto___9803;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7874_9804__$1)) {
            var c__4408__auto___9805 = cljs.core.chunk_first.call(null, seq__7874_9804__$1);
            var G__9806 = cljs.core.chunk_rest.call(null, seq__7874_9804__$1);
            var G__9807 = c__4408__auto___9805;
            var G__9808 = cljs.core.count.call(null, c__4408__auto___9805);
            var G__9809 = 0;
            seq__7874_9794 = G__9806;
            chunk__7875_9795 = G__9807;
            count__7876_9796 = G__9808;
            i__7877_9797 = G__9809;
            continue;
          } else {
            var arg__5130__auto___9810 = cljs.core.first.call(null, seq__7874_9804__$1);
            a__5129__auto__.push(arg__5130__auto___9810);
            var G__9811 = cljs.core.next.call(null, seq__7874_9804__$1);
            var G__9812 = null;
            var G__9813 = 0;
            var G__9814 = 0;
            seq__7874_9794 = G__9811;
            chunk__7875_9795 = G__9812;
            count__7876_9796 = G__9813;
            i__7877_9797 = G__9814;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.optgroup.apply(null, a__5129__auto__);
  };
  var optgroup = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return optgroup__delegate.call(this, args__5128__auto__);
  };
  optgroup.cljs$lang$maxFixedArity = 0;
  optgroup.cljs$lang$applyTo = function(arglist__9815) {
    var args__5128__auto__ = cljs.core.seq(arglist__9815);
    return optgroup__delegate(args__5128__auto__);
  };
  optgroup.cljs$core$IFn$_invoke$arity$variadic = optgroup__delegate;
  return optgroup;
}();
quiescent.dom.option = function() {
  var option__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7882_9816 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7883_9817 = null;
    var count__7884_9818 = 0;
    var i__7885_9819 = 0;
    while (true) {
      if (i__7885_9819 < count__7884_9818) {
        var arg__5130__auto___9820 = cljs.core._nth.call(null, chunk__7883_9817, i__7885_9819);
        a__5129__auto__.push(arg__5130__auto___9820);
        var G__9821 = seq__7882_9816;
        var G__9822 = chunk__7883_9817;
        var G__9823 = count__7884_9818;
        var G__9824 = i__7885_9819 + 1;
        seq__7882_9816 = G__9821;
        chunk__7883_9817 = G__9822;
        count__7884_9818 = G__9823;
        i__7885_9819 = G__9824;
        continue;
      } else {
        var temp__4126__auto___9825 = cljs.core.seq.call(null, seq__7882_9816);
        if (temp__4126__auto___9825) {
          var seq__7882_9826__$1 = temp__4126__auto___9825;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7882_9826__$1)) {
            var c__4408__auto___9827 = cljs.core.chunk_first.call(null, seq__7882_9826__$1);
            var G__9828 = cljs.core.chunk_rest.call(null, seq__7882_9826__$1);
            var G__9829 = c__4408__auto___9827;
            var G__9830 = cljs.core.count.call(null, c__4408__auto___9827);
            var G__9831 = 0;
            seq__7882_9816 = G__9828;
            chunk__7883_9817 = G__9829;
            count__7884_9818 = G__9830;
            i__7885_9819 = G__9831;
            continue;
          } else {
            var arg__5130__auto___9832 = cljs.core.first.call(null, seq__7882_9826__$1);
            a__5129__auto__.push(arg__5130__auto___9832);
            var G__9833 = cljs.core.next.call(null, seq__7882_9826__$1);
            var G__9834 = null;
            var G__9835 = 0;
            var G__9836 = 0;
            seq__7882_9816 = G__9833;
            chunk__7883_9817 = G__9834;
            count__7884_9818 = G__9835;
            i__7885_9819 = G__9836;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.option.apply(null, a__5129__auto__);
  };
  var option = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return option__delegate.call(this, args__5128__auto__);
  };
  option.cljs$lang$maxFixedArity = 0;
  option.cljs$lang$applyTo = function(arglist__9837) {
    var args__5128__auto__ = cljs.core.seq(arglist__9837);
    return option__delegate(args__5128__auto__);
  };
  option.cljs$core$IFn$_invoke$arity$variadic = option__delegate;
  return option;
}();
quiescent.dom.output = function() {
  var output__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7890_9838 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7891_9839 = null;
    var count__7892_9840 = 0;
    var i__7893_9841 = 0;
    while (true) {
      if (i__7893_9841 < count__7892_9840) {
        var arg__5130__auto___9842 = cljs.core._nth.call(null, chunk__7891_9839, i__7893_9841);
        a__5129__auto__.push(arg__5130__auto___9842);
        var G__9843 = seq__7890_9838;
        var G__9844 = chunk__7891_9839;
        var G__9845 = count__7892_9840;
        var G__9846 = i__7893_9841 + 1;
        seq__7890_9838 = G__9843;
        chunk__7891_9839 = G__9844;
        count__7892_9840 = G__9845;
        i__7893_9841 = G__9846;
        continue;
      } else {
        var temp__4126__auto___9847 = cljs.core.seq.call(null, seq__7890_9838);
        if (temp__4126__auto___9847) {
          var seq__7890_9848__$1 = temp__4126__auto___9847;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7890_9848__$1)) {
            var c__4408__auto___9849 = cljs.core.chunk_first.call(null, seq__7890_9848__$1);
            var G__9850 = cljs.core.chunk_rest.call(null, seq__7890_9848__$1);
            var G__9851 = c__4408__auto___9849;
            var G__9852 = cljs.core.count.call(null, c__4408__auto___9849);
            var G__9853 = 0;
            seq__7890_9838 = G__9850;
            chunk__7891_9839 = G__9851;
            count__7892_9840 = G__9852;
            i__7893_9841 = G__9853;
            continue;
          } else {
            var arg__5130__auto___9854 = cljs.core.first.call(null, seq__7890_9848__$1);
            a__5129__auto__.push(arg__5130__auto___9854);
            var G__9855 = cljs.core.next.call(null, seq__7890_9848__$1);
            var G__9856 = null;
            var G__9857 = 0;
            var G__9858 = 0;
            seq__7890_9838 = G__9855;
            chunk__7891_9839 = G__9856;
            count__7892_9840 = G__9857;
            i__7893_9841 = G__9858;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.output.apply(null, a__5129__auto__);
  };
  var output = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return output__delegate.call(this, args__5128__auto__);
  };
  output.cljs$lang$maxFixedArity = 0;
  output.cljs$lang$applyTo = function(arglist__9859) {
    var args__5128__auto__ = cljs.core.seq(arglist__9859);
    return output__delegate(args__5128__auto__);
  };
  output.cljs$core$IFn$_invoke$arity$variadic = output__delegate;
  return output;
}();
quiescent.dom.p = function() {
  var p__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7898_9860 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7899_9861 = null;
    var count__7900_9862 = 0;
    var i__7901_9863 = 0;
    while (true) {
      if (i__7901_9863 < count__7900_9862) {
        var arg__5130__auto___9864 = cljs.core._nth.call(null, chunk__7899_9861, i__7901_9863);
        a__5129__auto__.push(arg__5130__auto___9864);
        var G__9865 = seq__7898_9860;
        var G__9866 = chunk__7899_9861;
        var G__9867 = count__7900_9862;
        var G__9868 = i__7901_9863 + 1;
        seq__7898_9860 = G__9865;
        chunk__7899_9861 = G__9866;
        count__7900_9862 = G__9867;
        i__7901_9863 = G__9868;
        continue;
      } else {
        var temp__4126__auto___9869 = cljs.core.seq.call(null, seq__7898_9860);
        if (temp__4126__auto___9869) {
          var seq__7898_9870__$1 = temp__4126__auto___9869;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7898_9870__$1)) {
            var c__4408__auto___9871 = cljs.core.chunk_first.call(null, seq__7898_9870__$1);
            var G__9872 = cljs.core.chunk_rest.call(null, seq__7898_9870__$1);
            var G__9873 = c__4408__auto___9871;
            var G__9874 = cljs.core.count.call(null, c__4408__auto___9871);
            var G__9875 = 0;
            seq__7898_9860 = G__9872;
            chunk__7899_9861 = G__9873;
            count__7900_9862 = G__9874;
            i__7901_9863 = G__9875;
            continue;
          } else {
            var arg__5130__auto___9876 = cljs.core.first.call(null, seq__7898_9870__$1);
            a__5129__auto__.push(arg__5130__auto___9876);
            var G__9877 = cljs.core.next.call(null, seq__7898_9870__$1);
            var G__9878 = null;
            var G__9879 = 0;
            var G__9880 = 0;
            seq__7898_9860 = G__9877;
            chunk__7899_9861 = G__9878;
            count__7900_9862 = G__9879;
            i__7901_9863 = G__9880;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.p.apply(null, a__5129__auto__);
  };
  var p = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return p__delegate.call(this, args__5128__auto__);
  };
  p.cljs$lang$maxFixedArity = 0;
  p.cljs$lang$applyTo = function(arglist__9881) {
    var args__5128__auto__ = cljs.core.seq(arglist__9881);
    return p__delegate(args__5128__auto__);
  };
  p.cljs$core$IFn$_invoke$arity$variadic = p__delegate;
  return p;
}();
quiescent.dom.param = function() {
  var param__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7906_9882 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7907_9883 = null;
    var count__7908_9884 = 0;
    var i__7909_9885 = 0;
    while (true) {
      if (i__7909_9885 < count__7908_9884) {
        var arg__5130__auto___9886 = cljs.core._nth.call(null, chunk__7907_9883, i__7909_9885);
        a__5129__auto__.push(arg__5130__auto___9886);
        var G__9887 = seq__7906_9882;
        var G__9888 = chunk__7907_9883;
        var G__9889 = count__7908_9884;
        var G__9890 = i__7909_9885 + 1;
        seq__7906_9882 = G__9887;
        chunk__7907_9883 = G__9888;
        count__7908_9884 = G__9889;
        i__7909_9885 = G__9890;
        continue;
      } else {
        var temp__4126__auto___9891 = cljs.core.seq.call(null, seq__7906_9882);
        if (temp__4126__auto___9891) {
          var seq__7906_9892__$1 = temp__4126__auto___9891;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7906_9892__$1)) {
            var c__4408__auto___9893 = cljs.core.chunk_first.call(null, seq__7906_9892__$1);
            var G__9894 = cljs.core.chunk_rest.call(null, seq__7906_9892__$1);
            var G__9895 = c__4408__auto___9893;
            var G__9896 = cljs.core.count.call(null, c__4408__auto___9893);
            var G__9897 = 0;
            seq__7906_9882 = G__9894;
            chunk__7907_9883 = G__9895;
            count__7908_9884 = G__9896;
            i__7909_9885 = G__9897;
            continue;
          } else {
            var arg__5130__auto___9898 = cljs.core.first.call(null, seq__7906_9892__$1);
            a__5129__auto__.push(arg__5130__auto___9898);
            var G__9899 = cljs.core.next.call(null, seq__7906_9892__$1);
            var G__9900 = null;
            var G__9901 = 0;
            var G__9902 = 0;
            seq__7906_9882 = G__9899;
            chunk__7907_9883 = G__9900;
            count__7908_9884 = G__9901;
            i__7909_9885 = G__9902;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.param.apply(null, a__5129__auto__);
  };
  var param = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return param__delegate.call(this, args__5128__auto__);
  };
  param.cljs$lang$maxFixedArity = 0;
  param.cljs$lang$applyTo = function(arglist__9903) {
    var args__5128__auto__ = cljs.core.seq(arglist__9903);
    return param__delegate(args__5128__auto__);
  };
  param.cljs$core$IFn$_invoke$arity$variadic = param__delegate;
  return param;
}();
quiescent.dom.pre = function() {
  var pre__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7914_9904 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7915_9905 = null;
    var count__7916_9906 = 0;
    var i__7917_9907 = 0;
    while (true) {
      if (i__7917_9907 < count__7916_9906) {
        var arg__5130__auto___9908 = cljs.core._nth.call(null, chunk__7915_9905, i__7917_9907);
        a__5129__auto__.push(arg__5130__auto___9908);
        var G__9909 = seq__7914_9904;
        var G__9910 = chunk__7915_9905;
        var G__9911 = count__7916_9906;
        var G__9912 = i__7917_9907 + 1;
        seq__7914_9904 = G__9909;
        chunk__7915_9905 = G__9910;
        count__7916_9906 = G__9911;
        i__7917_9907 = G__9912;
        continue;
      } else {
        var temp__4126__auto___9913 = cljs.core.seq.call(null, seq__7914_9904);
        if (temp__4126__auto___9913) {
          var seq__7914_9914__$1 = temp__4126__auto___9913;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7914_9914__$1)) {
            var c__4408__auto___9915 = cljs.core.chunk_first.call(null, seq__7914_9914__$1);
            var G__9916 = cljs.core.chunk_rest.call(null, seq__7914_9914__$1);
            var G__9917 = c__4408__auto___9915;
            var G__9918 = cljs.core.count.call(null, c__4408__auto___9915);
            var G__9919 = 0;
            seq__7914_9904 = G__9916;
            chunk__7915_9905 = G__9917;
            count__7916_9906 = G__9918;
            i__7917_9907 = G__9919;
            continue;
          } else {
            var arg__5130__auto___9920 = cljs.core.first.call(null, seq__7914_9914__$1);
            a__5129__auto__.push(arg__5130__auto___9920);
            var G__9921 = cljs.core.next.call(null, seq__7914_9914__$1);
            var G__9922 = null;
            var G__9923 = 0;
            var G__9924 = 0;
            seq__7914_9904 = G__9921;
            chunk__7915_9905 = G__9922;
            count__7916_9906 = G__9923;
            i__7917_9907 = G__9924;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.pre.apply(null, a__5129__auto__);
  };
  var pre = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pre__delegate.call(this, args__5128__auto__);
  };
  pre.cljs$lang$maxFixedArity = 0;
  pre.cljs$lang$applyTo = function(arglist__9925) {
    var args__5128__auto__ = cljs.core.seq(arglist__9925);
    return pre__delegate(args__5128__auto__);
  };
  pre.cljs$core$IFn$_invoke$arity$variadic = pre__delegate;
  return pre;
}();
quiescent.dom.progress = function() {
  var progress__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7922_9926 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7923_9927 = null;
    var count__7924_9928 = 0;
    var i__7925_9929 = 0;
    while (true) {
      if (i__7925_9929 < count__7924_9928) {
        var arg__5130__auto___9930 = cljs.core._nth.call(null, chunk__7923_9927, i__7925_9929);
        a__5129__auto__.push(arg__5130__auto___9930);
        var G__9931 = seq__7922_9926;
        var G__9932 = chunk__7923_9927;
        var G__9933 = count__7924_9928;
        var G__9934 = i__7925_9929 + 1;
        seq__7922_9926 = G__9931;
        chunk__7923_9927 = G__9932;
        count__7924_9928 = G__9933;
        i__7925_9929 = G__9934;
        continue;
      } else {
        var temp__4126__auto___9935 = cljs.core.seq.call(null, seq__7922_9926);
        if (temp__4126__auto___9935) {
          var seq__7922_9936__$1 = temp__4126__auto___9935;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7922_9936__$1)) {
            var c__4408__auto___9937 = cljs.core.chunk_first.call(null, seq__7922_9936__$1);
            var G__9938 = cljs.core.chunk_rest.call(null, seq__7922_9936__$1);
            var G__9939 = c__4408__auto___9937;
            var G__9940 = cljs.core.count.call(null, c__4408__auto___9937);
            var G__9941 = 0;
            seq__7922_9926 = G__9938;
            chunk__7923_9927 = G__9939;
            count__7924_9928 = G__9940;
            i__7925_9929 = G__9941;
            continue;
          } else {
            var arg__5130__auto___9942 = cljs.core.first.call(null, seq__7922_9936__$1);
            a__5129__auto__.push(arg__5130__auto___9942);
            var G__9943 = cljs.core.next.call(null, seq__7922_9936__$1);
            var G__9944 = null;
            var G__9945 = 0;
            var G__9946 = 0;
            seq__7922_9926 = G__9943;
            chunk__7923_9927 = G__9944;
            count__7924_9928 = G__9945;
            i__7925_9929 = G__9946;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.progress.apply(null, a__5129__auto__);
  };
  var progress = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return progress__delegate.call(this, args__5128__auto__);
  };
  progress.cljs$lang$maxFixedArity = 0;
  progress.cljs$lang$applyTo = function(arglist__9947) {
    var args__5128__auto__ = cljs.core.seq(arglist__9947);
    return progress__delegate(args__5128__auto__);
  };
  progress.cljs$core$IFn$_invoke$arity$variadic = progress__delegate;
  return progress;
}();
quiescent.dom.q = function() {
  var q__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7930_9948 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7931_9949 = null;
    var count__7932_9950 = 0;
    var i__7933_9951 = 0;
    while (true) {
      if (i__7933_9951 < count__7932_9950) {
        var arg__5130__auto___9952 = cljs.core._nth.call(null, chunk__7931_9949, i__7933_9951);
        a__5129__auto__.push(arg__5130__auto___9952);
        var G__9953 = seq__7930_9948;
        var G__9954 = chunk__7931_9949;
        var G__9955 = count__7932_9950;
        var G__9956 = i__7933_9951 + 1;
        seq__7930_9948 = G__9953;
        chunk__7931_9949 = G__9954;
        count__7932_9950 = G__9955;
        i__7933_9951 = G__9956;
        continue;
      } else {
        var temp__4126__auto___9957 = cljs.core.seq.call(null, seq__7930_9948);
        if (temp__4126__auto___9957) {
          var seq__7930_9958__$1 = temp__4126__auto___9957;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7930_9958__$1)) {
            var c__4408__auto___9959 = cljs.core.chunk_first.call(null, seq__7930_9958__$1);
            var G__9960 = cljs.core.chunk_rest.call(null, seq__7930_9958__$1);
            var G__9961 = c__4408__auto___9959;
            var G__9962 = cljs.core.count.call(null, c__4408__auto___9959);
            var G__9963 = 0;
            seq__7930_9948 = G__9960;
            chunk__7931_9949 = G__9961;
            count__7932_9950 = G__9962;
            i__7933_9951 = G__9963;
            continue;
          } else {
            var arg__5130__auto___9964 = cljs.core.first.call(null, seq__7930_9958__$1);
            a__5129__auto__.push(arg__5130__auto___9964);
            var G__9965 = cljs.core.next.call(null, seq__7930_9958__$1);
            var G__9966 = null;
            var G__9967 = 0;
            var G__9968 = 0;
            seq__7930_9948 = G__9965;
            chunk__7931_9949 = G__9966;
            count__7932_9950 = G__9967;
            i__7933_9951 = G__9968;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.q.apply(null, a__5129__auto__);
  };
  var q = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return q__delegate.call(this, args__5128__auto__);
  };
  q.cljs$lang$maxFixedArity = 0;
  q.cljs$lang$applyTo = function(arglist__9969) {
    var args__5128__auto__ = cljs.core.seq(arglist__9969);
    return q__delegate(args__5128__auto__);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
quiescent.dom.rp = function() {
  var rp__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7938_9970 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7939_9971 = null;
    var count__7940_9972 = 0;
    var i__7941_9973 = 0;
    while (true) {
      if (i__7941_9973 < count__7940_9972) {
        var arg__5130__auto___9974 = cljs.core._nth.call(null, chunk__7939_9971, i__7941_9973);
        a__5129__auto__.push(arg__5130__auto___9974);
        var G__9975 = seq__7938_9970;
        var G__9976 = chunk__7939_9971;
        var G__9977 = count__7940_9972;
        var G__9978 = i__7941_9973 + 1;
        seq__7938_9970 = G__9975;
        chunk__7939_9971 = G__9976;
        count__7940_9972 = G__9977;
        i__7941_9973 = G__9978;
        continue;
      } else {
        var temp__4126__auto___9979 = cljs.core.seq.call(null, seq__7938_9970);
        if (temp__4126__auto___9979) {
          var seq__7938_9980__$1 = temp__4126__auto___9979;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7938_9980__$1)) {
            var c__4408__auto___9981 = cljs.core.chunk_first.call(null, seq__7938_9980__$1);
            var G__9982 = cljs.core.chunk_rest.call(null, seq__7938_9980__$1);
            var G__9983 = c__4408__auto___9981;
            var G__9984 = cljs.core.count.call(null, c__4408__auto___9981);
            var G__9985 = 0;
            seq__7938_9970 = G__9982;
            chunk__7939_9971 = G__9983;
            count__7940_9972 = G__9984;
            i__7941_9973 = G__9985;
            continue;
          } else {
            var arg__5130__auto___9986 = cljs.core.first.call(null, seq__7938_9980__$1);
            a__5129__auto__.push(arg__5130__auto___9986);
            var G__9987 = cljs.core.next.call(null, seq__7938_9980__$1);
            var G__9988 = null;
            var G__9989 = 0;
            var G__9990 = 0;
            seq__7938_9970 = G__9987;
            chunk__7939_9971 = G__9988;
            count__7940_9972 = G__9989;
            i__7941_9973 = G__9990;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.rp.apply(null, a__5129__auto__);
  };
  var rp = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return rp__delegate.call(this, args__5128__auto__);
  };
  rp.cljs$lang$maxFixedArity = 0;
  rp.cljs$lang$applyTo = function(arglist__9991) {
    var args__5128__auto__ = cljs.core.seq(arglist__9991);
    return rp__delegate(args__5128__auto__);
  };
  rp.cljs$core$IFn$_invoke$arity$variadic = rp__delegate;
  return rp;
}();
quiescent.dom.rt = function() {
  var rt__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7946_9992 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7947_9993 = null;
    var count__7948_9994 = 0;
    var i__7949_9995 = 0;
    while (true) {
      if (i__7949_9995 < count__7948_9994) {
        var arg__5130__auto___9996 = cljs.core._nth.call(null, chunk__7947_9993, i__7949_9995);
        a__5129__auto__.push(arg__5130__auto___9996);
        var G__9997 = seq__7946_9992;
        var G__9998 = chunk__7947_9993;
        var G__9999 = count__7948_9994;
        var G__10000 = i__7949_9995 + 1;
        seq__7946_9992 = G__9997;
        chunk__7947_9993 = G__9998;
        count__7948_9994 = G__9999;
        i__7949_9995 = G__10000;
        continue;
      } else {
        var temp__4126__auto___10001 = cljs.core.seq.call(null, seq__7946_9992);
        if (temp__4126__auto___10001) {
          var seq__7946_10002__$1 = temp__4126__auto___10001;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7946_10002__$1)) {
            var c__4408__auto___10003 = cljs.core.chunk_first.call(null, seq__7946_10002__$1);
            var G__10004 = cljs.core.chunk_rest.call(null, seq__7946_10002__$1);
            var G__10005 = c__4408__auto___10003;
            var G__10006 = cljs.core.count.call(null, c__4408__auto___10003);
            var G__10007 = 0;
            seq__7946_9992 = G__10004;
            chunk__7947_9993 = G__10005;
            count__7948_9994 = G__10006;
            i__7949_9995 = G__10007;
            continue;
          } else {
            var arg__5130__auto___10008 = cljs.core.first.call(null, seq__7946_10002__$1);
            a__5129__auto__.push(arg__5130__auto___10008);
            var G__10009 = cljs.core.next.call(null, seq__7946_10002__$1);
            var G__10010 = null;
            var G__10011 = 0;
            var G__10012 = 0;
            seq__7946_9992 = G__10009;
            chunk__7947_9993 = G__10010;
            count__7948_9994 = G__10011;
            i__7949_9995 = G__10012;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.rt.apply(null, a__5129__auto__);
  };
  var rt = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return rt__delegate.call(this, args__5128__auto__);
  };
  rt.cljs$lang$maxFixedArity = 0;
  rt.cljs$lang$applyTo = function(arglist__10013) {
    var args__5128__auto__ = cljs.core.seq(arglist__10013);
    return rt__delegate(args__5128__auto__);
  };
  rt.cljs$core$IFn$_invoke$arity$variadic = rt__delegate;
  return rt;
}();
quiescent.dom.ruby = function() {
  var ruby__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7954_10014 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7955_10015 = null;
    var count__7956_10016 = 0;
    var i__7957_10017 = 0;
    while (true) {
      if (i__7957_10017 < count__7956_10016) {
        var arg__5130__auto___10018 = cljs.core._nth.call(null, chunk__7955_10015, i__7957_10017);
        a__5129__auto__.push(arg__5130__auto___10018);
        var G__10019 = seq__7954_10014;
        var G__10020 = chunk__7955_10015;
        var G__10021 = count__7956_10016;
        var G__10022 = i__7957_10017 + 1;
        seq__7954_10014 = G__10019;
        chunk__7955_10015 = G__10020;
        count__7956_10016 = G__10021;
        i__7957_10017 = G__10022;
        continue;
      } else {
        var temp__4126__auto___10023 = cljs.core.seq.call(null, seq__7954_10014);
        if (temp__4126__auto___10023) {
          var seq__7954_10024__$1 = temp__4126__auto___10023;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7954_10024__$1)) {
            var c__4408__auto___10025 = cljs.core.chunk_first.call(null, seq__7954_10024__$1);
            var G__10026 = cljs.core.chunk_rest.call(null, seq__7954_10024__$1);
            var G__10027 = c__4408__auto___10025;
            var G__10028 = cljs.core.count.call(null, c__4408__auto___10025);
            var G__10029 = 0;
            seq__7954_10014 = G__10026;
            chunk__7955_10015 = G__10027;
            count__7956_10016 = G__10028;
            i__7957_10017 = G__10029;
            continue;
          } else {
            var arg__5130__auto___10030 = cljs.core.first.call(null, seq__7954_10024__$1);
            a__5129__auto__.push(arg__5130__auto___10030);
            var G__10031 = cljs.core.next.call(null, seq__7954_10024__$1);
            var G__10032 = null;
            var G__10033 = 0;
            var G__10034 = 0;
            seq__7954_10014 = G__10031;
            chunk__7955_10015 = G__10032;
            count__7956_10016 = G__10033;
            i__7957_10017 = G__10034;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.ruby.apply(null, a__5129__auto__);
  };
  var ruby = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return ruby__delegate.call(this, args__5128__auto__);
  };
  ruby.cljs$lang$maxFixedArity = 0;
  ruby.cljs$lang$applyTo = function(arglist__10035) {
    var args__5128__auto__ = cljs.core.seq(arglist__10035);
    return ruby__delegate(args__5128__auto__);
  };
  ruby.cljs$core$IFn$_invoke$arity$variadic = ruby__delegate;
  return ruby;
}();
quiescent.dom.s = function() {
  var s__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7962_10036 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7963_10037 = null;
    var count__7964_10038 = 0;
    var i__7965_10039 = 0;
    while (true) {
      if (i__7965_10039 < count__7964_10038) {
        var arg__5130__auto___10040 = cljs.core._nth.call(null, chunk__7963_10037, i__7965_10039);
        a__5129__auto__.push(arg__5130__auto___10040);
        var G__10041 = seq__7962_10036;
        var G__10042 = chunk__7963_10037;
        var G__10043 = count__7964_10038;
        var G__10044 = i__7965_10039 + 1;
        seq__7962_10036 = G__10041;
        chunk__7963_10037 = G__10042;
        count__7964_10038 = G__10043;
        i__7965_10039 = G__10044;
        continue;
      } else {
        var temp__4126__auto___10045 = cljs.core.seq.call(null, seq__7962_10036);
        if (temp__4126__auto___10045) {
          var seq__7962_10046__$1 = temp__4126__auto___10045;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7962_10046__$1)) {
            var c__4408__auto___10047 = cljs.core.chunk_first.call(null, seq__7962_10046__$1);
            var G__10048 = cljs.core.chunk_rest.call(null, seq__7962_10046__$1);
            var G__10049 = c__4408__auto___10047;
            var G__10050 = cljs.core.count.call(null, c__4408__auto___10047);
            var G__10051 = 0;
            seq__7962_10036 = G__10048;
            chunk__7963_10037 = G__10049;
            count__7964_10038 = G__10050;
            i__7965_10039 = G__10051;
            continue;
          } else {
            var arg__5130__auto___10052 = cljs.core.first.call(null, seq__7962_10046__$1);
            a__5129__auto__.push(arg__5130__auto___10052);
            var G__10053 = cljs.core.next.call(null, seq__7962_10046__$1);
            var G__10054 = null;
            var G__10055 = 0;
            var G__10056 = 0;
            seq__7962_10036 = G__10053;
            chunk__7963_10037 = G__10054;
            count__7964_10038 = G__10055;
            i__7965_10039 = G__10056;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.s.apply(null, a__5129__auto__);
  };
  var s = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return s__delegate.call(this, args__5128__auto__);
  };
  s.cljs$lang$maxFixedArity = 0;
  s.cljs$lang$applyTo = function(arglist__10057) {
    var args__5128__auto__ = cljs.core.seq(arglist__10057);
    return s__delegate(args__5128__auto__);
  };
  s.cljs$core$IFn$_invoke$arity$variadic = s__delegate;
  return s;
}();
quiescent.dom.samp = function() {
  var samp__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7970_10058 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7971_10059 = null;
    var count__7972_10060 = 0;
    var i__7973_10061 = 0;
    while (true) {
      if (i__7973_10061 < count__7972_10060) {
        var arg__5130__auto___10062 = cljs.core._nth.call(null, chunk__7971_10059, i__7973_10061);
        a__5129__auto__.push(arg__5130__auto___10062);
        var G__10063 = seq__7970_10058;
        var G__10064 = chunk__7971_10059;
        var G__10065 = count__7972_10060;
        var G__10066 = i__7973_10061 + 1;
        seq__7970_10058 = G__10063;
        chunk__7971_10059 = G__10064;
        count__7972_10060 = G__10065;
        i__7973_10061 = G__10066;
        continue;
      } else {
        var temp__4126__auto___10067 = cljs.core.seq.call(null, seq__7970_10058);
        if (temp__4126__auto___10067) {
          var seq__7970_10068__$1 = temp__4126__auto___10067;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7970_10068__$1)) {
            var c__4408__auto___10069 = cljs.core.chunk_first.call(null, seq__7970_10068__$1);
            var G__10070 = cljs.core.chunk_rest.call(null, seq__7970_10068__$1);
            var G__10071 = c__4408__auto___10069;
            var G__10072 = cljs.core.count.call(null, c__4408__auto___10069);
            var G__10073 = 0;
            seq__7970_10058 = G__10070;
            chunk__7971_10059 = G__10071;
            count__7972_10060 = G__10072;
            i__7973_10061 = G__10073;
            continue;
          } else {
            var arg__5130__auto___10074 = cljs.core.first.call(null, seq__7970_10068__$1);
            a__5129__auto__.push(arg__5130__auto___10074);
            var G__10075 = cljs.core.next.call(null, seq__7970_10068__$1);
            var G__10076 = null;
            var G__10077 = 0;
            var G__10078 = 0;
            seq__7970_10058 = G__10075;
            chunk__7971_10059 = G__10076;
            count__7972_10060 = G__10077;
            i__7973_10061 = G__10078;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.samp.apply(null, a__5129__auto__);
  };
  var samp = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return samp__delegate.call(this, args__5128__auto__);
  };
  samp.cljs$lang$maxFixedArity = 0;
  samp.cljs$lang$applyTo = function(arglist__10079) {
    var args__5128__auto__ = cljs.core.seq(arglist__10079);
    return samp__delegate(args__5128__auto__);
  };
  samp.cljs$core$IFn$_invoke$arity$variadic = samp__delegate;
  return samp;
}();
quiescent.dom.script = function() {
  var script__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7978_10080 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7979_10081 = null;
    var count__7980_10082 = 0;
    var i__7981_10083 = 0;
    while (true) {
      if (i__7981_10083 < count__7980_10082) {
        var arg__5130__auto___10084 = cljs.core._nth.call(null, chunk__7979_10081, i__7981_10083);
        a__5129__auto__.push(arg__5130__auto___10084);
        var G__10085 = seq__7978_10080;
        var G__10086 = chunk__7979_10081;
        var G__10087 = count__7980_10082;
        var G__10088 = i__7981_10083 + 1;
        seq__7978_10080 = G__10085;
        chunk__7979_10081 = G__10086;
        count__7980_10082 = G__10087;
        i__7981_10083 = G__10088;
        continue;
      } else {
        var temp__4126__auto___10089 = cljs.core.seq.call(null, seq__7978_10080);
        if (temp__4126__auto___10089) {
          var seq__7978_10090__$1 = temp__4126__auto___10089;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7978_10090__$1)) {
            var c__4408__auto___10091 = cljs.core.chunk_first.call(null, seq__7978_10090__$1);
            var G__10092 = cljs.core.chunk_rest.call(null, seq__7978_10090__$1);
            var G__10093 = c__4408__auto___10091;
            var G__10094 = cljs.core.count.call(null, c__4408__auto___10091);
            var G__10095 = 0;
            seq__7978_10080 = G__10092;
            chunk__7979_10081 = G__10093;
            count__7980_10082 = G__10094;
            i__7981_10083 = G__10095;
            continue;
          } else {
            var arg__5130__auto___10096 = cljs.core.first.call(null, seq__7978_10090__$1);
            a__5129__auto__.push(arg__5130__auto___10096);
            var G__10097 = cljs.core.next.call(null, seq__7978_10090__$1);
            var G__10098 = null;
            var G__10099 = 0;
            var G__10100 = 0;
            seq__7978_10080 = G__10097;
            chunk__7979_10081 = G__10098;
            count__7980_10082 = G__10099;
            i__7981_10083 = G__10100;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.script.apply(null, a__5129__auto__);
  };
  var script = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return script__delegate.call(this, args__5128__auto__);
  };
  script.cljs$lang$maxFixedArity = 0;
  script.cljs$lang$applyTo = function(arglist__10101) {
    var args__5128__auto__ = cljs.core.seq(arglist__10101);
    return script__delegate(args__5128__auto__);
  };
  script.cljs$core$IFn$_invoke$arity$variadic = script__delegate;
  return script;
}();
quiescent.dom.section = function() {
  var section__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7986_10102 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7987_10103 = null;
    var count__7988_10104 = 0;
    var i__7989_10105 = 0;
    while (true) {
      if (i__7989_10105 < count__7988_10104) {
        var arg__5130__auto___10106 = cljs.core._nth.call(null, chunk__7987_10103, i__7989_10105);
        a__5129__auto__.push(arg__5130__auto___10106);
        var G__10107 = seq__7986_10102;
        var G__10108 = chunk__7987_10103;
        var G__10109 = count__7988_10104;
        var G__10110 = i__7989_10105 + 1;
        seq__7986_10102 = G__10107;
        chunk__7987_10103 = G__10108;
        count__7988_10104 = G__10109;
        i__7989_10105 = G__10110;
        continue;
      } else {
        var temp__4126__auto___10111 = cljs.core.seq.call(null, seq__7986_10102);
        if (temp__4126__auto___10111) {
          var seq__7986_10112__$1 = temp__4126__auto___10111;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7986_10112__$1)) {
            var c__4408__auto___10113 = cljs.core.chunk_first.call(null, seq__7986_10112__$1);
            var G__10114 = cljs.core.chunk_rest.call(null, seq__7986_10112__$1);
            var G__10115 = c__4408__auto___10113;
            var G__10116 = cljs.core.count.call(null, c__4408__auto___10113);
            var G__10117 = 0;
            seq__7986_10102 = G__10114;
            chunk__7987_10103 = G__10115;
            count__7988_10104 = G__10116;
            i__7989_10105 = G__10117;
            continue;
          } else {
            var arg__5130__auto___10118 = cljs.core.first.call(null, seq__7986_10112__$1);
            a__5129__auto__.push(arg__5130__auto___10118);
            var G__10119 = cljs.core.next.call(null, seq__7986_10112__$1);
            var G__10120 = null;
            var G__10121 = 0;
            var G__10122 = 0;
            seq__7986_10102 = G__10119;
            chunk__7987_10103 = G__10120;
            count__7988_10104 = G__10121;
            i__7989_10105 = G__10122;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.section.apply(null, a__5129__auto__);
  };
  var section = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return section__delegate.call(this, args__5128__auto__);
  };
  section.cljs$lang$maxFixedArity = 0;
  section.cljs$lang$applyTo = function(arglist__10123) {
    var args__5128__auto__ = cljs.core.seq(arglist__10123);
    return section__delegate(args__5128__auto__);
  };
  section.cljs$core$IFn$_invoke$arity$variadic = section__delegate;
  return section;
}();
quiescent.dom.select = function() {
  var select__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7994_10124 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7995_10125 = null;
    var count__7996_10126 = 0;
    var i__7997_10127 = 0;
    while (true) {
      if (i__7997_10127 < count__7996_10126) {
        var arg__5130__auto___10128 = cljs.core._nth.call(null, chunk__7995_10125, i__7997_10127);
        a__5129__auto__.push(arg__5130__auto___10128);
        var G__10129 = seq__7994_10124;
        var G__10130 = chunk__7995_10125;
        var G__10131 = count__7996_10126;
        var G__10132 = i__7997_10127 + 1;
        seq__7994_10124 = G__10129;
        chunk__7995_10125 = G__10130;
        count__7996_10126 = G__10131;
        i__7997_10127 = G__10132;
        continue;
      } else {
        var temp__4126__auto___10133 = cljs.core.seq.call(null, seq__7994_10124);
        if (temp__4126__auto___10133) {
          var seq__7994_10134__$1 = temp__4126__auto___10133;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7994_10134__$1)) {
            var c__4408__auto___10135 = cljs.core.chunk_first.call(null, seq__7994_10134__$1);
            var G__10136 = cljs.core.chunk_rest.call(null, seq__7994_10134__$1);
            var G__10137 = c__4408__auto___10135;
            var G__10138 = cljs.core.count.call(null, c__4408__auto___10135);
            var G__10139 = 0;
            seq__7994_10124 = G__10136;
            chunk__7995_10125 = G__10137;
            count__7996_10126 = G__10138;
            i__7997_10127 = G__10139;
            continue;
          } else {
            var arg__5130__auto___10140 = cljs.core.first.call(null, seq__7994_10134__$1);
            a__5129__auto__.push(arg__5130__auto___10140);
            var G__10141 = cljs.core.next.call(null, seq__7994_10134__$1);
            var G__10142 = null;
            var G__10143 = 0;
            var G__10144 = 0;
            seq__7994_10124 = G__10141;
            chunk__7995_10125 = G__10142;
            count__7996_10126 = G__10143;
            i__7997_10127 = G__10144;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.select.apply(null, a__5129__auto__);
  };
  var select = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return select__delegate.call(this, args__5128__auto__);
  };
  select.cljs$lang$maxFixedArity = 0;
  select.cljs$lang$applyTo = function(arglist__10145) {
    var args__5128__auto__ = cljs.core.seq(arglist__10145);
    return select__delegate(args__5128__auto__);
  };
  select.cljs$core$IFn$_invoke$arity$variadic = select__delegate;
  return select;
}();
quiescent.dom.small = function() {
  var small__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8002_10146 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8003_10147 = null;
    var count__8004_10148 = 0;
    var i__8005_10149 = 0;
    while (true) {
      if (i__8005_10149 < count__8004_10148) {
        var arg__5130__auto___10150 = cljs.core._nth.call(null, chunk__8003_10147, i__8005_10149);
        a__5129__auto__.push(arg__5130__auto___10150);
        var G__10151 = seq__8002_10146;
        var G__10152 = chunk__8003_10147;
        var G__10153 = count__8004_10148;
        var G__10154 = i__8005_10149 + 1;
        seq__8002_10146 = G__10151;
        chunk__8003_10147 = G__10152;
        count__8004_10148 = G__10153;
        i__8005_10149 = G__10154;
        continue;
      } else {
        var temp__4126__auto___10155 = cljs.core.seq.call(null, seq__8002_10146);
        if (temp__4126__auto___10155) {
          var seq__8002_10156__$1 = temp__4126__auto___10155;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8002_10156__$1)) {
            var c__4408__auto___10157 = cljs.core.chunk_first.call(null, seq__8002_10156__$1);
            var G__10158 = cljs.core.chunk_rest.call(null, seq__8002_10156__$1);
            var G__10159 = c__4408__auto___10157;
            var G__10160 = cljs.core.count.call(null, c__4408__auto___10157);
            var G__10161 = 0;
            seq__8002_10146 = G__10158;
            chunk__8003_10147 = G__10159;
            count__8004_10148 = G__10160;
            i__8005_10149 = G__10161;
            continue;
          } else {
            var arg__5130__auto___10162 = cljs.core.first.call(null, seq__8002_10156__$1);
            a__5129__auto__.push(arg__5130__auto___10162);
            var G__10163 = cljs.core.next.call(null, seq__8002_10156__$1);
            var G__10164 = null;
            var G__10165 = 0;
            var G__10166 = 0;
            seq__8002_10146 = G__10163;
            chunk__8003_10147 = G__10164;
            count__8004_10148 = G__10165;
            i__8005_10149 = G__10166;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.small.apply(null, a__5129__auto__);
  };
  var small = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return small__delegate.call(this, args__5128__auto__);
  };
  small.cljs$lang$maxFixedArity = 0;
  small.cljs$lang$applyTo = function(arglist__10167) {
    var args__5128__auto__ = cljs.core.seq(arglist__10167);
    return small__delegate(args__5128__auto__);
  };
  small.cljs$core$IFn$_invoke$arity$variadic = small__delegate;
  return small;
}();
quiescent.dom.source = function() {
  var source__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8010_10168 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8011_10169 = null;
    var count__8012_10170 = 0;
    var i__8013_10171 = 0;
    while (true) {
      if (i__8013_10171 < count__8012_10170) {
        var arg__5130__auto___10172 = cljs.core._nth.call(null, chunk__8011_10169, i__8013_10171);
        a__5129__auto__.push(arg__5130__auto___10172);
        var G__10173 = seq__8010_10168;
        var G__10174 = chunk__8011_10169;
        var G__10175 = count__8012_10170;
        var G__10176 = i__8013_10171 + 1;
        seq__8010_10168 = G__10173;
        chunk__8011_10169 = G__10174;
        count__8012_10170 = G__10175;
        i__8013_10171 = G__10176;
        continue;
      } else {
        var temp__4126__auto___10177 = cljs.core.seq.call(null, seq__8010_10168);
        if (temp__4126__auto___10177) {
          var seq__8010_10178__$1 = temp__4126__auto___10177;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8010_10178__$1)) {
            var c__4408__auto___10179 = cljs.core.chunk_first.call(null, seq__8010_10178__$1);
            var G__10180 = cljs.core.chunk_rest.call(null, seq__8010_10178__$1);
            var G__10181 = c__4408__auto___10179;
            var G__10182 = cljs.core.count.call(null, c__4408__auto___10179);
            var G__10183 = 0;
            seq__8010_10168 = G__10180;
            chunk__8011_10169 = G__10181;
            count__8012_10170 = G__10182;
            i__8013_10171 = G__10183;
            continue;
          } else {
            var arg__5130__auto___10184 = cljs.core.first.call(null, seq__8010_10178__$1);
            a__5129__auto__.push(arg__5130__auto___10184);
            var G__10185 = cljs.core.next.call(null, seq__8010_10178__$1);
            var G__10186 = null;
            var G__10187 = 0;
            var G__10188 = 0;
            seq__8010_10168 = G__10185;
            chunk__8011_10169 = G__10186;
            count__8012_10170 = G__10187;
            i__8013_10171 = G__10188;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.source.apply(null, a__5129__auto__);
  };
  var source = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return source__delegate.call(this, args__5128__auto__);
  };
  source.cljs$lang$maxFixedArity = 0;
  source.cljs$lang$applyTo = function(arglist__10189) {
    var args__5128__auto__ = cljs.core.seq(arglist__10189);
    return source__delegate(args__5128__auto__);
  };
  source.cljs$core$IFn$_invoke$arity$variadic = source__delegate;
  return source;
}();
quiescent.dom.span = function() {
  var span__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8018_10190 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8019_10191 = null;
    var count__8020_10192 = 0;
    var i__8021_10193 = 0;
    while (true) {
      if (i__8021_10193 < count__8020_10192) {
        var arg__5130__auto___10194 = cljs.core._nth.call(null, chunk__8019_10191, i__8021_10193);
        a__5129__auto__.push(arg__5130__auto___10194);
        var G__10195 = seq__8018_10190;
        var G__10196 = chunk__8019_10191;
        var G__10197 = count__8020_10192;
        var G__10198 = i__8021_10193 + 1;
        seq__8018_10190 = G__10195;
        chunk__8019_10191 = G__10196;
        count__8020_10192 = G__10197;
        i__8021_10193 = G__10198;
        continue;
      } else {
        var temp__4126__auto___10199 = cljs.core.seq.call(null, seq__8018_10190);
        if (temp__4126__auto___10199) {
          var seq__8018_10200__$1 = temp__4126__auto___10199;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8018_10200__$1)) {
            var c__4408__auto___10201 = cljs.core.chunk_first.call(null, seq__8018_10200__$1);
            var G__10202 = cljs.core.chunk_rest.call(null, seq__8018_10200__$1);
            var G__10203 = c__4408__auto___10201;
            var G__10204 = cljs.core.count.call(null, c__4408__auto___10201);
            var G__10205 = 0;
            seq__8018_10190 = G__10202;
            chunk__8019_10191 = G__10203;
            count__8020_10192 = G__10204;
            i__8021_10193 = G__10205;
            continue;
          } else {
            var arg__5130__auto___10206 = cljs.core.first.call(null, seq__8018_10200__$1);
            a__5129__auto__.push(arg__5130__auto___10206);
            var G__10207 = cljs.core.next.call(null, seq__8018_10200__$1);
            var G__10208 = null;
            var G__10209 = 0;
            var G__10210 = 0;
            seq__8018_10190 = G__10207;
            chunk__8019_10191 = G__10208;
            count__8020_10192 = G__10209;
            i__8021_10193 = G__10210;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.span.apply(null, a__5129__auto__);
  };
  var span = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return span__delegate.call(this, args__5128__auto__);
  };
  span.cljs$lang$maxFixedArity = 0;
  span.cljs$lang$applyTo = function(arglist__10211) {
    var args__5128__auto__ = cljs.core.seq(arglist__10211);
    return span__delegate(args__5128__auto__);
  };
  span.cljs$core$IFn$_invoke$arity$variadic = span__delegate;
  return span;
}();
quiescent.dom.strong = function() {
  var strong__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8026_10212 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8027_10213 = null;
    var count__8028_10214 = 0;
    var i__8029_10215 = 0;
    while (true) {
      if (i__8029_10215 < count__8028_10214) {
        var arg__5130__auto___10216 = cljs.core._nth.call(null, chunk__8027_10213, i__8029_10215);
        a__5129__auto__.push(arg__5130__auto___10216);
        var G__10217 = seq__8026_10212;
        var G__10218 = chunk__8027_10213;
        var G__10219 = count__8028_10214;
        var G__10220 = i__8029_10215 + 1;
        seq__8026_10212 = G__10217;
        chunk__8027_10213 = G__10218;
        count__8028_10214 = G__10219;
        i__8029_10215 = G__10220;
        continue;
      } else {
        var temp__4126__auto___10221 = cljs.core.seq.call(null, seq__8026_10212);
        if (temp__4126__auto___10221) {
          var seq__8026_10222__$1 = temp__4126__auto___10221;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8026_10222__$1)) {
            var c__4408__auto___10223 = cljs.core.chunk_first.call(null, seq__8026_10222__$1);
            var G__10224 = cljs.core.chunk_rest.call(null, seq__8026_10222__$1);
            var G__10225 = c__4408__auto___10223;
            var G__10226 = cljs.core.count.call(null, c__4408__auto___10223);
            var G__10227 = 0;
            seq__8026_10212 = G__10224;
            chunk__8027_10213 = G__10225;
            count__8028_10214 = G__10226;
            i__8029_10215 = G__10227;
            continue;
          } else {
            var arg__5130__auto___10228 = cljs.core.first.call(null, seq__8026_10222__$1);
            a__5129__auto__.push(arg__5130__auto___10228);
            var G__10229 = cljs.core.next.call(null, seq__8026_10222__$1);
            var G__10230 = null;
            var G__10231 = 0;
            var G__10232 = 0;
            seq__8026_10212 = G__10229;
            chunk__8027_10213 = G__10230;
            count__8028_10214 = G__10231;
            i__8029_10215 = G__10232;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.strong.apply(null, a__5129__auto__);
  };
  var strong = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return strong__delegate.call(this, args__5128__auto__);
  };
  strong.cljs$lang$maxFixedArity = 0;
  strong.cljs$lang$applyTo = function(arglist__10233) {
    var args__5128__auto__ = cljs.core.seq(arglist__10233);
    return strong__delegate(args__5128__auto__);
  };
  strong.cljs$core$IFn$_invoke$arity$variadic = strong__delegate;
  return strong;
}();
quiescent.dom.style = function() {
  var style__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8034_10234 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8035_10235 = null;
    var count__8036_10236 = 0;
    var i__8037_10237 = 0;
    while (true) {
      if (i__8037_10237 < count__8036_10236) {
        var arg__5130__auto___10238 = cljs.core._nth.call(null, chunk__8035_10235, i__8037_10237);
        a__5129__auto__.push(arg__5130__auto___10238);
        var G__10239 = seq__8034_10234;
        var G__10240 = chunk__8035_10235;
        var G__10241 = count__8036_10236;
        var G__10242 = i__8037_10237 + 1;
        seq__8034_10234 = G__10239;
        chunk__8035_10235 = G__10240;
        count__8036_10236 = G__10241;
        i__8037_10237 = G__10242;
        continue;
      } else {
        var temp__4126__auto___10243 = cljs.core.seq.call(null, seq__8034_10234);
        if (temp__4126__auto___10243) {
          var seq__8034_10244__$1 = temp__4126__auto___10243;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8034_10244__$1)) {
            var c__4408__auto___10245 = cljs.core.chunk_first.call(null, seq__8034_10244__$1);
            var G__10246 = cljs.core.chunk_rest.call(null, seq__8034_10244__$1);
            var G__10247 = c__4408__auto___10245;
            var G__10248 = cljs.core.count.call(null, c__4408__auto___10245);
            var G__10249 = 0;
            seq__8034_10234 = G__10246;
            chunk__8035_10235 = G__10247;
            count__8036_10236 = G__10248;
            i__8037_10237 = G__10249;
            continue;
          } else {
            var arg__5130__auto___10250 = cljs.core.first.call(null, seq__8034_10244__$1);
            a__5129__auto__.push(arg__5130__auto___10250);
            var G__10251 = cljs.core.next.call(null, seq__8034_10244__$1);
            var G__10252 = null;
            var G__10253 = 0;
            var G__10254 = 0;
            seq__8034_10234 = G__10251;
            chunk__8035_10235 = G__10252;
            count__8036_10236 = G__10253;
            i__8037_10237 = G__10254;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.style.apply(null, a__5129__auto__);
  };
  var style = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return style__delegate.call(this, args__5128__auto__);
  };
  style.cljs$lang$maxFixedArity = 0;
  style.cljs$lang$applyTo = function(arglist__10255) {
    var args__5128__auto__ = cljs.core.seq(arglist__10255);
    return style__delegate(args__5128__auto__);
  };
  style.cljs$core$IFn$_invoke$arity$variadic = style__delegate;
  return style;
}();
quiescent.dom.sub = function() {
  var sub__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8042_10256 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8043_10257 = null;
    var count__8044_10258 = 0;
    var i__8045_10259 = 0;
    while (true) {
      if (i__8045_10259 < count__8044_10258) {
        var arg__5130__auto___10260 = cljs.core._nth.call(null, chunk__8043_10257, i__8045_10259);
        a__5129__auto__.push(arg__5130__auto___10260);
        var G__10261 = seq__8042_10256;
        var G__10262 = chunk__8043_10257;
        var G__10263 = count__8044_10258;
        var G__10264 = i__8045_10259 + 1;
        seq__8042_10256 = G__10261;
        chunk__8043_10257 = G__10262;
        count__8044_10258 = G__10263;
        i__8045_10259 = G__10264;
        continue;
      } else {
        var temp__4126__auto___10265 = cljs.core.seq.call(null, seq__8042_10256);
        if (temp__4126__auto___10265) {
          var seq__8042_10266__$1 = temp__4126__auto___10265;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8042_10266__$1)) {
            var c__4408__auto___10267 = cljs.core.chunk_first.call(null, seq__8042_10266__$1);
            var G__10268 = cljs.core.chunk_rest.call(null, seq__8042_10266__$1);
            var G__10269 = c__4408__auto___10267;
            var G__10270 = cljs.core.count.call(null, c__4408__auto___10267);
            var G__10271 = 0;
            seq__8042_10256 = G__10268;
            chunk__8043_10257 = G__10269;
            count__8044_10258 = G__10270;
            i__8045_10259 = G__10271;
            continue;
          } else {
            var arg__5130__auto___10272 = cljs.core.first.call(null, seq__8042_10266__$1);
            a__5129__auto__.push(arg__5130__auto___10272);
            var G__10273 = cljs.core.next.call(null, seq__8042_10266__$1);
            var G__10274 = null;
            var G__10275 = 0;
            var G__10276 = 0;
            seq__8042_10256 = G__10273;
            chunk__8043_10257 = G__10274;
            count__8044_10258 = G__10275;
            i__8045_10259 = G__10276;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.sub.apply(null, a__5129__auto__);
  };
  var sub = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sub__delegate.call(this, args__5128__auto__);
  };
  sub.cljs$lang$maxFixedArity = 0;
  sub.cljs$lang$applyTo = function(arglist__10277) {
    var args__5128__auto__ = cljs.core.seq(arglist__10277);
    return sub__delegate(args__5128__auto__);
  };
  sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
  return sub;
}();
quiescent.dom.summary = function() {
  var summary__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8050_10278 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8051_10279 = null;
    var count__8052_10280 = 0;
    var i__8053_10281 = 0;
    while (true) {
      if (i__8053_10281 < count__8052_10280) {
        var arg__5130__auto___10282 = cljs.core._nth.call(null, chunk__8051_10279, i__8053_10281);
        a__5129__auto__.push(arg__5130__auto___10282);
        var G__10283 = seq__8050_10278;
        var G__10284 = chunk__8051_10279;
        var G__10285 = count__8052_10280;
        var G__10286 = i__8053_10281 + 1;
        seq__8050_10278 = G__10283;
        chunk__8051_10279 = G__10284;
        count__8052_10280 = G__10285;
        i__8053_10281 = G__10286;
        continue;
      } else {
        var temp__4126__auto___10287 = cljs.core.seq.call(null, seq__8050_10278);
        if (temp__4126__auto___10287) {
          var seq__8050_10288__$1 = temp__4126__auto___10287;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8050_10288__$1)) {
            var c__4408__auto___10289 = cljs.core.chunk_first.call(null, seq__8050_10288__$1);
            var G__10290 = cljs.core.chunk_rest.call(null, seq__8050_10288__$1);
            var G__10291 = c__4408__auto___10289;
            var G__10292 = cljs.core.count.call(null, c__4408__auto___10289);
            var G__10293 = 0;
            seq__8050_10278 = G__10290;
            chunk__8051_10279 = G__10291;
            count__8052_10280 = G__10292;
            i__8053_10281 = G__10293;
            continue;
          } else {
            var arg__5130__auto___10294 = cljs.core.first.call(null, seq__8050_10288__$1);
            a__5129__auto__.push(arg__5130__auto___10294);
            var G__10295 = cljs.core.next.call(null, seq__8050_10288__$1);
            var G__10296 = null;
            var G__10297 = 0;
            var G__10298 = 0;
            seq__8050_10278 = G__10295;
            chunk__8051_10279 = G__10296;
            count__8052_10280 = G__10297;
            i__8053_10281 = G__10298;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.summary.apply(null, a__5129__auto__);
  };
  var summary = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return summary__delegate.call(this, args__5128__auto__);
  };
  summary.cljs$lang$maxFixedArity = 0;
  summary.cljs$lang$applyTo = function(arglist__10299) {
    var args__5128__auto__ = cljs.core.seq(arglist__10299);
    return summary__delegate(args__5128__auto__);
  };
  summary.cljs$core$IFn$_invoke$arity$variadic = summary__delegate;
  return summary;
}();
quiescent.dom.sup = function() {
  var sup__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8058_10300 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8059_10301 = null;
    var count__8060_10302 = 0;
    var i__8061_10303 = 0;
    while (true) {
      if (i__8061_10303 < count__8060_10302) {
        var arg__5130__auto___10304 = cljs.core._nth.call(null, chunk__8059_10301, i__8061_10303);
        a__5129__auto__.push(arg__5130__auto___10304);
        var G__10305 = seq__8058_10300;
        var G__10306 = chunk__8059_10301;
        var G__10307 = count__8060_10302;
        var G__10308 = i__8061_10303 + 1;
        seq__8058_10300 = G__10305;
        chunk__8059_10301 = G__10306;
        count__8060_10302 = G__10307;
        i__8061_10303 = G__10308;
        continue;
      } else {
        var temp__4126__auto___10309 = cljs.core.seq.call(null, seq__8058_10300);
        if (temp__4126__auto___10309) {
          var seq__8058_10310__$1 = temp__4126__auto___10309;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8058_10310__$1)) {
            var c__4408__auto___10311 = cljs.core.chunk_first.call(null, seq__8058_10310__$1);
            var G__10312 = cljs.core.chunk_rest.call(null, seq__8058_10310__$1);
            var G__10313 = c__4408__auto___10311;
            var G__10314 = cljs.core.count.call(null, c__4408__auto___10311);
            var G__10315 = 0;
            seq__8058_10300 = G__10312;
            chunk__8059_10301 = G__10313;
            count__8060_10302 = G__10314;
            i__8061_10303 = G__10315;
            continue;
          } else {
            var arg__5130__auto___10316 = cljs.core.first.call(null, seq__8058_10310__$1);
            a__5129__auto__.push(arg__5130__auto___10316);
            var G__10317 = cljs.core.next.call(null, seq__8058_10310__$1);
            var G__10318 = null;
            var G__10319 = 0;
            var G__10320 = 0;
            seq__8058_10300 = G__10317;
            chunk__8059_10301 = G__10318;
            count__8060_10302 = G__10319;
            i__8061_10303 = G__10320;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.sup.apply(null, a__5129__auto__);
  };
  var sup = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sup__delegate.call(this, args__5128__auto__);
  };
  sup.cljs$lang$maxFixedArity = 0;
  sup.cljs$lang$applyTo = function(arglist__10321) {
    var args__5128__auto__ = cljs.core.seq(arglist__10321);
    return sup__delegate(args__5128__auto__);
  };
  sup.cljs$core$IFn$_invoke$arity$variadic = sup__delegate;
  return sup;
}();
quiescent.dom.table = function() {
  var table__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8066_10322 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8067_10323 = null;
    var count__8068_10324 = 0;
    var i__8069_10325 = 0;
    while (true) {
      if (i__8069_10325 < count__8068_10324) {
        var arg__5130__auto___10326 = cljs.core._nth.call(null, chunk__8067_10323, i__8069_10325);
        a__5129__auto__.push(arg__5130__auto___10326);
        var G__10327 = seq__8066_10322;
        var G__10328 = chunk__8067_10323;
        var G__10329 = count__8068_10324;
        var G__10330 = i__8069_10325 + 1;
        seq__8066_10322 = G__10327;
        chunk__8067_10323 = G__10328;
        count__8068_10324 = G__10329;
        i__8069_10325 = G__10330;
        continue;
      } else {
        var temp__4126__auto___10331 = cljs.core.seq.call(null, seq__8066_10322);
        if (temp__4126__auto___10331) {
          var seq__8066_10332__$1 = temp__4126__auto___10331;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8066_10332__$1)) {
            var c__4408__auto___10333 = cljs.core.chunk_first.call(null, seq__8066_10332__$1);
            var G__10334 = cljs.core.chunk_rest.call(null, seq__8066_10332__$1);
            var G__10335 = c__4408__auto___10333;
            var G__10336 = cljs.core.count.call(null, c__4408__auto___10333);
            var G__10337 = 0;
            seq__8066_10322 = G__10334;
            chunk__8067_10323 = G__10335;
            count__8068_10324 = G__10336;
            i__8069_10325 = G__10337;
            continue;
          } else {
            var arg__5130__auto___10338 = cljs.core.first.call(null, seq__8066_10332__$1);
            a__5129__auto__.push(arg__5130__auto___10338);
            var G__10339 = cljs.core.next.call(null, seq__8066_10332__$1);
            var G__10340 = null;
            var G__10341 = 0;
            var G__10342 = 0;
            seq__8066_10322 = G__10339;
            chunk__8067_10323 = G__10340;
            count__8068_10324 = G__10341;
            i__8069_10325 = G__10342;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.table.apply(null, a__5129__auto__);
  };
  var table = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return table__delegate.call(this, args__5128__auto__);
  };
  table.cljs$lang$maxFixedArity = 0;
  table.cljs$lang$applyTo = function(arglist__10343) {
    var args__5128__auto__ = cljs.core.seq(arglist__10343);
    return table__delegate(args__5128__auto__);
  };
  table.cljs$core$IFn$_invoke$arity$variadic = table__delegate;
  return table;
}();
quiescent.dom.tbody = function() {
  var tbody__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8074_10344 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8075_10345 = null;
    var count__8076_10346 = 0;
    var i__8077_10347 = 0;
    while (true) {
      if (i__8077_10347 < count__8076_10346) {
        var arg__5130__auto___10348 = cljs.core._nth.call(null, chunk__8075_10345, i__8077_10347);
        a__5129__auto__.push(arg__5130__auto___10348);
        var G__10349 = seq__8074_10344;
        var G__10350 = chunk__8075_10345;
        var G__10351 = count__8076_10346;
        var G__10352 = i__8077_10347 + 1;
        seq__8074_10344 = G__10349;
        chunk__8075_10345 = G__10350;
        count__8076_10346 = G__10351;
        i__8077_10347 = G__10352;
        continue;
      } else {
        var temp__4126__auto___10353 = cljs.core.seq.call(null, seq__8074_10344);
        if (temp__4126__auto___10353) {
          var seq__8074_10354__$1 = temp__4126__auto___10353;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8074_10354__$1)) {
            var c__4408__auto___10355 = cljs.core.chunk_first.call(null, seq__8074_10354__$1);
            var G__10356 = cljs.core.chunk_rest.call(null, seq__8074_10354__$1);
            var G__10357 = c__4408__auto___10355;
            var G__10358 = cljs.core.count.call(null, c__4408__auto___10355);
            var G__10359 = 0;
            seq__8074_10344 = G__10356;
            chunk__8075_10345 = G__10357;
            count__8076_10346 = G__10358;
            i__8077_10347 = G__10359;
            continue;
          } else {
            var arg__5130__auto___10360 = cljs.core.first.call(null, seq__8074_10354__$1);
            a__5129__auto__.push(arg__5130__auto___10360);
            var G__10361 = cljs.core.next.call(null, seq__8074_10354__$1);
            var G__10362 = null;
            var G__10363 = 0;
            var G__10364 = 0;
            seq__8074_10344 = G__10361;
            chunk__8075_10345 = G__10362;
            count__8076_10346 = G__10363;
            i__8077_10347 = G__10364;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.tbody.apply(null, a__5129__auto__);
  };
  var tbody = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return tbody__delegate.call(this, args__5128__auto__);
  };
  tbody.cljs$lang$maxFixedArity = 0;
  tbody.cljs$lang$applyTo = function(arglist__10365) {
    var args__5128__auto__ = cljs.core.seq(arglist__10365);
    return tbody__delegate(args__5128__auto__);
  };
  tbody.cljs$core$IFn$_invoke$arity$variadic = tbody__delegate;
  return tbody;
}();
quiescent.dom.td = function() {
  var td__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8082_10366 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8083_10367 = null;
    var count__8084_10368 = 0;
    var i__8085_10369 = 0;
    while (true) {
      if (i__8085_10369 < count__8084_10368) {
        var arg__5130__auto___10370 = cljs.core._nth.call(null, chunk__8083_10367, i__8085_10369);
        a__5129__auto__.push(arg__5130__auto___10370);
        var G__10371 = seq__8082_10366;
        var G__10372 = chunk__8083_10367;
        var G__10373 = count__8084_10368;
        var G__10374 = i__8085_10369 + 1;
        seq__8082_10366 = G__10371;
        chunk__8083_10367 = G__10372;
        count__8084_10368 = G__10373;
        i__8085_10369 = G__10374;
        continue;
      } else {
        var temp__4126__auto___10375 = cljs.core.seq.call(null, seq__8082_10366);
        if (temp__4126__auto___10375) {
          var seq__8082_10376__$1 = temp__4126__auto___10375;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8082_10376__$1)) {
            var c__4408__auto___10377 = cljs.core.chunk_first.call(null, seq__8082_10376__$1);
            var G__10378 = cljs.core.chunk_rest.call(null, seq__8082_10376__$1);
            var G__10379 = c__4408__auto___10377;
            var G__10380 = cljs.core.count.call(null, c__4408__auto___10377);
            var G__10381 = 0;
            seq__8082_10366 = G__10378;
            chunk__8083_10367 = G__10379;
            count__8084_10368 = G__10380;
            i__8085_10369 = G__10381;
            continue;
          } else {
            var arg__5130__auto___10382 = cljs.core.first.call(null, seq__8082_10376__$1);
            a__5129__auto__.push(arg__5130__auto___10382);
            var G__10383 = cljs.core.next.call(null, seq__8082_10376__$1);
            var G__10384 = null;
            var G__10385 = 0;
            var G__10386 = 0;
            seq__8082_10366 = G__10383;
            chunk__8083_10367 = G__10384;
            count__8084_10368 = G__10385;
            i__8085_10369 = G__10386;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.td.apply(null, a__5129__auto__);
  };
  var td = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return td__delegate.call(this, args__5128__auto__);
  };
  td.cljs$lang$maxFixedArity = 0;
  td.cljs$lang$applyTo = function(arglist__10387) {
    var args__5128__auto__ = cljs.core.seq(arglist__10387);
    return td__delegate(args__5128__auto__);
  };
  td.cljs$core$IFn$_invoke$arity$variadic = td__delegate;
  return td;
}();
quiescent.dom.textarea = function() {
  var textarea__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8090_10388 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8091_10389 = null;
    var count__8092_10390 = 0;
    var i__8093_10391 = 0;
    while (true) {
      if (i__8093_10391 < count__8092_10390) {
        var arg__5130__auto___10392 = cljs.core._nth.call(null, chunk__8091_10389, i__8093_10391);
        a__5129__auto__.push(arg__5130__auto___10392);
        var G__10393 = seq__8090_10388;
        var G__10394 = chunk__8091_10389;
        var G__10395 = count__8092_10390;
        var G__10396 = i__8093_10391 + 1;
        seq__8090_10388 = G__10393;
        chunk__8091_10389 = G__10394;
        count__8092_10390 = G__10395;
        i__8093_10391 = G__10396;
        continue;
      } else {
        var temp__4126__auto___10397 = cljs.core.seq.call(null, seq__8090_10388);
        if (temp__4126__auto___10397) {
          var seq__8090_10398__$1 = temp__4126__auto___10397;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8090_10398__$1)) {
            var c__4408__auto___10399 = cljs.core.chunk_first.call(null, seq__8090_10398__$1);
            var G__10400 = cljs.core.chunk_rest.call(null, seq__8090_10398__$1);
            var G__10401 = c__4408__auto___10399;
            var G__10402 = cljs.core.count.call(null, c__4408__auto___10399);
            var G__10403 = 0;
            seq__8090_10388 = G__10400;
            chunk__8091_10389 = G__10401;
            count__8092_10390 = G__10402;
            i__8093_10391 = G__10403;
            continue;
          } else {
            var arg__5130__auto___10404 = cljs.core.first.call(null, seq__8090_10398__$1);
            a__5129__auto__.push(arg__5130__auto___10404);
            var G__10405 = cljs.core.next.call(null, seq__8090_10398__$1);
            var G__10406 = null;
            var G__10407 = 0;
            var G__10408 = 0;
            seq__8090_10388 = G__10405;
            chunk__8091_10389 = G__10406;
            count__8092_10390 = G__10407;
            i__8093_10391 = G__10408;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.textarea.apply(null, a__5129__auto__);
  };
  var textarea = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return textarea__delegate.call(this, args__5128__auto__);
  };
  textarea.cljs$lang$maxFixedArity = 0;
  textarea.cljs$lang$applyTo = function(arglist__10409) {
    var args__5128__auto__ = cljs.core.seq(arglist__10409);
    return textarea__delegate(args__5128__auto__);
  };
  textarea.cljs$core$IFn$_invoke$arity$variadic = textarea__delegate;
  return textarea;
}();
quiescent.dom.tfoot = function() {
  var tfoot__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8098_10410 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8099_10411 = null;
    var count__8100_10412 = 0;
    var i__8101_10413 = 0;
    while (true) {
      if (i__8101_10413 < count__8100_10412) {
        var arg__5130__auto___10414 = cljs.core._nth.call(null, chunk__8099_10411, i__8101_10413);
        a__5129__auto__.push(arg__5130__auto___10414);
        var G__10415 = seq__8098_10410;
        var G__10416 = chunk__8099_10411;
        var G__10417 = count__8100_10412;
        var G__10418 = i__8101_10413 + 1;
        seq__8098_10410 = G__10415;
        chunk__8099_10411 = G__10416;
        count__8100_10412 = G__10417;
        i__8101_10413 = G__10418;
        continue;
      } else {
        var temp__4126__auto___10419 = cljs.core.seq.call(null, seq__8098_10410);
        if (temp__4126__auto___10419) {
          var seq__8098_10420__$1 = temp__4126__auto___10419;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8098_10420__$1)) {
            var c__4408__auto___10421 = cljs.core.chunk_first.call(null, seq__8098_10420__$1);
            var G__10422 = cljs.core.chunk_rest.call(null, seq__8098_10420__$1);
            var G__10423 = c__4408__auto___10421;
            var G__10424 = cljs.core.count.call(null, c__4408__auto___10421);
            var G__10425 = 0;
            seq__8098_10410 = G__10422;
            chunk__8099_10411 = G__10423;
            count__8100_10412 = G__10424;
            i__8101_10413 = G__10425;
            continue;
          } else {
            var arg__5130__auto___10426 = cljs.core.first.call(null, seq__8098_10420__$1);
            a__5129__auto__.push(arg__5130__auto___10426);
            var G__10427 = cljs.core.next.call(null, seq__8098_10420__$1);
            var G__10428 = null;
            var G__10429 = 0;
            var G__10430 = 0;
            seq__8098_10410 = G__10427;
            chunk__8099_10411 = G__10428;
            count__8100_10412 = G__10429;
            i__8101_10413 = G__10430;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.tfoot.apply(null, a__5129__auto__);
  };
  var tfoot = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return tfoot__delegate.call(this, args__5128__auto__);
  };
  tfoot.cljs$lang$maxFixedArity = 0;
  tfoot.cljs$lang$applyTo = function(arglist__10431) {
    var args__5128__auto__ = cljs.core.seq(arglist__10431);
    return tfoot__delegate(args__5128__auto__);
  };
  tfoot.cljs$core$IFn$_invoke$arity$variadic = tfoot__delegate;
  return tfoot;
}();
quiescent.dom.th = function() {
  var th__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8106_10432 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8107_10433 = null;
    var count__8108_10434 = 0;
    var i__8109_10435 = 0;
    while (true) {
      if (i__8109_10435 < count__8108_10434) {
        var arg__5130__auto___10436 = cljs.core._nth.call(null, chunk__8107_10433, i__8109_10435);
        a__5129__auto__.push(arg__5130__auto___10436);
        var G__10437 = seq__8106_10432;
        var G__10438 = chunk__8107_10433;
        var G__10439 = count__8108_10434;
        var G__10440 = i__8109_10435 + 1;
        seq__8106_10432 = G__10437;
        chunk__8107_10433 = G__10438;
        count__8108_10434 = G__10439;
        i__8109_10435 = G__10440;
        continue;
      } else {
        var temp__4126__auto___10441 = cljs.core.seq.call(null, seq__8106_10432);
        if (temp__4126__auto___10441) {
          var seq__8106_10442__$1 = temp__4126__auto___10441;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8106_10442__$1)) {
            var c__4408__auto___10443 = cljs.core.chunk_first.call(null, seq__8106_10442__$1);
            var G__10444 = cljs.core.chunk_rest.call(null, seq__8106_10442__$1);
            var G__10445 = c__4408__auto___10443;
            var G__10446 = cljs.core.count.call(null, c__4408__auto___10443);
            var G__10447 = 0;
            seq__8106_10432 = G__10444;
            chunk__8107_10433 = G__10445;
            count__8108_10434 = G__10446;
            i__8109_10435 = G__10447;
            continue;
          } else {
            var arg__5130__auto___10448 = cljs.core.first.call(null, seq__8106_10442__$1);
            a__5129__auto__.push(arg__5130__auto___10448);
            var G__10449 = cljs.core.next.call(null, seq__8106_10442__$1);
            var G__10450 = null;
            var G__10451 = 0;
            var G__10452 = 0;
            seq__8106_10432 = G__10449;
            chunk__8107_10433 = G__10450;
            count__8108_10434 = G__10451;
            i__8109_10435 = G__10452;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.th.apply(null, a__5129__auto__);
  };
  var th = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return th__delegate.call(this, args__5128__auto__);
  };
  th.cljs$lang$maxFixedArity = 0;
  th.cljs$lang$applyTo = function(arglist__10453) {
    var args__5128__auto__ = cljs.core.seq(arglist__10453);
    return th__delegate(args__5128__auto__);
  };
  th.cljs$core$IFn$_invoke$arity$variadic = th__delegate;
  return th;
}();
quiescent.dom.thead = function() {
  var thead__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8114_10454 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8115_10455 = null;
    var count__8116_10456 = 0;
    var i__8117_10457 = 0;
    while (true) {
      if (i__8117_10457 < count__8116_10456) {
        var arg__5130__auto___10458 = cljs.core._nth.call(null, chunk__8115_10455, i__8117_10457);
        a__5129__auto__.push(arg__5130__auto___10458);
        var G__10459 = seq__8114_10454;
        var G__10460 = chunk__8115_10455;
        var G__10461 = count__8116_10456;
        var G__10462 = i__8117_10457 + 1;
        seq__8114_10454 = G__10459;
        chunk__8115_10455 = G__10460;
        count__8116_10456 = G__10461;
        i__8117_10457 = G__10462;
        continue;
      } else {
        var temp__4126__auto___10463 = cljs.core.seq.call(null, seq__8114_10454);
        if (temp__4126__auto___10463) {
          var seq__8114_10464__$1 = temp__4126__auto___10463;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8114_10464__$1)) {
            var c__4408__auto___10465 = cljs.core.chunk_first.call(null, seq__8114_10464__$1);
            var G__10466 = cljs.core.chunk_rest.call(null, seq__8114_10464__$1);
            var G__10467 = c__4408__auto___10465;
            var G__10468 = cljs.core.count.call(null, c__4408__auto___10465);
            var G__10469 = 0;
            seq__8114_10454 = G__10466;
            chunk__8115_10455 = G__10467;
            count__8116_10456 = G__10468;
            i__8117_10457 = G__10469;
            continue;
          } else {
            var arg__5130__auto___10470 = cljs.core.first.call(null, seq__8114_10464__$1);
            a__5129__auto__.push(arg__5130__auto___10470);
            var G__10471 = cljs.core.next.call(null, seq__8114_10464__$1);
            var G__10472 = null;
            var G__10473 = 0;
            var G__10474 = 0;
            seq__8114_10454 = G__10471;
            chunk__8115_10455 = G__10472;
            count__8116_10456 = G__10473;
            i__8117_10457 = G__10474;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.thead.apply(null, a__5129__auto__);
  };
  var thead = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return thead__delegate.call(this, args__5128__auto__);
  };
  thead.cljs$lang$maxFixedArity = 0;
  thead.cljs$lang$applyTo = function(arglist__10475) {
    var args__5128__auto__ = cljs.core.seq(arglist__10475);
    return thead__delegate(args__5128__auto__);
  };
  thead.cljs$core$IFn$_invoke$arity$variadic = thead__delegate;
  return thead;
}();
quiescent.dom.time = function() {
  var time__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8122_10476 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8123_10477 = null;
    var count__8124_10478 = 0;
    var i__8125_10479 = 0;
    while (true) {
      if (i__8125_10479 < count__8124_10478) {
        var arg__5130__auto___10480 = cljs.core._nth.call(null, chunk__8123_10477, i__8125_10479);
        a__5129__auto__.push(arg__5130__auto___10480);
        var G__10481 = seq__8122_10476;
        var G__10482 = chunk__8123_10477;
        var G__10483 = count__8124_10478;
        var G__10484 = i__8125_10479 + 1;
        seq__8122_10476 = G__10481;
        chunk__8123_10477 = G__10482;
        count__8124_10478 = G__10483;
        i__8125_10479 = G__10484;
        continue;
      } else {
        var temp__4126__auto___10485 = cljs.core.seq.call(null, seq__8122_10476);
        if (temp__4126__auto___10485) {
          var seq__8122_10486__$1 = temp__4126__auto___10485;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8122_10486__$1)) {
            var c__4408__auto___10487 = cljs.core.chunk_first.call(null, seq__8122_10486__$1);
            var G__10488 = cljs.core.chunk_rest.call(null, seq__8122_10486__$1);
            var G__10489 = c__4408__auto___10487;
            var G__10490 = cljs.core.count.call(null, c__4408__auto___10487);
            var G__10491 = 0;
            seq__8122_10476 = G__10488;
            chunk__8123_10477 = G__10489;
            count__8124_10478 = G__10490;
            i__8125_10479 = G__10491;
            continue;
          } else {
            var arg__5130__auto___10492 = cljs.core.first.call(null, seq__8122_10486__$1);
            a__5129__auto__.push(arg__5130__auto___10492);
            var G__10493 = cljs.core.next.call(null, seq__8122_10486__$1);
            var G__10494 = null;
            var G__10495 = 0;
            var G__10496 = 0;
            seq__8122_10476 = G__10493;
            chunk__8123_10477 = G__10494;
            count__8124_10478 = G__10495;
            i__8125_10479 = G__10496;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.time.apply(null, a__5129__auto__);
  };
  var time = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return time__delegate.call(this, args__5128__auto__);
  };
  time.cljs$lang$maxFixedArity = 0;
  time.cljs$lang$applyTo = function(arglist__10497) {
    var args__5128__auto__ = cljs.core.seq(arglist__10497);
    return time__delegate(args__5128__auto__);
  };
  time.cljs$core$IFn$_invoke$arity$variadic = time__delegate;
  return time;
}();
quiescent.dom.title = function() {
  var title__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8130_10498 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8131_10499 = null;
    var count__8132_10500 = 0;
    var i__8133_10501 = 0;
    while (true) {
      if (i__8133_10501 < count__8132_10500) {
        var arg__5130__auto___10502 = cljs.core._nth.call(null, chunk__8131_10499, i__8133_10501);
        a__5129__auto__.push(arg__5130__auto___10502);
        var G__10503 = seq__8130_10498;
        var G__10504 = chunk__8131_10499;
        var G__10505 = count__8132_10500;
        var G__10506 = i__8133_10501 + 1;
        seq__8130_10498 = G__10503;
        chunk__8131_10499 = G__10504;
        count__8132_10500 = G__10505;
        i__8133_10501 = G__10506;
        continue;
      } else {
        var temp__4126__auto___10507 = cljs.core.seq.call(null, seq__8130_10498);
        if (temp__4126__auto___10507) {
          var seq__8130_10508__$1 = temp__4126__auto___10507;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8130_10508__$1)) {
            var c__4408__auto___10509 = cljs.core.chunk_first.call(null, seq__8130_10508__$1);
            var G__10510 = cljs.core.chunk_rest.call(null, seq__8130_10508__$1);
            var G__10511 = c__4408__auto___10509;
            var G__10512 = cljs.core.count.call(null, c__4408__auto___10509);
            var G__10513 = 0;
            seq__8130_10498 = G__10510;
            chunk__8131_10499 = G__10511;
            count__8132_10500 = G__10512;
            i__8133_10501 = G__10513;
            continue;
          } else {
            var arg__5130__auto___10514 = cljs.core.first.call(null, seq__8130_10508__$1);
            a__5129__auto__.push(arg__5130__auto___10514);
            var G__10515 = cljs.core.next.call(null, seq__8130_10508__$1);
            var G__10516 = null;
            var G__10517 = 0;
            var G__10518 = 0;
            seq__8130_10498 = G__10515;
            chunk__8131_10499 = G__10516;
            count__8132_10500 = G__10517;
            i__8133_10501 = G__10518;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.title.apply(null, a__5129__auto__);
  };
  var title = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return title__delegate.call(this, args__5128__auto__);
  };
  title.cljs$lang$maxFixedArity = 0;
  title.cljs$lang$applyTo = function(arglist__10519) {
    var args__5128__auto__ = cljs.core.seq(arglist__10519);
    return title__delegate(args__5128__auto__);
  };
  title.cljs$core$IFn$_invoke$arity$variadic = title__delegate;
  return title;
}();
quiescent.dom.tr = function() {
  var tr__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8138_10520 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8139_10521 = null;
    var count__8140_10522 = 0;
    var i__8141_10523 = 0;
    while (true) {
      if (i__8141_10523 < count__8140_10522) {
        var arg__5130__auto___10524 = cljs.core._nth.call(null, chunk__8139_10521, i__8141_10523);
        a__5129__auto__.push(arg__5130__auto___10524);
        var G__10525 = seq__8138_10520;
        var G__10526 = chunk__8139_10521;
        var G__10527 = count__8140_10522;
        var G__10528 = i__8141_10523 + 1;
        seq__8138_10520 = G__10525;
        chunk__8139_10521 = G__10526;
        count__8140_10522 = G__10527;
        i__8141_10523 = G__10528;
        continue;
      } else {
        var temp__4126__auto___10529 = cljs.core.seq.call(null, seq__8138_10520);
        if (temp__4126__auto___10529) {
          var seq__8138_10530__$1 = temp__4126__auto___10529;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8138_10530__$1)) {
            var c__4408__auto___10531 = cljs.core.chunk_first.call(null, seq__8138_10530__$1);
            var G__10532 = cljs.core.chunk_rest.call(null, seq__8138_10530__$1);
            var G__10533 = c__4408__auto___10531;
            var G__10534 = cljs.core.count.call(null, c__4408__auto___10531);
            var G__10535 = 0;
            seq__8138_10520 = G__10532;
            chunk__8139_10521 = G__10533;
            count__8140_10522 = G__10534;
            i__8141_10523 = G__10535;
            continue;
          } else {
            var arg__5130__auto___10536 = cljs.core.first.call(null, seq__8138_10530__$1);
            a__5129__auto__.push(arg__5130__auto___10536);
            var G__10537 = cljs.core.next.call(null, seq__8138_10530__$1);
            var G__10538 = null;
            var G__10539 = 0;
            var G__10540 = 0;
            seq__8138_10520 = G__10537;
            chunk__8139_10521 = G__10538;
            count__8140_10522 = G__10539;
            i__8141_10523 = G__10540;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.tr.apply(null, a__5129__auto__);
  };
  var tr = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return tr__delegate.call(this, args__5128__auto__);
  };
  tr.cljs$lang$maxFixedArity = 0;
  tr.cljs$lang$applyTo = function(arglist__10541) {
    var args__5128__auto__ = cljs.core.seq(arglist__10541);
    return tr__delegate(args__5128__auto__);
  };
  tr.cljs$core$IFn$_invoke$arity$variadic = tr__delegate;
  return tr;
}();
quiescent.dom.track = function() {
  var track__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8146_10542 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8147_10543 = null;
    var count__8148_10544 = 0;
    var i__8149_10545 = 0;
    while (true) {
      if (i__8149_10545 < count__8148_10544) {
        var arg__5130__auto___10546 = cljs.core._nth.call(null, chunk__8147_10543, i__8149_10545);
        a__5129__auto__.push(arg__5130__auto___10546);
        var G__10547 = seq__8146_10542;
        var G__10548 = chunk__8147_10543;
        var G__10549 = count__8148_10544;
        var G__10550 = i__8149_10545 + 1;
        seq__8146_10542 = G__10547;
        chunk__8147_10543 = G__10548;
        count__8148_10544 = G__10549;
        i__8149_10545 = G__10550;
        continue;
      } else {
        var temp__4126__auto___10551 = cljs.core.seq.call(null, seq__8146_10542);
        if (temp__4126__auto___10551) {
          var seq__8146_10552__$1 = temp__4126__auto___10551;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8146_10552__$1)) {
            var c__4408__auto___10553 = cljs.core.chunk_first.call(null, seq__8146_10552__$1);
            var G__10554 = cljs.core.chunk_rest.call(null, seq__8146_10552__$1);
            var G__10555 = c__4408__auto___10553;
            var G__10556 = cljs.core.count.call(null, c__4408__auto___10553);
            var G__10557 = 0;
            seq__8146_10542 = G__10554;
            chunk__8147_10543 = G__10555;
            count__8148_10544 = G__10556;
            i__8149_10545 = G__10557;
            continue;
          } else {
            var arg__5130__auto___10558 = cljs.core.first.call(null, seq__8146_10552__$1);
            a__5129__auto__.push(arg__5130__auto___10558);
            var G__10559 = cljs.core.next.call(null, seq__8146_10552__$1);
            var G__10560 = null;
            var G__10561 = 0;
            var G__10562 = 0;
            seq__8146_10542 = G__10559;
            chunk__8147_10543 = G__10560;
            count__8148_10544 = G__10561;
            i__8149_10545 = G__10562;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.track.apply(null, a__5129__auto__);
  };
  var track = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return track__delegate.call(this, args__5128__auto__);
  };
  track.cljs$lang$maxFixedArity = 0;
  track.cljs$lang$applyTo = function(arglist__10563) {
    var args__5128__auto__ = cljs.core.seq(arglist__10563);
    return track__delegate(args__5128__auto__);
  };
  track.cljs$core$IFn$_invoke$arity$variadic = track__delegate;
  return track;
}();
quiescent.dom.u = function() {
  var u__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8154_10564 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8155_10565 = null;
    var count__8156_10566 = 0;
    var i__8157_10567 = 0;
    while (true) {
      if (i__8157_10567 < count__8156_10566) {
        var arg__5130__auto___10568 = cljs.core._nth.call(null, chunk__8155_10565, i__8157_10567);
        a__5129__auto__.push(arg__5130__auto___10568);
        var G__10569 = seq__8154_10564;
        var G__10570 = chunk__8155_10565;
        var G__10571 = count__8156_10566;
        var G__10572 = i__8157_10567 + 1;
        seq__8154_10564 = G__10569;
        chunk__8155_10565 = G__10570;
        count__8156_10566 = G__10571;
        i__8157_10567 = G__10572;
        continue;
      } else {
        var temp__4126__auto___10573 = cljs.core.seq.call(null, seq__8154_10564);
        if (temp__4126__auto___10573) {
          var seq__8154_10574__$1 = temp__4126__auto___10573;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8154_10574__$1)) {
            var c__4408__auto___10575 = cljs.core.chunk_first.call(null, seq__8154_10574__$1);
            var G__10576 = cljs.core.chunk_rest.call(null, seq__8154_10574__$1);
            var G__10577 = c__4408__auto___10575;
            var G__10578 = cljs.core.count.call(null, c__4408__auto___10575);
            var G__10579 = 0;
            seq__8154_10564 = G__10576;
            chunk__8155_10565 = G__10577;
            count__8156_10566 = G__10578;
            i__8157_10567 = G__10579;
            continue;
          } else {
            var arg__5130__auto___10580 = cljs.core.first.call(null, seq__8154_10574__$1);
            a__5129__auto__.push(arg__5130__auto___10580);
            var G__10581 = cljs.core.next.call(null, seq__8154_10574__$1);
            var G__10582 = null;
            var G__10583 = 0;
            var G__10584 = 0;
            seq__8154_10564 = G__10581;
            chunk__8155_10565 = G__10582;
            count__8156_10566 = G__10583;
            i__8157_10567 = G__10584;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.u.apply(null, a__5129__auto__);
  };
  var u = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return u__delegate.call(this, args__5128__auto__);
  };
  u.cljs$lang$maxFixedArity = 0;
  u.cljs$lang$applyTo = function(arglist__10585) {
    var args__5128__auto__ = cljs.core.seq(arglist__10585);
    return u__delegate(args__5128__auto__);
  };
  u.cljs$core$IFn$_invoke$arity$variadic = u__delegate;
  return u;
}();
quiescent.dom.ul = function() {
  var ul__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8162_10586 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8163_10587 = null;
    var count__8164_10588 = 0;
    var i__8165_10589 = 0;
    while (true) {
      if (i__8165_10589 < count__8164_10588) {
        var arg__5130__auto___10590 = cljs.core._nth.call(null, chunk__8163_10587, i__8165_10589);
        a__5129__auto__.push(arg__5130__auto___10590);
        var G__10591 = seq__8162_10586;
        var G__10592 = chunk__8163_10587;
        var G__10593 = count__8164_10588;
        var G__10594 = i__8165_10589 + 1;
        seq__8162_10586 = G__10591;
        chunk__8163_10587 = G__10592;
        count__8164_10588 = G__10593;
        i__8165_10589 = G__10594;
        continue;
      } else {
        var temp__4126__auto___10595 = cljs.core.seq.call(null, seq__8162_10586);
        if (temp__4126__auto___10595) {
          var seq__8162_10596__$1 = temp__4126__auto___10595;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8162_10596__$1)) {
            var c__4408__auto___10597 = cljs.core.chunk_first.call(null, seq__8162_10596__$1);
            var G__10598 = cljs.core.chunk_rest.call(null, seq__8162_10596__$1);
            var G__10599 = c__4408__auto___10597;
            var G__10600 = cljs.core.count.call(null, c__4408__auto___10597);
            var G__10601 = 0;
            seq__8162_10586 = G__10598;
            chunk__8163_10587 = G__10599;
            count__8164_10588 = G__10600;
            i__8165_10589 = G__10601;
            continue;
          } else {
            var arg__5130__auto___10602 = cljs.core.first.call(null, seq__8162_10596__$1);
            a__5129__auto__.push(arg__5130__auto___10602);
            var G__10603 = cljs.core.next.call(null, seq__8162_10596__$1);
            var G__10604 = null;
            var G__10605 = 0;
            var G__10606 = 0;
            seq__8162_10586 = G__10603;
            chunk__8163_10587 = G__10604;
            count__8164_10588 = G__10605;
            i__8165_10589 = G__10606;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.ul.apply(null, a__5129__auto__);
  };
  var ul = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return ul__delegate.call(this, args__5128__auto__);
  };
  ul.cljs$lang$maxFixedArity = 0;
  ul.cljs$lang$applyTo = function(arglist__10607) {
    var args__5128__auto__ = cljs.core.seq(arglist__10607);
    return ul__delegate(args__5128__auto__);
  };
  ul.cljs$core$IFn$_invoke$arity$variadic = ul__delegate;
  return ul;
}();
quiescent.dom.var$ = function() {
  var var$__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8170_10608 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8171_10609 = null;
    var count__8172_10610 = 0;
    var i__8173_10611 = 0;
    while (true) {
      if (i__8173_10611 < count__8172_10610) {
        var arg__5130__auto___10612 = cljs.core._nth.call(null, chunk__8171_10609, i__8173_10611);
        a__5129__auto__.push(arg__5130__auto___10612);
        var G__10613 = seq__8170_10608;
        var G__10614 = chunk__8171_10609;
        var G__10615 = count__8172_10610;
        var G__10616 = i__8173_10611 + 1;
        seq__8170_10608 = G__10613;
        chunk__8171_10609 = G__10614;
        count__8172_10610 = G__10615;
        i__8173_10611 = G__10616;
        continue;
      } else {
        var temp__4126__auto___10617 = cljs.core.seq.call(null, seq__8170_10608);
        if (temp__4126__auto___10617) {
          var seq__8170_10618__$1 = temp__4126__auto___10617;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8170_10618__$1)) {
            var c__4408__auto___10619 = cljs.core.chunk_first.call(null, seq__8170_10618__$1);
            var G__10620 = cljs.core.chunk_rest.call(null, seq__8170_10618__$1);
            var G__10621 = c__4408__auto___10619;
            var G__10622 = cljs.core.count.call(null, c__4408__auto___10619);
            var G__10623 = 0;
            seq__8170_10608 = G__10620;
            chunk__8171_10609 = G__10621;
            count__8172_10610 = G__10622;
            i__8173_10611 = G__10623;
            continue;
          } else {
            var arg__5130__auto___10624 = cljs.core.first.call(null, seq__8170_10618__$1);
            a__5129__auto__.push(arg__5130__auto___10624);
            var G__10625 = cljs.core.next.call(null, seq__8170_10618__$1);
            var G__10626 = null;
            var G__10627 = 0;
            var G__10628 = 0;
            seq__8170_10608 = G__10625;
            chunk__8171_10609 = G__10626;
            count__8172_10610 = G__10627;
            i__8173_10611 = G__10628;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.var$.apply(null, a__5129__auto__);
  };
  var var$ = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return var$__delegate.call(this, args__5128__auto__);
  };
  var$.cljs$lang$maxFixedArity = 0;
  var$.cljs$lang$applyTo = function(arglist__10629) {
    var args__5128__auto__ = cljs.core.seq(arglist__10629);
    return var$__delegate(args__5128__auto__);
  };
  var$.cljs$core$IFn$_invoke$arity$variadic = var$__delegate;
  return var$;
}();
quiescent.dom.video = function() {
  var video__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8178_10630 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8179_10631 = null;
    var count__8180_10632 = 0;
    var i__8181_10633 = 0;
    while (true) {
      if (i__8181_10633 < count__8180_10632) {
        var arg__5130__auto___10634 = cljs.core._nth.call(null, chunk__8179_10631, i__8181_10633);
        a__5129__auto__.push(arg__5130__auto___10634);
        var G__10635 = seq__8178_10630;
        var G__10636 = chunk__8179_10631;
        var G__10637 = count__8180_10632;
        var G__10638 = i__8181_10633 + 1;
        seq__8178_10630 = G__10635;
        chunk__8179_10631 = G__10636;
        count__8180_10632 = G__10637;
        i__8181_10633 = G__10638;
        continue;
      } else {
        var temp__4126__auto___10639 = cljs.core.seq.call(null, seq__8178_10630);
        if (temp__4126__auto___10639) {
          var seq__8178_10640__$1 = temp__4126__auto___10639;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8178_10640__$1)) {
            var c__4408__auto___10641 = cljs.core.chunk_first.call(null, seq__8178_10640__$1);
            var G__10642 = cljs.core.chunk_rest.call(null, seq__8178_10640__$1);
            var G__10643 = c__4408__auto___10641;
            var G__10644 = cljs.core.count.call(null, c__4408__auto___10641);
            var G__10645 = 0;
            seq__8178_10630 = G__10642;
            chunk__8179_10631 = G__10643;
            count__8180_10632 = G__10644;
            i__8181_10633 = G__10645;
            continue;
          } else {
            var arg__5130__auto___10646 = cljs.core.first.call(null, seq__8178_10640__$1);
            a__5129__auto__.push(arg__5130__auto___10646);
            var G__10647 = cljs.core.next.call(null, seq__8178_10640__$1);
            var G__10648 = null;
            var G__10649 = 0;
            var G__10650 = 0;
            seq__8178_10630 = G__10647;
            chunk__8179_10631 = G__10648;
            count__8180_10632 = G__10649;
            i__8181_10633 = G__10650;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.video.apply(null, a__5129__auto__);
  };
  var video = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return video__delegate.call(this, args__5128__auto__);
  };
  video.cljs$lang$maxFixedArity = 0;
  video.cljs$lang$applyTo = function(arglist__10651) {
    var args__5128__auto__ = cljs.core.seq(arglist__10651);
    return video__delegate(args__5128__auto__);
  };
  video.cljs$core$IFn$_invoke$arity$variadic = video__delegate;
  return video;
}();
quiescent.dom.wbr = function() {
  var wbr__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8186_10652 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8187_10653 = null;
    var count__8188_10654 = 0;
    var i__8189_10655 = 0;
    while (true) {
      if (i__8189_10655 < count__8188_10654) {
        var arg__5130__auto___10656 = cljs.core._nth.call(null, chunk__8187_10653, i__8189_10655);
        a__5129__auto__.push(arg__5130__auto___10656);
        var G__10657 = seq__8186_10652;
        var G__10658 = chunk__8187_10653;
        var G__10659 = count__8188_10654;
        var G__10660 = i__8189_10655 + 1;
        seq__8186_10652 = G__10657;
        chunk__8187_10653 = G__10658;
        count__8188_10654 = G__10659;
        i__8189_10655 = G__10660;
        continue;
      } else {
        var temp__4126__auto___10661 = cljs.core.seq.call(null, seq__8186_10652);
        if (temp__4126__auto___10661) {
          var seq__8186_10662__$1 = temp__4126__auto___10661;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8186_10662__$1)) {
            var c__4408__auto___10663 = cljs.core.chunk_first.call(null, seq__8186_10662__$1);
            var G__10664 = cljs.core.chunk_rest.call(null, seq__8186_10662__$1);
            var G__10665 = c__4408__auto___10663;
            var G__10666 = cljs.core.count.call(null, c__4408__auto___10663);
            var G__10667 = 0;
            seq__8186_10652 = G__10664;
            chunk__8187_10653 = G__10665;
            count__8188_10654 = G__10666;
            i__8189_10655 = G__10667;
            continue;
          } else {
            var arg__5130__auto___10668 = cljs.core.first.call(null, seq__8186_10662__$1);
            a__5129__auto__.push(arg__5130__auto___10668);
            var G__10669 = cljs.core.next.call(null, seq__8186_10662__$1);
            var G__10670 = null;
            var G__10671 = 0;
            var G__10672 = 0;
            seq__8186_10652 = G__10669;
            chunk__8187_10653 = G__10670;
            count__8188_10654 = G__10671;
            i__8189_10655 = G__10672;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.wbr.apply(null, a__5129__auto__);
  };
  var wbr = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return wbr__delegate.call(this, args__5128__auto__);
  };
  wbr.cljs$lang$maxFixedArity = 0;
  wbr.cljs$lang$applyTo = function(arglist__10673) {
    var args__5128__auto__ = cljs.core.seq(arglist__10673);
    return wbr__delegate(args__5128__auto__);
  };
  wbr.cljs$core$IFn$_invoke$arity$variadic = wbr__delegate;
  return wbr;
}();
quiescent.dom.circle = function() {
  var circle__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8194_10674 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8195_10675 = null;
    var count__8196_10676 = 0;
    var i__8197_10677 = 0;
    while (true) {
      if (i__8197_10677 < count__8196_10676) {
        var arg__5130__auto___10678 = cljs.core._nth.call(null, chunk__8195_10675, i__8197_10677);
        a__5129__auto__.push(arg__5130__auto___10678);
        var G__10679 = seq__8194_10674;
        var G__10680 = chunk__8195_10675;
        var G__10681 = count__8196_10676;
        var G__10682 = i__8197_10677 + 1;
        seq__8194_10674 = G__10679;
        chunk__8195_10675 = G__10680;
        count__8196_10676 = G__10681;
        i__8197_10677 = G__10682;
        continue;
      } else {
        var temp__4126__auto___10683 = cljs.core.seq.call(null, seq__8194_10674);
        if (temp__4126__auto___10683) {
          var seq__8194_10684__$1 = temp__4126__auto___10683;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8194_10684__$1)) {
            var c__4408__auto___10685 = cljs.core.chunk_first.call(null, seq__8194_10684__$1);
            var G__10686 = cljs.core.chunk_rest.call(null, seq__8194_10684__$1);
            var G__10687 = c__4408__auto___10685;
            var G__10688 = cljs.core.count.call(null, c__4408__auto___10685);
            var G__10689 = 0;
            seq__8194_10674 = G__10686;
            chunk__8195_10675 = G__10687;
            count__8196_10676 = G__10688;
            i__8197_10677 = G__10689;
            continue;
          } else {
            var arg__5130__auto___10690 = cljs.core.first.call(null, seq__8194_10684__$1);
            a__5129__auto__.push(arg__5130__auto___10690);
            var G__10691 = cljs.core.next.call(null, seq__8194_10684__$1);
            var G__10692 = null;
            var G__10693 = 0;
            var G__10694 = 0;
            seq__8194_10674 = G__10691;
            chunk__8195_10675 = G__10692;
            count__8196_10676 = G__10693;
            i__8197_10677 = G__10694;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.circle.apply(null, a__5129__auto__);
  };
  var circle = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return circle__delegate.call(this, args__5128__auto__);
  };
  circle.cljs$lang$maxFixedArity = 0;
  circle.cljs$lang$applyTo = function(arglist__10695) {
    var args__5128__auto__ = cljs.core.seq(arglist__10695);
    return circle__delegate(args__5128__auto__);
  };
  circle.cljs$core$IFn$_invoke$arity$variadic = circle__delegate;
  return circle;
}();
quiescent.dom.g = function() {
  var g__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8202_10696 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8203_10697 = null;
    var count__8204_10698 = 0;
    var i__8205_10699 = 0;
    while (true) {
      if (i__8205_10699 < count__8204_10698) {
        var arg__5130__auto___10700 = cljs.core._nth.call(null, chunk__8203_10697, i__8205_10699);
        a__5129__auto__.push(arg__5130__auto___10700);
        var G__10701 = seq__8202_10696;
        var G__10702 = chunk__8203_10697;
        var G__10703 = count__8204_10698;
        var G__10704 = i__8205_10699 + 1;
        seq__8202_10696 = G__10701;
        chunk__8203_10697 = G__10702;
        count__8204_10698 = G__10703;
        i__8205_10699 = G__10704;
        continue;
      } else {
        var temp__4126__auto___10705 = cljs.core.seq.call(null, seq__8202_10696);
        if (temp__4126__auto___10705) {
          var seq__8202_10706__$1 = temp__4126__auto___10705;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8202_10706__$1)) {
            var c__4408__auto___10707 = cljs.core.chunk_first.call(null, seq__8202_10706__$1);
            var G__10708 = cljs.core.chunk_rest.call(null, seq__8202_10706__$1);
            var G__10709 = c__4408__auto___10707;
            var G__10710 = cljs.core.count.call(null, c__4408__auto___10707);
            var G__10711 = 0;
            seq__8202_10696 = G__10708;
            chunk__8203_10697 = G__10709;
            count__8204_10698 = G__10710;
            i__8205_10699 = G__10711;
            continue;
          } else {
            var arg__5130__auto___10712 = cljs.core.first.call(null, seq__8202_10706__$1);
            a__5129__auto__.push(arg__5130__auto___10712);
            var G__10713 = cljs.core.next.call(null, seq__8202_10706__$1);
            var G__10714 = null;
            var G__10715 = 0;
            var G__10716 = 0;
            seq__8202_10696 = G__10713;
            chunk__8203_10697 = G__10714;
            count__8204_10698 = G__10715;
            i__8205_10699 = G__10716;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.g.apply(null, a__5129__auto__);
  };
  var g = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return g__delegate.call(this, args__5128__auto__);
  };
  g.cljs$lang$maxFixedArity = 0;
  g.cljs$lang$applyTo = function(arglist__10717) {
    var args__5128__auto__ = cljs.core.seq(arglist__10717);
    return g__delegate(args__5128__auto__);
  };
  g.cljs$core$IFn$_invoke$arity$variadic = g__delegate;
  return g;
}();
quiescent.dom.line = function() {
  var line__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8210_10718 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8211_10719 = null;
    var count__8212_10720 = 0;
    var i__8213_10721 = 0;
    while (true) {
      if (i__8213_10721 < count__8212_10720) {
        var arg__5130__auto___10722 = cljs.core._nth.call(null, chunk__8211_10719, i__8213_10721);
        a__5129__auto__.push(arg__5130__auto___10722);
        var G__10723 = seq__8210_10718;
        var G__10724 = chunk__8211_10719;
        var G__10725 = count__8212_10720;
        var G__10726 = i__8213_10721 + 1;
        seq__8210_10718 = G__10723;
        chunk__8211_10719 = G__10724;
        count__8212_10720 = G__10725;
        i__8213_10721 = G__10726;
        continue;
      } else {
        var temp__4126__auto___10727 = cljs.core.seq.call(null, seq__8210_10718);
        if (temp__4126__auto___10727) {
          var seq__8210_10728__$1 = temp__4126__auto___10727;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8210_10728__$1)) {
            var c__4408__auto___10729 = cljs.core.chunk_first.call(null, seq__8210_10728__$1);
            var G__10730 = cljs.core.chunk_rest.call(null, seq__8210_10728__$1);
            var G__10731 = c__4408__auto___10729;
            var G__10732 = cljs.core.count.call(null, c__4408__auto___10729);
            var G__10733 = 0;
            seq__8210_10718 = G__10730;
            chunk__8211_10719 = G__10731;
            count__8212_10720 = G__10732;
            i__8213_10721 = G__10733;
            continue;
          } else {
            var arg__5130__auto___10734 = cljs.core.first.call(null, seq__8210_10728__$1);
            a__5129__auto__.push(arg__5130__auto___10734);
            var G__10735 = cljs.core.next.call(null, seq__8210_10728__$1);
            var G__10736 = null;
            var G__10737 = 0;
            var G__10738 = 0;
            seq__8210_10718 = G__10735;
            chunk__8211_10719 = G__10736;
            count__8212_10720 = G__10737;
            i__8213_10721 = G__10738;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.line.apply(null, a__5129__auto__);
  };
  var line = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return line__delegate.call(this, args__5128__auto__);
  };
  line.cljs$lang$maxFixedArity = 0;
  line.cljs$lang$applyTo = function(arglist__10739) {
    var args__5128__auto__ = cljs.core.seq(arglist__10739);
    return line__delegate(args__5128__auto__);
  };
  line.cljs$core$IFn$_invoke$arity$variadic = line__delegate;
  return line;
}();
quiescent.dom.path = function() {
  var path__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8218_10740 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8219_10741 = null;
    var count__8220_10742 = 0;
    var i__8221_10743 = 0;
    while (true) {
      if (i__8221_10743 < count__8220_10742) {
        var arg__5130__auto___10744 = cljs.core._nth.call(null, chunk__8219_10741, i__8221_10743);
        a__5129__auto__.push(arg__5130__auto___10744);
        var G__10745 = seq__8218_10740;
        var G__10746 = chunk__8219_10741;
        var G__10747 = count__8220_10742;
        var G__10748 = i__8221_10743 + 1;
        seq__8218_10740 = G__10745;
        chunk__8219_10741 = G__10746;
        count__8220_10742 = G__10747;
        i__8221_10743 = G__10748;
        continue;
      } else {
        var temp__4126__auto___10749 = cljs.core.seq.call(null, seq__8218_10740);
        if (temp__4126__auto___10749) {
          var seq__8218_10750__$1 = temp__4126__auto___10749;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8218_10750__$1)) {
            var c__4408__auto___10751 = cljs.core.chunk_first.call(null, seq__8218_10750__$1);
            var G__10752 = cljs.core.chunk_rest.call(null, seq__8218_10750__$1);
            var G__10753 = c__4408__auto___10751;
            var G__10754 = cljs.core.count.call(null, c__4408__auto___10751);
            var G__10755 = 0;
            seq__8218_10740 = G__10752;
            chunk__8219_10741 = G__10753;
            count__8220_10742 = G__10754;
            i__8221_10743 = G__10755;
            continue;
          } else {
            var arg__5130__auto___10756 = cljs.core.first.call(null, seq__8218_10750__$1);
            a__5129__auto__.push(arg__5130__auto___10756);
            var G__10757 = cljs.core.next.call(null, seq__8218_10750__$1);
            var G__10758 = null;
            var G__10759 = 0;
            var G__10760 = 0;
            seq__8218_10740 = G__10757;
            chunk__8219_10741 = G__10758;
            count__8220_10742 = G__10759;
            i__8221_10743 = G__10760;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.path.apply(null, a__5129__auto__);
  };
  var path = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return path__delegate.call(this, args__5128__auto__);
  };
  path.cljs$lang$maxFixedArity = 0;
  path.cljs$lang$applyTo = function(arglist__10761) {
    var args__5128__auto__ = cljs.core.seq(arglist__10761);
    return path__delegate(args__5128__auto__);
  };
  path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
  return path;
}();
quiescent.dom.polygon = function() {
  var polygon__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8226_10762 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8227_10763 = null;
    var count__8228_10764 = 0;
    var i__8229_10765 = 0;
    while (true) {
      if (i__8229_10765 < count__8228_10764) {
        var arg__5130__auto___10766 = cljs.core._nth.call(null, chunk__8227_10763, i__8229_10765);
        a__5129__auto__.push(arg__5130__auto___10766);
        var G__10767 = seq__8226_10762;
        var G__10768 = chunk__8227_10763;
        var G__10769 = count__8228_10764;
        var G__10770 = i__8229_10765 + 1;
        seq__8226_10762 = G__10767;
        chunk__8227_10763 = G__10768;
        count__8228_10764 = G__10769;
        i__8229_10765 = G__10770;
        continue;
      } else {
        var temp__4126__auto___10771 = cljs.core.seq.call(null, seq__8226_10762);
        if (temp__4126__auto___10771) {
          var seq__8226_10772__$1 = temp__4126__auto___10771;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8226_10772__$1)) {
            var c__4408__auto___10773 = cljs.core.chunk_first.call(null, seq__8226_10772__$1);
            var G__10774 = cljs.core.chunk_rest.call(null, seq__8226_10772__$1);
            var G__10775 = c__4408__auto___10773;
            var G__10776 = cljs.core.count.call(null, c__4408__auto___10773);
            var G__10777 = 0;
            seq__8226_10762 = G__10774;
            chunk__8227_10763 = G__10775;
            count__8228_10764 = G__10776;
            i__8229_10765 = G__10777;
            continue;
          } else {
            var arg__5130__auto___10778 = cljs.core.first.call(null, seq__8226_10772__$1);
            a__5129__auto__.push(arg__5130__auto___10778);
            var G__10779 = cljs.core.next.call(null, seq__8226_10772__$1);
            var G__10780 = null;
            var G__10781 = 0;
            var G__10782 = 0;
            seq__8226_10762 = G__10779;
            chunk__8227_10763 = G__10780;
            count__8228_10764 = G__10781;
            i__8229_10765 = G__10782;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.polygon.apply(null, a__5129__auto__);
  };
  var polygon = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return polygon__delegate.call(this, args__5128__auto__);
  };
  polygon.cljs$lang$maxFixedArity = 0;
  polygon.cljs$lang$applyTo = function(arglist__10783) {
    var args__5128__auto__ = cljs.core.seq(arglist__10783);
    return polygon__delegate(args__5128__auto__);
  };
  polygon.cljs$core$IFn$_invoke$arity$variadic = polygon__delegate;
  return polygon;
}();
quiescent.dom.polyline = function() {
  var polyline__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8234_10784 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8235_10785 = null;
    var count__8236_10786 = 0;
    var i__8237_10787 = 0;
    while (true) {
      if (i__8237_10787 < count__8236_10786) {
        var arg__5130__auto___10788 = cljs.core._nth.call(null, chunk__8235_10785, i__8237_10787);
        a__5129__auto__.push(arg__5130__auto___10788);
        var G__10789 = seq__8234_10784;
        var G__10790 = chunk__8235_10785;
        var G__10791 = count__8236_10786;
        var G__10792 = i__8237_10787 + 1;
        seq__8234_10784 = G__10789;
        chunk__8235_10785 = G__10790;
        count__8236_10786 = G__10791;
        i__8237_10787 = G__10792;
        continue;
      } else {
        var temp__4126__auto___10793 = cljs.core.seq.call(null, seq__8234_10784);
        if (temp__4126__auto___10793) {
          var seq__8234_10794__$1 = temp__4126__auto___10793;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8234_10794__$1)) {
            var c__4408__auto___10795 = cljs.core.chunk_first.call(null, seq__8234_10794__$1);
            var G__10796 = cljs.core.chunk_rest.call(null, seq__8234_10794__$1);
            var G__10797 = c__4408__auto___10795;
            var G__10798 = cljs.core.count.call(null, c__4408__auto___10795);
            var G__10799 = 0;
            seq__8234_10784 = G__10796;
            chunk__8235_10785 = G__10797;
            count__8236_10786 = G__10798;
            i__8237_10787 = G__10799;
            continue;
          } else {
            var arg__5130__auto___10800 = cljs.core.first.call(null, seq__8234_10794__$1);
            a__5129__auto__.push(arg__5130__auto___10800);
            var G__10801 = cljs.core.next.call(null, seq__8234_10794__$1);
            var G__10802 = null;
            var G__10803 = 0;
            var G__10804 = 0;
            seq__8234_10784 = G__10801;
            chunk__8235_10785 = G__10802;
            count__8236_10786 = G__10803;
            i__8237_10787 = G__10804;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.polyline.apply(null, a__5129__auto__);
  };
  var polyline = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return polyline__delegate.call(this, args__5128__auto__);
  };
  polyline.cljs$lang$maxFixedArity = 0;
  polyline.cljs$lang$applyTo = function(arglist__10805) {
    var args__5128__auto__ = cljs.core.seq(arglist__10805);
    return polyline__delegate(args__5128__auto__);
  };
  polyline.cljs$core$IFn$_invoke$arity$variadic = polyline__delegate;
  return polyline;
}();
quiescent.dom.rect = function() {
  var rect__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8242_10806 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8243_10807 = null;
    var count__8244_10808 = 0;
    var i__8245_10809 = 0;
    while (true) {
      if (i__8245_10809 < count__8244_10808) {
        var arg__5130__auto___10810 = cljs.core._nth.call(null, chunk__8243_10807, i__8245_10809);
        a__5129__auto__.push(arg__5130__auto___10810);
        var G__10811 = seq__8242_10806;
        var G__10812 = chunk__8243_10807;
        var G__10813 = count__8244_10808;
        var G__10814 = i__8245_10809 + 1;
        seq__8242_10806 = G__10811;
        chunk__8243_10807 = G__10812;
        count__8244_10808 = G__10813;
        i__8245_10809 = G__10814;
        continue;
      } else {
        var temp__4126__auto___10815 = cljs.core.seq.call(null, seq__8242_10806);
        if (temp__4126__auto___10815) {
          var seq__8242_10816__$1 = temp__4126__auto___10815;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8242_10816__$1)) {
            var c__4408__auto___10817 = cljs.core.chunk_first.call(null, seq__8242_10816__$1);
            var G__10818 = cljs.core.chunk_rest.call(null, seq__8242_10816__$1);
            var G__10819 = c__4408__auto___10817;
            var G__10820 = cljs.core.count.call(null, c__4408__auto___10817);
            var G__10821 = 0;
            seq__8242_10806 = G__10818;
            chunk__8243_10807 = G__10819;
            count__8244_10808 = G__10820;
            i__8245_10809 = G__10821;
            continue;
          } else {
            var arg__5130__auto___10822 = cljs.core.first.call(null, seq__8242_10816__$1);
            a__5129__auto__.push(arg__5130__auto___10822);
            var G__10823 = cljs.core.next.call(null, seq__8242_10816__$1);
            var G__10824 = null;
            var G__10825 = 0;
            var G__10826 = 0;
            seq__8242_10806 = G__10823;
            chunk__8243_10807 = G__10824;
            count__8244_10808 = G__10825;
            i__8245_10809 = G__10826;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.rect.apply(null, a__5129__auto__);
  };
  var rect = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return rect__delegate.call(this, args__5128__auto__);
  };
  rect.cljs$lang$maxFixedArity = 0;
  rect.cljs$lang$applyTo = function(arglist__10827) {
    var args__5128__auto__ = cljs.core.seq(arglist__10827);
    return rect__delegate(args__5128__auto__);
  };
  rect.cljs$core$IFn$_invoke$arity$variadic = rect__delegate;
  return rect;
}();
quiescent.dom.svg = function() {
  var svg__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__8250_10828 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__8251_10829 = null;
    var count__8252_10830 = 0;
    var i__8253_10831 = 0;
    while (true) {
      if (i__8253_10831 < count__8252_10830) {
        var arg__5130__auto___10832 = cljs.core._nth.call(null, chunk__8251_10829, i__8253_10831);
        a__5129__auto__.push(arg__5130__auto___10832);
        var G__10833 = seq__8250_10828;
        var G__10834 = chunk__8251_10829;
        var G__10835 = count__8252_10830;
        var G__10836 = i__8253_10831 + 1;
        seq__8250_10828 = G__10833;
        chunk__8251_10829 = G__10834;
        count__8252_10830 = G__10835;
        i__8253_10831 = G__10836;
        continue;
      } else {
        var temp__4126__auto___10837 = cljs.core.seq.call(null, seq__8250_10828);
        if (temp__4126__auto___10837) {
          var seq__8250_10838__$1 = temp__4126__auto___10837;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8250_10838__$1)) {
            var c__4408__auto___10839 = cljs.core.chunk_first.call(null, seq__8250_10838__$1);
            var G__10840 = cljs.core.chunk_rest.call(null, seq__8250_10838__$1);
            var G__10841 = c__4408__auto___10839;
            var G__10842 = cljs.core.count.call(null, c__4408__auto___10839);
            var G__10843 = 0;
            seq__8250_10828 = G__10840;
            chunk__8251_10829 = G__10841;
            count__8252_10830 = G__10842;
            i__8253_10831 = G__10843;
            continue;
          } else {
            var arg__5130__auto___10844 = cljs.core.first.call(null, seq__8250_10838__$1);
            a__5129__auto__.push(arg__5130__auto___10844);
            var G__10845 = cljs.core.next.call(null, seq__8250_10838__$1);
            var G__10846 = null;
            var G__10847 = 0;
            var G__10848 = 0;
            seq__8250_10828 = G__10845;
            chunk__8251_10829 = G__10846;
            count__8252_10830 = G__10847;
            i__8253_10831 = G__10848;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.svg.apply(null, a__5129__auto__);
  };
  var svg = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return svg__delegate.call(this, args__5128__auto__);
  };
  svg.cljs$lang$maxFixedArity = 0;
  svg.cljs$lang$applyTo = function(arglist__10849) {
    var args__5128__auto__ = cljs.core.seq(arglist__10849);
    return svg__delegate(args__5128__auto__);
  };
  svg.cljs$core$IFn$_invoke$arity$variadic = svg__delegate;
  return svg;
}();
quiescent.dom.text = function() {
  var text__delegate = function(args__5128__auto__) {
    var a__5129__auto__ = [];
    a__5129__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__5128__auto__)));
    var seq__7562_10850 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__5128__auto__));
    var chunk__7563_10851 = null;
    var count__7564_10852 = 0;
    var i__7565_10853 = 0;
    while (true) {
      if (i__7565_10853 < count__7564_10852) {
        var arg__5130__auto___10854 = cljs.core._nth.call(null, chunk__7563_10851, i__7565_10853);
        a__5129__auto__.push(arg__5130__auto___10854);
        var G__10855 = seq__7562_10850;
        var G__10856 = chunk__7563_10851;
        var G__10857 = count__7564_10852;
        var G__10858 = i__7565_10853 + 1;
        seq__7562_10850 = G__10855;
        chunk__7563_10851 = G__10856;
        count__7564_10852 = G__10857;
        i__7565_10853 = G__10858;
        continue;
      } else {
        var temp__4126__auto___10859 = cljs.core.seq.call(null, seq__7562_10850);
        if (temp__4126__auto___10859) {
          var seq__7562_10860__$1 = temp__4126__auto___10859;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7562_10860__$1)) {
            var c__4408__auto___10861 = cljs.core.chunk_first.call(null, seq__7562_10860__$1);
            var G__10862 = cljs.core.chunk_rest.call(null, seq__7562_10860__$1);
            var G__10863 = c__4408__auto___10861;
            var G__10864 = cljs.core.count.call(null, c__4408__auto___10861);
            var G__10865 = 0;
            seq__7562_10850 = G__10862;
            chunk__7563_10851 = G__10863;
            count__7564_10852 = G__10864;
            i__7565_10853 = G__10865;
            continue;
          } else {
            var arg__5130__auto___10866 = cljs.core.first.call(null, seq__7562_10860__$1);
            a__5129__auto__.push(arg__5130__auto___10866);
            var G__10867 = cljs.core.next.call(null, seq__7562_10860__$1);
            var G__10868 = null;
            var G__10869 = 0;
            var G__10870 = 0;
            seq__7562_10850 = G__10867;
            chunk__7563_10851 = G__10868;
            count__7564_10852 = G__10869;
            i__7565_10853 = G__10870;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.text.apply(null, a__5129__auto__);
  };
  var text = function(var_args) {
    var args__5128__auto__ = null;
    if (arguments.length > 0) {
      args__5128__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return text__delegate.call(this, args__5128__auto__);
  };
  text.cljs$lang$maxFixedArity = 0;
  text.cljs$lang$applyTo = function(arglist__10871) {
    var args__5128__auto__ = cljs.core.seq(arglist__10871);
    return text__delegate(args__5128__auto__);
  };
  text.cljs$core$IFn$_invoke$arity$variadic = text__delegate;
  return text;
}();
quiescent.dom.defined_tags = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "thead", "thead", -291875296), new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.Keyword(null, "del", "del", 574975584), new cljs.core.Keyword(null, "fieldset", "fieldset", -1949770816), new cljs.core.Keyword(null, "q", "q", 689001697), new cljs.core.Keyword(null, "figure", "figure", -561394079), new cljs.core.Keyword(null, "aside", "aside", 1414397537), new cljs.core.Keyword(null, 
"figcaption", "figcaption", -1790122047), new cljs.core.Keyword(null, "video", "video", 156888130), new cljs.core.Keyword(null, "address", "address", 559499426), new cljs.core.Keyword(null, "caption", "caption", -855383902), new cljs.core.Keyword(null, "bdi", "bdi", -1323025886), new cljs.core.Keyword(null, "rp", "rp", 2006698083), new cljs.core.Keyword(null, "hr", "hr", 1377740067), new cljs.core.Keyword(null, "dd", "dd", -1340437629), new cljs.core.Keyword(null, "meta", "meta", 1499536964), new cljs.core.Keyword(null, 
"tbody", "tbody", -80678300), new cljs.core.Keyword(null, "table", "table", -564943036), new cljs.core.Keyword(null, "ul", "ul", -1349521403), new cljs.core.Keyword(null, "pre", "pre", 2118456869), new cljs.core.Keyword(null, "sup", "sup", -2039492346), new cljs.core.Keyword(null, "script", "script", -1304443801), new cljs.core.Keyword(null, "big", "big", 903550151), new cljs.core.Keyword(null, "button", "button", 1456579943), new cljs.core.Keyword(null, "dfn", "dfn", 241908167), new cljs.core.Keyword(null, 
"sub", "sub", -2093760025), new cljs.core.Keyword(null, "mark", "mark", -373816345), new cljs.core.Keyword(null, "wbr", "wbr", 228661800), new cljs.core.Keyword(null, "strong", "strong", 269529E3), new cljs.core.Keyword(null, "td", "td", 1479933353), new cljs.core.Keyword(null, "li", "li", 723558921), new cljs.core.Keyword(null, "dt", "dt", -368444759), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "th", "th", -545608566), new cljs.core.Keyword(null, "time", 
"time", 1385887882), new cljs.core.Keyword(null, "optgroup", "optgroup", 1738282218), new cljs.core.Keyword(null, "iframe", "iframe", 884422026), new cljs.core.Keyword(null, "tr", "tr", -1424774646), new cljs.core.Keyword(null, "circle", "circle", 1903212362), new cljs.core.Keyword(null, "article", "article", -21685045), new cljs.core.Keyword(null, "legend", "legend", -1027192245), new cljs.core.Keyword(null, "em", "em", 707813035), new cljs.core.Keyword(null, "kbd", "kbd", 316156875), new cljs.core.Keyword(null, 
"abbr", "abbr", 2088591884), new cljs.core.Keyword(null, "source", "source", -433931539), new cljs.core.Keyword(null, "output", "output", -1105869043), new cljs.core.Keyword(null, "ins", "ins", -1021983570), new cljs.core.Keyword(null, "footer", "footer", 1606445390), new cljs.core.Keyword(null, "header", "header", 119441134), new cljs.core.Keyword(null, "datalist", "datalist", -1235043474), new cljs.core.Keyword(null, "tfoot", "tfoot", -701599890), new cljs.core.Keyword(null, "s", "s", 1705939918), 
new cljs.core.Keyword(null, "h5", "h5", -1829156625), new cljs.core.Keyword(null, "canvas", "canvas", -1798817489), new cljs.core.Keyword(null, "param", "param", 2013631823), new cljs.core.Keyword(null, "title", "title", 636505583), new cljs.core.Keyword(null, "small", "small", 2133478704), new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.Keyword(null, "textarea", "textarea", -650375824), new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.Keyword(null, "option", 
"option", 65132272), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "samp", "samp", 1506141136), new cljs.core.Keyword(null, "h4", "h4", 2004862993), new cljs.core.Keyword(null, "head", "head", -771383919), new cljs.core.Keyword(null, "g", "g", 1738089905), new cljs.core.Keyword(null, "ol", "ol", 932524051), new cljs.core.Keyword(null, "details", "details", 1956795411), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "var", 
"var", -769682797), new cljs.core.Keyword(null, "h6", "h6", 557293780), new cljs.core.Keyword(null, "link", "link", -1769163468), new cljs.core.Keyword(null, "col", "col", -1959363084), new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.Keyword(null, "rt", "rt", 623480692), new cljs.core.Keyword(null, "colgroup", "colgroup", 651118645), new cljs.core.Keyword(null, "meter", "meter", -187641611), new cljs.core.Keyword(null, "svg", "svg", 856789142), new cljs.core.Keyword(null, 
"code", "code", 1586293142), new cljs.core.Keyword(null, "bdo", "bdo", -2131148202), new cljs.core.Keyword(null, "b", "b", 1482224470), new cljs.core.Keyword(null, "noscript", "noscript", -704777289), new cljs.core.Keyword(null, "h2", "h2", -372662728), new cljs.core.Keyword(null, "area", "area", 472007256), new cljs.core.Keyword(null, "br", "br", 934104792), new cljs.core.Keyword(null, "form", "form", -1624062471), new cljs.core.Keyword(null, "audio", "audio", 1819127321), new cljs.core.Keyword(null, 
"input", "input", 556931961), new cljs.core.Keyword(null, "menuitem", "menuitem", 1004047353), new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.Keyword(null, "h1", "h1", -1896887462), new cljs.core.Keyword(null, "progress", "progress", 244323547), new cljs.core.Keyword(null, "main", "main", -2117802661), new cljs.core.Keyword(null, "embed", "embed", -1354913349), new cljs.core.Keyword(null, "h3", "h3", 2067611163), new cljs.core.Keyword(null, "body", "body", -2049205669), new cljs.core.Keyword(null, 
"keygen", "keygen", -571693253), new cljs.core.Keyword(null, "polyline", "polyline", -1731551044), new cljs.core.Keyword(null, "cite", "cite", 1909439996), new cljs.core.Keyword(null, "rect", "rect", -108902628), new cljs.core.Keyword(null, "p", "p", 151049309), new cljs.core.Keyword(null, "nav", "nav", 719540477), new cljs.core.Keyword(null, "ruby", "ruby", 2000737661), new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "object", "object", 1474613949), new cljs.core.Keyword(null, 
"i", "i", -1386841315), new cljs.core.Keyword(null, "menu", "menu", 352255198), new cljs.core.Keyword(null, "blockquote", "blockquote", 372264190), new cljs.core.Keyword(null, "img", "img", 1442687358), new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.Keyword(null, "dl", "dl", -2140151713), new cljs.core.Keyword(null, "select", "select", 1147833503), new cljs.core.Keyword(null, "polygon", "polygon", 837053759), new cljs.core.Keyword(null, "html", "html", -998796897), new cljs.core.Keyword(null, 
"text", "text", -1790561697), new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.Keyword(null, "track", "track", 195787487), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "u", "u", -1156634785)], [quiescent.dom.thead, quiescent.dom.path, quiescent.dom.del, quiescent.dom.fieldset, quiescent.dom.q, quiescent.dom.figure, quiescent.dom.aside, quiescent.dom.figcaption, quiescent.dom.video, quiescent.dom.address, quiescent.dom.caption, quiescent.dom.bdi, 
quiescent.dom.rp, quiescent.dom.hr, quiescent.dom.dd, quiescent.dom.meta, quiescent.dom.tbody, quiescent.dom.table, quiescent.dom.ul, quiescent.dom.pre, quiescent.dom.sup, quiescent.dom.script, quiescent.dom.big, quiescent.dom.button, quiescent.dom.dfn, quiescent.dom.sub, quiescent.dom.mark, quiescent.dom.wbr, quiescent.dom.strong, quiescent.dom.td, quiescent.dom.li, quiescent.dom.dt, quiescent.dom.section, quiescent.dom.th, quiescent.dom.time, quiescent.dom.optgroup, quiescent.dom.iframe, quiescent.dom.tr, 
quiescent.dom.circle, quiescent.dom.article, quiescent.dom.legend, quiescent.dom.em, quiescent.dom.kbd, quiescent.dom.abbr, quiescent.dom.source, quiescent.dom.output, quiescent.dom.ins, quiescent.dom.footer, quiescent.dom.header, quiescent.dom.datalist, quiescent.dom.tfoot, quiescent.dom.s, quiescent.dom.h5, quiescent.dom.canvas, quiescent.dom.param, quiescent.dom.title, quiescent.dom.small, quiescent.dom.style, quiescent.dom.textarea, quiescent.dom.div, quiescent.dom.option, quiescent.dom.summary, 
quiescent.dom.samp, quiescent.dom.h4, quiescent.dom.head, quiescent.dom.g, quiescent.dom.ol, quiescent.dom.details, quiescent.dom.line, quiescent.dom.var$, quiescent.dom.h6, quiescent.dom.link, quiescent.dom.col, quiescent.dom.label, quiescent.dom.rt, quiescent.dom.colgroup, quiescent.dom.meter, quiescent.dom.svg, quiescent.dom.code, quiescent.dom.bdo, quiescent.dom.b, quiescent.dom.noscript, quiescent.dom.h2, quiescent.dom.area, quiescent.dom.br, quiescent.dom.form, quiescent.dom.audio, quiescent.dom.input, 
quiescent.dom.menuitem, quiescent.dom.base, quiescent.dom.h1, quiescent.dom.progress, quiescent.dom.main, quiescent.dom.embed, quiescent.dom.h3, quiescent.dom.body, quiescent.dom.keygen, quiescent.dom.polyline, quiescent.dom.cite, quiescent.dom.rect, quiescent.dom.p, quiescent.dom.nav, quiescent.dom.ruby, quiescent.dom.map, quiescent.dom.object, quiescent.dom.i, quiescent.dom.menu, quiescent.dom.blockquote, quiescent.dom.img, quiescent.dom.a, quiescent.dom.dl, quiescent.dom.select, quiescent.dom.polygon, 
quiescent.dom.html, quiescent.dom.text, quiescent.dom.span, quiescent.dom.track, quiescent.dom.data, quiescent.dom.u]);
goog.provide("wishare.timeline");
goog.require("cljs.core");
goog.require("quiescent.dom");
goog.require("quiescent.dom");
goog.require("quiescent");
goog.require("quiescent");
wishare.timeline.Event = quiescent.component.call(null, function(p__13806) {
  var map__13807 = p__13806;
  var map__13807__$1 = cljs.core.seq_QMARK_.call(null, map__13807) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13807) : map__13807;
  var timestamp = cljs.core.get.call(null, map__13807__$1, new cljs.core.Keyword(null, "timestamp", "timestamp", 579478971));
  var title = cljs.core.get.call(null, map__13807__$1, new cljs.core.Keyword(null, "title", "title", 636505583));
  return quiescent.dom.li.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "list-group-item"], null), quiescent.dom.p.call(null, cljs.core.PersistentArrayMap.EMPTY, quiescent.dom.span.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "description"], null), title), quiescent.dom.small.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "className", "className", -1983287057), "pull-right timestamp"], null), timestamp)));
});
wishare.timeline.Timeline = quiescent.component.call(null, function(items, mode) {
  return quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "col-md-4 side-pane"], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "panel panel-default timeline"], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "panel-heading"], 
  null), quiescent.dom.h2.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "panel-title"], null), "Recent events")), cljs.core.apply.call(null, quiescent.dom.ul, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "list-group"], null), cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "readonly", "readonly", -1101398934)) ? null : cljs.core.map.call(null, wishare.timeline.Event, 
  items))));
});
goog.provide("wishare.wishlist");
goog.require("cljs.core");
goog.require("quiescent.dom");
goog.require("quiescent.dom");
goog.require("quiescent");
goog.require("quiescent");
wishare.wishlist.Wish = function Wish(extension) {
  return quiescent.component.call(null, function(data) {
    var vec__14519 = extension.call(null, data);
    var map__14520 = cljs.core.nth.call(null, vec__14519, 0, null);
    var map__14520__$1 = cljs.core.seq_QMARK_.call(null, map__14520) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14520) : map__14520;
    var image = cljs.core.get.call(null, map__14520__$1, new cljs.core.Keyword(null, "image", "image", -58725096));
    var title = cljs.core.get.call(null, map__14520__$1, new cljs.core.Keyword(null, "title", "title", 636505583));
    var id = cljs.core.get.call(null, map__14520__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
    var elems = cljs.core.nthnext.call(null, vec__14519, 1);
    return cljs.core.apply.call(null, quiescent.dom.li, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "list-group-item wish-item"], null), quiescent.dom.img.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "className", "className", -1983287057), "img-thumbnail photo image32x32", new cljs.core.Keyword(null, "src", "src", -1651076051), function() {
      var or__3639__auto__ = image;
      if (cljs.core.truth_(or__3639__auto__)) {
        return or__3639__auto__;
      } else {
        return "/img/nophoto.png";
      }
    }(), new cljs.core.Keyword(null, "alt", "alt", -3214426), "Wish image thumbnail"], null)), cljs.core.truth_(id) ? quiescent.dom.a.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "href", "href", -793805698), "#", new cljs.core.Keyword(null, "className", "className", -1983287057), "title"], null), title) : quiescent.dom.span.call(null, cljs.core.PersistentArrayMap.EMPTY, title), elems);
  });
};
wishare.wishlist.ROWish = wishare.wishlist.Wish.call(null, function(data) {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.dissoc.call(null, data, new cljs.core.Keyword(null, "id", "id", -1388402092))], null);
});
wishare.wishlist.MyWish = function() {
  var btn = function btn(cls, text) {
    return quiescent.dom.button.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "className", "className", -1983287057), "btn badge btn-default " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cls), new cljs.core.Keyword(null, "type", "type", 1174270348), "button"], null), quiescent.dom.span.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "glyphicon glyphicon-edit"], null)), text);
  };
  return wishare.wishlist.Wish.call(null, function(data) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [data, btn.call(null, "edit", "Edit"), btn.call(null, "remove", "Remove")], null);
  });
}();
wishare.wishlist.FriendWish = wishare.wishlist.Wish.call(null, function(data) {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [data], null);
});
wishare.wishlist.Wishlist = quiescent.component.call(null, function(items, heading, mode) {
  return quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "panel panel-default wishlist"], null), heading, cljs.core.apply.call(null, cljs.core.partial.call(null, quiescent.dom.ul, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "wishlist list-group"], null), cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "my-own", "my-own", -1841146167)) ? 
  quiescent.dom.li.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "list-group-item add-wish"], null), quiescent.dom.button.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), "button", new cljs.core.Keyword(null, "className", "className", -1983287057), "btn btn-default btn-block add-wish"], null), "Add Wish Item")) : null), function() {
    var item = function() {
      var G__14521 = mode instanceof cljs.core.Keyword ? mode.fqn : null;
      switch(G__14521) {
        case "my-own":
          return wishare.wishlist.MyWish;
          break;
        case "readonly":
          return wishare.wishlist.ROWish;
          break;
        default:
          return wishare.wishlist.FriendWish;
      }
    }();
    return cljs.core.map.call(null, item, items);
  }()));
});
goog.provide("wishare.friends");
goog.require("cljs.core");
goog.require("quiescent.dom");
goog.require("quiescent.dom");
goog.require("quiescent");
goog.require("quiescent");
wishare.friends.Friend = quiescent.component.call(null, function(p__14523) {
  var map__14524 = p__14523;
  var map__14524__$1 = cljs.core.seq_QMARK_.call(null, map__14524) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14524) : map__14524;
  var to_me_QMARK_ = cljs.core.get.call(null, map__14524__$1, new cljs.core.Keyword(null, "to-me?", "to-me?", -2077154767), false);
  var avatar_url = cljs.core.get.call(null, map__14524__$1, new cljs.core.Keyword(null, "avatar-url", "avatar-url", -1034626103));
  var real_name = cljs.core.get.call(null, map__14524__$1, new cljs.core.Keyword(null, "real-name", "real-name", 301436383));
  var login = cljs.core.get.call(null, map__14524__$1, new cljs.core.Keyword(null, "login", "login", 55217519));
  var btn = function(map__14524, map__14524__$1, to_me_QMARK_, avatar_url, real_name, login) {
    return function btn(cls, text) {
      return quiescent.dom.button.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "badge btn btn-default " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cls)], null), text);
    };
  }(map__14524, map__14524__$1, to_me_QMARK_, avatar_url, real_name, login);
  return quiescent.dom.li.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "list-group-item friend"], null), quiescent.dom.img.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "className", "className", -1983287057), "img-thumbnail image64x64", new cljs.core.Keyword(null, "src", "src", -1651076051), function() {
    var or__3639__auto__ = avatar_url;
    if (cljs.core.truth_(or__3639__auto__)) {
      return or__3639__auto__;
    } else {
      return "/img/noavatar.png";
    }
  }(), new cljs.core.Keyword(null, "alt", "alt", -3214426), "avatar"], null)), quiescent.dom.h4.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "display", "display", 242065432), "inline"], null)], null), real_name, quiescent.dom.small.call(null, cljs.core.PersistentArrayMap.EMPTY, quiescent.dom.a.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "href", "href", -793805698), "#"], null), login))), cljs.core.truth_(to_me_QMARK_) ? btn.call(null, "remove-friend", "Remove from friends") : btn.call(null, "add-friend", "Add to friends"));
});
wishare.friends.FriendList = quiescent.component.call(null, function(items, heading, mode) {
  return quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "panel panel-default friends"], null), heading, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "read-only", "read-only", -191706886)) ? null : cljs.core.apply.call(null, quiescent.dom.ul, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "friends list-group"], null), cljs.core.map.call(null, 
  wishare.friends.Friend, items)));
});
goog.provide("wishare.profile");
goog.require("cljs.core");
goog.require("quiescent.dom");
goog.require("quiescent.dom");
goog.require("quiescent");
goog.require("quiescent");
wishare.profile.UserHeader = quiescent.component.call(null, function(p__13777, mode) {
  var map__13778 = p__13777;
  var map__13778__$1 = cljs.core.seq_QMARK_.call(null, map__13778) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13778) : map__13778;
  var friend_QMARK_ = cljs.core.get.call(null, map__13778__$1, new cljs.core.Keyword(null, "friend?", "friend?", 1903697798), false);
  var nickname = cljs.core.get.call(null, map__13778__$1, new cljs.core.Keyword(null, "nickname", "nickname", -802027190));
  var name = cljs.core.get.call(null, map__13778__$1, new cljs.core.Keyword(null, "name", "name", 1843675177));
  var id = cljs.core.get.call(null, map__13778__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
  var avatar = cljs.core.get.call(null, map__13778__$1, new cljs.core.Keyword(null, "avatar", "avatar", -1607499307), null);
  return quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "page-header panel panel-default col-md-12"], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "panel-body"], null), quiescent.dom.img.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", -1651076051), function() {
    var or__3639__auto__ = avatar;
    if (cljs.core.truth_(or__3639__auto__)) {
      return or__3639__auto__;
    } else {
      return "/img/noavatar.png";
    }
  }(), new cljs.core.Keyword(null, "alt", "alt", -3214426), "avatar", new cljs.core.Keyword(null, "className", "className", -1983287057), "img-thumbnail pull-left avatar image120x120"], null)), quiescent.dom.h1.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "user"], null), name, quiescent.dom.small.call(null, cljs.core.PersistentArrayMap.EMPTY, nickname)), cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
  2, [new cljs.core.Keyword(null, "my-own", "my-own", -1841146167), null, new cljs.core.Keyword(null, "readonly", "readonly", -1101398934), null], null), null)).call(null, mode)) ? null : cljs.core.truth_(friend_QMARK_) ? quiescent.dom.button.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "btn btn-xs btn-danger remove-friend"], null), "Remove from friends") : quiescent.dom.button.call(null, new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "btn btn-xs btn-success add-friend"], null), "Add to friends")));
});
goog.provide("wishare.core");
goog.require("cljs.core");
goog.require("wishare.timeline");
goog.require("wishare.timeline");
goog.require("wishare.profile");
goog.require("wishare.wishlist");
goog.require("quiescent");
goog.require("wishare.wishlist");
goog.require("quiescent.dom");
goog.require("wishare.friends");
goog.require("wishare.friends");
goog.require("quiescent");
goog.require("wishare.profile");
goog.require("quiescent.dom");
wishare.core.state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "flag", "flag", 1088647881), false, new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "my-own", "my-own", -1841146167), new cljs.core.Keyword(null, "header", "header", 119441134), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1843675177), "Vault Boy", new cljs.core.Keyword(null, "nickname", "nickname", -802027190), 
"vault_boy", new cljs.core.Keyword(null, "avatar", "avatar", -1607499307), "http://www.g0l.ru/imgs/avatars/263.jpg"], null), new cljs.core.Keyword(null, "dashboard", "dashboard", -631747508), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "active", "active", 1895962068), new cljs.core.Keyword(null, "wishlist", "wishlist", 352427404), new cljs.core.Keyword(null, "items", "items", 1031954938), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "title", "title", 636505583), "PipBoy 3K", new cljs.core.Keyword(null, "id", "id", -1388402092), 1, new cljs.core.Keyword(null, "image", "image", -58725096), "http://www.fordesigner.com/imguploads/Image/cjbc/zcool/png20080526/1211811605.png"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "title", "title", 636505583), "Tesla", new cljs.core.Keyword(null, "id", "id", -1388402092), 2, new cljs.core.Keyword(null, 
"image", "image", -58725096), "http://ev-cars.ru/sites/default/files/styles/icon-64x64/public/gallery/2012/12/04/2013-Tesla-Model-S-front-1.jpg"], null)], null)], null), new cljs.core.Keyword(null, "dashboard-backup", "dashboard-backup", -639925098), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "active", "active", 1895962068), new cljs.core.Keyword(null, "friends", "friends", -127631374), new cljs.core.Keyword(null, "items", "items", 1031954938), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "real-name", "real-name", 301436383), "John Dowe", new cljs.core.Keyword(null, "login", "login", 55217519), "jd", new cljs.core.Keyword(null, "id", "id", -1388402092), 100], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "real-name", "real-name", 301436383), "Moe", new cljs.core.Keyword(null, "login", "login", 55217519), "moe", new cljs.core.Keyword(null, 
"id", "id", -1388402092), 101], null)], null)], null), new cljs.core.Keyword(null, "timeline", "timeline", 192903161), cljs.core.List.EMPTY], null));
wishare.core.switch_dashboard_to_BANG_ = function switch_dashboard_to_BANG_(board) {
  return cljs.core.swap_BANG_.call(null, wishare.core.state, function(data) {
    if (cljs.core._EQ_.call(null, board, cljs.core.get_in.call(null, data, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "dashboard", "dashboard", -631747508), new cljs.core.Keyword(null, "active", "active", 1895962068)], null)))) {
      console.error("Dashboard " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(board) + " is already active!");
      return data;
    } else {
      var backup = data.call(null, new cljs.core.Keyword(null, "dashboard-backup", "dashboard-backup", -639925098));
      var current = data.call(null, new cljs.core.Keyword(null, "dashboard", "dashboard", -631747508));
      return cljs.core.assoc.call(null, data, new cljs.core.Keyword(null, "dashboard-backup", "dashboard-backup", -639925098), current, new cljs.core.Keyword(null, "dashboard", "dashboard", -631747508), backup);
    }
  });
};
wishare.core.use_the_force_BANG_ = function use_the_force_BANG_() {
  return cljs.core.swap_BANG_.call(null, wishare.core.state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "flag", "flag", 1088647881)], null), cljs.core.not);
};
wishare.core.dashboard = function dashboard(tabs) {
  var config = cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, tabs));
  var tabs__$1 = cljs.core.map.call(null, cljs.core.first, config);
  var config__$1 = cljs.core.reduce.call(null, cljs.core.conj, cljs.core.PersistentArrayMap.EMPTY, config);
  return quiescent.component.call(null, function(config, tabs__$1, config__$1) {
    return function(p__15562, mode) {
      var map__15563 = p__15562;
      var map__15563__$1 = cljs.core.seq_QMARK_.call(null, map__15563) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15563) : map__15563;
      var items = cljs.core.get.call(null, map__15563__$1, new cljs.core.Keyword(null, "items", "items", 1031954938));
      var active = cljs.core.get.call(null, map__15563__$1, new cljs.core.Keyword(null, "active", "active", 1895962068));
      var heading = quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "panel-heading"], null), cljs.core.apply.call(null, quiescent.dom.ul, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "className", "className", -1983287057), "nav nav-pills nav-justified", new cljs.core.Keyword(null, "role", "role", -736691072), "tablist"], null), function() {
        var iter__4377__auto__ = function(map__15563, map__15563__$1, items, active, config, tabs__$1, config__$1) {
          return function iter__15564(s__15565) {
            return new cljs.core.LazySeq(null, function(map__15563, map__15563__$1, items, active, config, tabs__$1, config__$1) {
              return function() {
                var s__15565__$1 = s__15565;
                while (true) {
                  var temp__4126__auto__ = cljs.core.seq.call(null, s__15565__$1);
                  if (temp__4126__auto__) {
                    var s__15565__$2 = temp__4126__auto__;
                    if (cljs.core.chunked_seq_QMARK_.call(null, s__15565__$2)) {
                      var c__4375__auto__ = cljs.core.chunk_first.call(null, s__15565__$2);
                      var size__4376__auto__ = cljs.core.count.call(null, c__4375__auto__);
                      var b__15567 = cljs.core.chunk_buffer.call(null, size__4376__auto__);
                      if (function() {
                        var i__15566 = 0;
                        while (true) {
                          if (i__15566 < size__4376__auto__) {
                            var tab = cljs.core._nth.call(null, c__4375__auto__, i__15566);
                            var map__15570 = config__$1.call(null, tab);
                            var map__15570__$1 = cljs.core.seq_QMARK_.call(null, map__15570) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15570) : map__15570;
                            var modes = cljs.core.get.call(null, map__15570__$1, new cljs.core.Keyword(null, "modes", "modes", -1377787092));
                            var title = cljs.core.get.call(null, map__15570__$1, new cljs.core.Keyword(null, "title", "title", 636505583));
                            if (cljs.core.truth_(modes.call(null, mode))) {
                              cljs.core.chunk_append.call(null, b__15567, cljs.core._EQ_.call(null, tab, active) ? quiescent.dom.li.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "active"], null), quiescent.dom.a.call(null, cljs.core.PersistentArrayMap.EMPTY, title)) : quiescent.dom.li.call(null, cljs.core.PersistentArrayMap.EMPTY, quiescent.dom.a.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
                              "onClick", "onClick", -1991238530), function(i__15566, s__15565__$1, map__15570, map__15570__$1, modes, title, tab, c__4375__auto__, size__4376__auto__, b__15567, s__15565__$2, temp__4126__auto__, map__15563, map__15563__$1, items, active, config, tabs__$1, config__$1) {
                                return function(_) {
                                  return wishare.core.switch_dashboard_to_BANG_.call(null, tab);
                                };
                              }(i__15566, s__15565__$1, map__15570, map__15570__$1, modes, title, tab, c__4375__auto__, size__4376__auto__, b__15567, s__15565__$2, temp__4126__auto__, map__15563, map__15563__$1, items, active, config, tabs__$1, config__$1), new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "cursor", "cursor", 1011937484), "pointer"], null)], null), title)));
                              var G__15572 = i__15566 + 1;
                              i__15566 = G__15572;
                              continue;
                            } else {
                              var G__15573 = i__15566 + 1;
                              i__15566 = G__15573;
                              continue;
                            }
                          } else {
                            return true;
                          }
                          break;
                        }
                      }()) {
                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15567), iter__15564.call(null, cljs.core.chunk_rest.call(null, s__15565__$2)));
                      } else {
                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15567), null);
                      }
                    } else {
                      var tab = cljs.core.first.call(null, s__15565__$2);
                      var map__15571 = config__$1.call(null, tab);
                      var map__15571__$1 = cljs.core.seq_QMARK_.call(null, map__15571) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15571) : map__15571;
                      var modes = cljs.core.get.call(null, map__15571__$1, new cljs.core.Keyword(null, "modes", "modes", -1377787092));
                      var title = cljs.core.get.call(null, map__15571__$1, new cljs.core.Keyword(null, "title", "title", 636505583));
                      if (cljs.core.truth_(modes.call(null, mode))) {
                        return cljs.core.cons.call(null, cljs.core._EQ_.call(null, tab, active) ? quiescent.dom.li.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "active"], null), quiescent.dom.a.call(null, cljs.core.PersistentArrayMap.EMPTY, title)) : quiescent.dom.li.call(null, cljs.core.PersistentArrayMap.EMPTY, quiescent.dom.a.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "onClick", 
                        "onClick", -1991238530), function(s__15565__$1, map__15571, map__15571__$1, modes, title, tab, s__15565__$2, temp__4126__auto__, map__15563, map__15563__$1, items, active, config, tabs__$1, config__$1) {
                          return function(_) {
                            return wishare.core.switch_dashboard_to_BANG_.call(null, tab);
                          };
                        }(s__15565__$1, map__15571, map__15571__$1, modes, title, tab, s__15565__$2, temp__4126__auto__, map__15563, map__15563__$1, items, active, config, tabs__$1, config__$1), new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "cursor", "cursor", 1011937484), "pointer"], null)], null), title)), iter__15564.call(null, cljs.core.rest.call(null, s__15565__$2)));
                      } else {
                        var G__15574 = cljs.core.rest.call(null, s__15565__$2);
                        s__15565__$1 = G__15574;
                        continue;
                      }
                    }
                  } else {
                    return null;
                  }
                  break;
                }
              };
            }(map__15563, map__15563__$1, items, active, config, tabs__$1, config__$1), null, null);
          };
        }(map__15563, map__15563__$1, items, active, config, tabs__$1, config__$1);
        return iter__4377__auto__.call(null, tabs__$1);
      }()));
      var comp = cljs.core.get_in.call(null, config__$1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [active, new cljs.core.Keyword(null, "comp", "comp", 1191953630)], null));
      var available_modes = cljs.core.get_in.call(null, config__$1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [active, new cljs.core.Keyword(null, "modes", "modes", -1377787092)], null));
      if (cljs.core.truth_(available_modes.call(null, mode))) {
        return quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "col-md-8 dashboard"], null), comp.call(null, items, heading, mode));
      } else {
        throw "Tab " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(active) + " is not available in mode " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(mode) + "!";
      }
    };
  }(config, tabs__$1, config__$1));
};
wishare.core.mk_page = function mk_page(header_comp, dashboard_comp, timeline_comp) {
  return quiescent.component.call(null, function(p__15577, mode) {
    var map__15578 = p__15577;
    var map__15578__$1 = cljs.core.seq_QMARK_.call(null, map__15578) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15578) : map__15578;
    var data = map__15578__$1;
    var timeline = cljs.core.get.call(null, map__15578__$1, new cljs.core.Keyword(null, "timeline", "timeline", 192903161));
    var dashboard = cljs.core.get.call(null, map__15578__$1, new cljs.core.Keyword(null, "dashboard", "dashboard", -631747508));
    var header = cljs.core.get.call(null, map__15578__$1, new cljs.core.Keyword(null, "header", "header", 119441134));
    var mode__$1 = cljs.core.get.call(null, map__15578__$1, new cljs.core.Keyword(null, "mode", "mode", 654403691));
    return quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "container"], null), quiescent.dom.nav.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "navbar navbar-default"], null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "container-fluid"], 
    null), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "navbar-header"], null), quiescent.dom.a.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "className", "className", -1983287057), "navbar-brand", new cljs.core.Keyword(null, "href", "href", -793805698), "https://clojurecup.com/#/apps/wishare"], null), quiescent.dom.img.call(null, new cljs.core.PersistentArrayMap(null, 
    1, [new cljs.core.Keyword(null, "src", "src", -1651076051), "/img/logo128x128.png"], null)), quiescent.dom.img.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "src", "src", -1651076051), "img/vote-for-us.jpg"], null)))), quiescent.dom.div.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "collapse navbar-collapse"], null), quiescent.dom.ul.call(null, new cljs.core.PersistentArrayMap(null, 
    1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "nav navbar-nav"], null), quiescent.dom.li.call(null, cljs.core.PersistentArrayMap.EMPTY, quiescent.dom.h2.call(null, cljs.core.PersistentArrayMap.EMPTY, quiescent.dom.a.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "https://clojurecup.com/#/apps/wishare"], null), "WiShare! Vote for us!")))))), header_comp.call(null, header, mode__$1)), quiescent.dom.div.call(null, 
    new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), "content col-md-12 panel panel-default"], null), dashboard_comp.call(null, dashboard, mode__$1), timeline_comp.call(null, timeline, mode__$1)));
  });
};
wishare.core.Page = wishare.core.mk_page.call(null, wishare.profile.UserHeader, wishare.core.dashboard.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "wishlist", "wishlist", 352427404), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "comp", "comp", 1191953630), wishare.wishlist.Wishlist, new cljs.core.Keyword(null, "title", "title", 636505583), "Wishlist", new cljs.core.Keyword(null, "modes", "modes", 
-1377787092), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "my-own", "my-own", -1841146167), null, new cljs.core.Keyword(null, "readonly", "readonly", -1101398934), null, new cljs.core.Keyword(null, "friend", "friend", -286879240), null], null), null)], null), new cljs.core.Keyword(null, "friends", "friends", -127631374), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "comp", "comp", 1191953630), wishare.friends.FriendList, 
new cljs.core.Keyword(null, "title", "title", 636505583), "Friends", new cljs.core.Keyword(null, "modes", "modes", -1377787092), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "my-own", "my-own", -1841146167), null, new cljs.core.Keyword(null, "friend", "friend", -286879240), null], null), null)], null)], null)), wishare.timeline.Timeline);
cljs.core.add_watch.call(null, wishare.core.state, new cljs.core.Keyword("wishare.core", "render", "wishare.core/render", 1676163762), function(_, atm, ___$1, data) {
  return quiescent.render.call(null, wishare.core.Page.call(null, data), document.getElementById("root"));
});
wishare.core.renderProfile = function renderProfile() {
  wishare.core.use_the_force_BANG_.call(null);
  var cnt = cljs.core.atom.call(null, 9);
  return window.setInterval(function(cnt) {
    return function() {
      var G__15579__delegate = function(_) {
        var x = cljs.core.swap_BANG_.call(null, cnt, function(cnt) {
          return function(n) {
            if (n > -1) {
              return n - 1;
            } else {
              return 10;
            }
          };
        }(cnt));
        return cljs.core.swap_BANG_.call(null, wishare.core.state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "timeline", "timeline", 192903161)], null), function(x, cnt) {
          return function(l) {
            if (x < 0) {
              return cljs.core.List.EMPTY;
            } else {
              return cljs.core.take.call(null, 5, cljs.core.cons.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "title", "title", 636505583), x > 0 ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x - 1) + "..." : "BOOM!"], null), l));
            }
          };
        }(x, cnt));
      };
      var G__15579 = function(var_args) {
        var _ = null;
        if (arguments.length > 0) {
          _ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__15579__delegate.call(this, _);
      };
      G__15579.cljs$lang$maxFixedArity = 0;
      G__15579.cljs$lang$applyTo = function(arglist__15580) {
        var _ = cljs.core.seq(arglist__15580);
        return G__15579__delegate(_);
      };
      G__15579.cljs$core$IFn$_invoke$arity$variadic = G__15579__delegate;
      return G__15579;
    }();
  }(cnt), 500);
};
goog.exportSymbol("wishare.core.renderProfile", wishare.core.renderProfile);
