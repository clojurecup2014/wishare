/**
 * React v0.11.1
 *
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var t;"undefined"!=typeof window?t=window:"undefined"!=typeof global?t=global:"undefined"!=typeof self&&(t=self),t.React=e()}}(function(){return function e(t,n,r){function o(a,s){if(!n[a]){if(!t[a]){var u="function"==typeof require&&require;if(!s&&u)return u(a,!0);if(i)return i(a,!0);throw new Error("Cannot find module '"+a+"'")}var c=n[a]={exports:{}};t[a][0].call(c.exports,function(e){var n=t[a][1][e];return o(n?n:e)},c,c.exports,e,t,n,r)}return n[a].exports}for(var i="function"==typeof require&&require,a=0;a<r.length;a++)o(r[a]);return o}({1:[function(e,t){"use strict";var n=e("./focusNode"),r={componentDidMount:function(){this.props.autoFocus&&n(this.getDOMNode())}};t.exports=r},{"./focusNode":104}],2:[function(e,t){"use strict";function n(){var e=window.opera;return"object"==typeof e&&"function"==typeof e.version&&parseInt(e.version(),10)<=12}function r(e){return(e.ctrlKey||e.altKey||e.metaKey)&&!(e.ctrlKey&&e.altKey)}var o=e("./EventConstants"),i=e("./EventPropagators"),a=e("./ExecutionEnvironment"),s=e("./SyntheticInputEvent"),u=e("./keyOf"),c=a.canUseDOM&&"TextEvent"in window&&!("documentMode"in document||n()),l=32,p=String.fromCharCode(l),d=o.topLevelTypes,f={beforeInput:{phasedRegistrationNames:{bubbled:u({onBeforeInput:null}),captured:u({onBeforeInputCapture:null})},dependencies:[d.topCompositionEnd,d.topKeyPress,d.topTextInput,d.topPaste]}},h=null,v={eventTypes:f,extractEvents:function(e,t,n,o){var a;if(c)switch(e){case d.topKeyPress:var u=o.which;if(u!==l)return;a=String.fromCharCode(u);break;case d.topTextInput:if(a=o.data,a===p)return;break;default:return}else{switch(e){case d.topPaste:h=null;break;case d.topKeyPress:o.which&&!r(o)&&(h=String.fromCharCode(o.which));break;case d.topCompositionEnd:h=o.data}if(null===h)return;a=h}if(a){var v=s.getPooled(f.beforeInput,n,o);return v.data=a,h=null,i.accumulateTwoPhaseDispatches(v),v}}};t.exports=v},{"./EventConstants":15,"./EventPropagators":20,"./ExecutionEnvironment":21,"./SyntheticInputEvent":84,"./keyOf":125}],3:[function(e,t){"use strict";function n(e,t){return e+t.charAt(0).toUpperCase()+t.substring(1)}var r={columnCount:!0,fillOpacity:!0,flex:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},o=["Webkit","ms","Moz","O"];Object.keys(r).forEach(function(e){o.forEach(function(t){r[n(t,e)]=r[e]})});var i={background:{backgroundImage:!0,backgroundPosition:!0,backgroundRepeat:!0,backgroundColor:!0},border:{borderWidth:!0,borderStyle:!0,borderColor:!0},borderBottom:{borderBottomWidth:!0,borderBottomStyle:!0,borderBottomColor:!0},borderLeft:{borderLeftWidth:!0,borderLeftStyle:!0,borderLeftColor:!0},borderRight:{borderRightWidth:!0,borderRightStyle:!0,borderRightColor:!0},borderTop:{borderTopWidth:!0,borderTopStyle:!0,borderTopColor:!0},font:{fontStyle:!0,fontVariant:!0,fontWeight:!0,fontSize:!0,lineHeight:!0,fontFamily:!0}},a={isUnitlessNumber:r,shorthandPropertyExpansions:i};t.exports=a},{}],4:[function(e,t){"use strict";var n=e("./CSSProperty"),r=e("./dangerousStyleValue"),o=e("./hyphenateStyleName"),i=e("./memoizeStringOnly"),a=i(function(e){return o(e)}),s={createMarkupForStyles:function(e){var t="";for(var n in e)if(e.hasOwnProperty(n)){var o=e[n];null!=o&&(t+=a(n)+":",t+=r(n,o)+";")}return t||null},setValueForStyles:function(e,t){var o=e.style;for(var i in t)if(t.hasOwnProperty(i)){var a=r(i,t[i]);if(a)o[i]=a;else{var s=n.shorthandPropertyExpansions[i];if(s)for(var u in s)o[u]="";else o[i]=""}}}};t.exports=s},{"./CSSProperty":3,"./dangerousStyleValue":99,"./hyphenateStyleName":116,"./memoizeStringOnly":127}],5:[function(e,t){"use strict";function n(){this._callbacks=null,this._contexts=null}var r=e("./PooledClass"),o=e("./invariant"),i=e("./mixInto");i(n,{enqueue:function(e,t){this._callbacks=this._callbacks||[],this._contexts=this._contexts||[],this._callbacks.push(e),this._contexts.push(t)},notifyAll:function(){var e=this._callbacks,t=this._contexts;if(e){o(e.length===t.length),this._callbacks=null,this._contexts=null;for(var n=0,r=e.length;r>n;n++)e[n].call(t[n]);e.length=0,t.length=0}},reset:function(){this._callbacks=null,this._contexts=null},destructor:function(){this.reset()}}),r.addPoolingTo(n),t.exports=n},{"./PooledClass":26,"./invariant":118,"./mixInto":131}],6:[function(e,t){"use strict";function n(e){return"SELECT"===e.nodeName||"INPUT"===e.nodeName&&"file"===e.type}function r(e){var t=M.getPooled(P.change,_,e);C.accumulateTwoPhaseDispatches(t),R.batchedUpdates(o,t)}function o(e){y.enqueueEvents(e),y.processEventQueue()}function i(e,t){I=e,_=t,I.attachEvent("onchange",r)}function a(){I&&(I.detachEvent("onchange",r),I=null,_=null)}function s(e,t,n){return e===O.topChange?n:void 0}function u(e,t,n){e===O.topFocus?(a(),i(t,n)):e===O.topBlur&&a()}function c(e,t){I=e,_=t,T=e.value,N=Object.getOwnPropertyDescriptor(e.constructor.prototype,"value"),Object.defineProperty(I,"value",A),I.attachEvent("onpropertychange",p)}function l(){I&&(delete I.value,I.detachEvent("onpropertychange",p),I=null,_=null,T=null,N=null)}function p(e){if("value"===e.propertyName){var t=e.srcElement.value;t!==T&&(T=t,r(e))}}function d(e,t,n){return e===O.topInput?n:void 0}function f(e,t,n){e===O.topFocus?(l(),c(t,n)):e===O.topBlur&&l()}function h(e){return e!==O.topSelectionChange&&e!==O.topKeyUp&&e!==O.topKeyDown||!I||I.value===T?void 0:(T=I.value,_)}function v(e){return"INPUT"===e.nodeName&&("checkbox"===e.type||"radio"===e.type)}function m(e,t,n){return e===O.topClick?n:void 0}var g=e("./EventConstants"),y=e("./EventPluginHub"),C=e("./EventPropagators"),E=e("./ExecutionEnvironment"),R=e("./ReactUpdates"),M=e("./SyntheticEvent"),D=e("./isEventSupported"),x=e("./isTextInputElement"),b=e("./keyOf"),O=g.topLevelTypes,P={change:{phasedRegistrationNames:{bubbled:b({onChange:null}),captured:b({onChangeCapture:null})},dependencies:[O.topBlur,O.topChange,O.topClick,O.topFocus,O.topInput,O.topKeyDown,O.topKeyUp,O.topSelectionChange]}},I=null,_=null,T=null,N=null,w=!1;E.canUseDOM&&(w=D("change")&&(!("documentMode"in document)||document.documentMode>8));var S=!1;E.canUseDOM&&(S=D("input")&&(!("documentMode"in document)||document.documentMode>9));var A={get:function(){return N.get.call(this)},set:function(e){T=""+e,N.set.call(this,e)}},k={eventTypes:P,extractEvents:function(e,t,r,o){var i,a;if(n(t)?w?i=s:a=u:x(t)?S?i=d:(i=h,a=f):v(t)&&(i=m),i){var c=i(e,t,r);if(c){var l=M.getPooled(P.change,c,o);return C.accumulateTwoPhaseDispatches(l),l}}a&&a(e,t,r)}};t.exports=k},{"./EventConstants":15,"./EventPluginHub":17,"./EventPropagators":20,"./ExecutionEnvironment":21,"./ReactUpdates":74,"./SyntheticEvent":82,"./isEventSupported":119,"./isTextInputElement":121,"./keyOf":125}],7:[function(e,t){"use strict";var n=0,r={createReactRootIndex:function(){return n++}};t.exports=r},{}],8:[function(e,t){"use strict";function n(e){switch(e){case g.topCompositionStart:return C.compositionStart;case g.topCompositionEnd:return C.compositionEnd;case g.topCompositionUpdate:return C.compositionUpdate}}function r(e,t){return e===g.topKeyDown&&t.keyCode===h}function o(e,t){switch(e){case g.topKeyUp:return-1!==f.indexOf(t.keyCode);case g.topKeyDown:return t.keyCode!==h;case g.topKeyPress:case g.topMouseDown:case g.topBlur:return!0;default:return!1}}function i(e){this.root=e,this.startSelection=c.getSelection(e),this.startValue=this.getText()}var a=e("./EventConstants"),s=e("./EventPropagators"),u=e("./ExecutionEnvironment"),c=e("./ReactInputSelection"),l=e("./SyntheticCompositionEvent"),p=e("./getTextContentAccessor"),d=e("./keyOf"),f=[9,13,27,32],h=229,v=u.canUseDOM&&"CompositionEvent"in window,m=!v||"documentMode"in document&&document.documentMode>8&&document.documentMode<=11,g=a.topLevelTypes,y=null,C={compositionEnd:{phasedRegistrationNames:{bubbled:d({onCompositionEnd:null}),captured:d({onCompositionEndCapture:null})},dependencies:[g.topBlur,g.topCompositionEnd,g.topKeyDown,g.topKeyPress,g.topKeyUp,g.topMouseDown]},compositionStart:{phasedRegistrationNames:{bubbled:d({onCompositionStart:null}),captured:d({onCompositionStartCapture:null})},dependencies:[g.topBlur,g.topCompositionStart,g.topKeyDown,g.topKeyPress,g.topKeyUp,g.topMouseDown]},compositionUpdate:{phasedRegistrationNames:{bubbled:d({onCompositionUpdate:null}),captured:d({onCompositionUpdateCapture:null})},dependencies:[g.topBlur,g.topCompositionUpdate,g.topKeyDown,g.topKeyPress,g.topKeyUp,g.topMouseDown]}};i.prototype.getText=function(){return this.root.value||this.root[p()]},i.prototype.getData=function(){var e=this.getText(),t=this.startSelection.start,n=this.startValue.length-this.startSelection.end;return e.substr(t,e.length-n-t)};var E={eventTypes:C,extractEvents:function(e,t,a,u){var c,p;if(v?c=n(e):y?o(e,u)&&(c=C.compositionEnd):r(e,u)&&(c=C.compositionStart),m&&(y||c!==C.compositionStart?c===C.compositionEnd&&y&&(p=y.getData(),y=null):y=new i(t)),c){var d=l.getPooled(c,a,u);return p&&(d.data=p),s.accumulateTwoPhaseDispatches(d),d}}};t.exports=E},{"./EventConstants":15,"./EventPropagators":20,"./ExecutionEnvironment":21,"./ReactInputSelection":56,"./SyntheticCompositionEvent":80,"./getTextContentAccessor":113,"./keyOf":125}],9:[function(e,t){"use strict";function n(e,t,n){e.insertBefore(t,e.childNodes[n]||null)}var r,o=e("./Danger"),i=e("./ReactMultiChildUpdateTypes"),a=e("./getTextContentAccessor"),s=e("./invariant"),u=a();r="textContent"===u?function(e,t){e.textContent=t}:function(e,t){for(;e.firstChild;)e.removeChild(e.firstChild);if(t){var n=e.ownerDocument||document;e.appendChild(n.createTextNode(t))}};var c={dangerouslyReplaceNodeWithMarkup:o.dangerouslyReplaceNodeWithMarkup,updateTextContent:r,processUpdates:function(e,t){for(var a,u=null,c=null,l=0;a=e[l];l++)if(a.type===i.MOVE_EXISTING||a.type===i.REMOVE_NODE){var p=a.fromIndex,d=a.parentNode.childNodes[p],f=a.parentID;s(d),u=u||{},u[f]=u[f]||[],u[f][p]=d,c=c||[],c.push(d)}var h=o.dangerouslyRenderMarkup(t);if(c)for(var v=0;v<c.length;v++)c[v].parentNode.removeChild(c[v]);for(var m=0;a=e[m];m++)switch(a.type){case i.INSERT_MARKUP:n(a.parentNode,h[a.markupIndex],a.toIndex);break;case i.MOVE_EXISTING:n(a.parentNode,u[a.parentID][a.fromIndex],a.toIndex);break;case i.TEXT_CONTENT:r(a.parentNode,a.textContent);break;case i.REMOVE_NODE:}}};t.exports=c},{"./Danger":12,"./ReactMultiChildUpdateTypes":61,"./getTextContentAccessor":113,"./invariant":118}],10:[function(e,t){"use strict";var n=e("./invariant"),r={MUST_USE_ATTRIBUTE:1,MUST_USE_PROPERTY:2,HAS_SIDE_EFFECTS:4,HAS_BOOLEAN_VALUE:8,HAS_NUMERIC_VALUE:16,HAS_POSITIVE_NUMERIC_VALUE:48,HAS_OVERLOADED_BOOLEAN_VALUE:64,injectDOMPropertyConfig:function(e){var t=e.Properties||{},o=e.DOMAttributeNames||{},a=e.DOMPropertyNames||{},s=e.DOMMutationMethods||{};e.isCustomAttribute&&i._isCustomAttributeFunctions.push(e.isCustomAttribute);for(var u in t){n(!i.isStandardName.hasOwnProperty(u)),i.isStandardName[u]=!0;var c=u.toLowerCase();if(i.getPossibleStandardName[c]=u,o.hasOwnProperty(u)){var l=o[u];i.getPossibleStandardName[l]=u,i.getAttributeName[u]=l}else i.getAttributeName[u]=c;i.getPropertyName[u]=a.hasOwnProperty(u)?a[u]:u,i.getMutationMethod[u]=s.hasOwnProperty(u)?s[u]:null;var p=t[u];i.mustUseAttribute[u]=p&r.MUST_USE_ATTRIBUTE,i.mustUseProperty[u]=p&r.MUST_USE_PROPERTY,i.hasSideEffects[u]=p&r.HAS_SIDE_EFFECTS,i.hasBooleanValue[u]=p&r.HAS_BOOLEAN_VALUE,i.hasNumericValue[u]=p&r.HAS_NUMERIC_VALUE,i.hasPositiveNumericValue[u]=p&r.HAS_POSITIVE_NUMERIC_VALUE,i.hasOverloadedBooleanValue[u]=p&r.HAS_OVERLOADED_BOOLEAN_VALUE,n(!i.mustUseAttribute[u]||!i.mustUseProperty[u]),n(i.mustUseProperty[u]||!i.hasSideEffects[u]),n(!!i.hasBooleanValue[u]+!!i.hasNumericValue[u]+!!i.hasOverloadedBooleanValue[u]<=1)}}},o={},i={ID_ATTRIBUTE_NAME:"data-reactid",isStandardName:{},getPossibleStandardName:{},getAttributeName:{},getPropertyName:{},getMutationMethod:{},mustUseAttribute:{},mustUseProperty:{},hasSideEffects:{},hasBooleanValue:{},hasNumericValue:{},hasPositiveNumericValue:{},hasOverloadedBooleanValue:{},_isCustomAttributeFunctions:[],isCustomAttribute:function(e){for(var t=0;t<i._isCustomAttributeFunctions.length;t++){var n=i._isCustomAttributeFunctions[t];if(n(e))return!0}return!1},getDefaultValueForProperty:function(e,t){var n,r=o[e];return r||(o[e]=r={}),t in r||(n=document.createElement(e),r[t]=n[t]),r[t]},injection:r};t.exports=i},{"./invariant":118}],11:[function(e,t){"use strict";function n(e,t){return null==t||r.hasBooleanValue[e]&&!t||r.hasNumericValue[e]&&isNaN(t)||r.hasPositiveNumericValue[e]&&1>t||r.hasOverloadedBooleanValue[e]&&t===!1}var r=e("./DOMProperty"),o=e("./escapeTextForBrowser"),i=e("./memoizeStringOnly"),a=(e("./warning"),i(function(e){return o(e)+'="'})),s={createMarkupForID:function(e){return a(r.ID_ATTRIBUTE_NAME)+o(e)+'"'},createMarkupForProperty:function(e,t){if(r.isStandardName.hasOwnProperty(e)&&r.isStandardName[e]){if(n(e,t))return"";var i=r.getAttributeName[e];return r.hasBooleanValue[e]||r.hasOverloadedBooleanValue[e]&&t===!0?o(i):a(i)+o(t)+'"'}return r.isCustomAttribute(e)?null==t?"":a(e)+o(t)+'"':null},setValueForProperty:function(e,t,o){if(r.isStandardName.hasOwnProperty(t)&&r.isStandardName[t]){var i=r.getMutationMethod[t];if(i)i(e,o);else if(n(t,o))this.deleteValueForProperty(e,t);else if(r.mustUseAttribute[t])e.setAttribute(r.getAttributeName[t],""+o);else{var a=r.getPropertyName[t];r.hasSideEffects[t]&&e[a]===o||(e[a]=o)}}else r.isCustomAttribute(t)&&(null==o?e.removeAttribute(t):e.setAttribute(t,""+o))},deleteValueForProperty:function(e,t){if(r.isStandardName.hasOwnProperty(t)&&r.isStandardName[t]){var n=r.getMutationMethod[t];if(n)n(e,void 0);else if(r.mustUseAttribute[t])e.removeAttribute(r.getAttributeName[t]);else{var o=r.getPropertyName[t],i=r.getDefaultValueForProperty(e.nodeName,o);r.hasSideEffects[t]&&e[o]===i||(e[o]=i)}}else r.isCustomAttribute(t)&&e.removeAttribute(t)}};t.exports=s},{"./DOMProperty":10,"./escapeTextForBrowser":102,"./memoizeStringOnly":127,"./warning":139}],12:[function(e,t){"use strict";function n(e){return e.substring(1,e.indexOf(" "))}var r=e("./ExecutionEnvironment"),o=e("./createNodesFromMarkup"),i=e("./emptyFunction"),a=e("./getMarkupWrap"),s=e("./invariant"),u=/^(<[^ \/>]+)/,c="data-danger-index",l={dangerouslyRenderMarkup:function(e){s(r.canUseDOM);for(var t,l={},p=0;p<e.length;p++)s(e[p]),t=n(e[p]),t=a(t)?t:"*",l[t]=l[t]||[],l[t][p]=e[p];var d=[],f=0;for(t in l)if(l.hasOwnProperty(t)){var h=l[t];for(var v in h)if(h.hasOwnProperty(v)){var m=h[v];h[v]=m.replace(u,"$1 "+c+'="'+v+'" ')}var g=o(h.join(""),i);for(p=0;p<g.length;++p){var y=g[p];y.hasAttribute&&y.hasAttribute(c)&&(v=+y.getAttribute(c),y.removeAttribute(c),s(!d.hasOwnProperty(v)),d[v]=y,f+=1)}}return s(f===d.length),s(d.length===e.length),d},dangerouslyReplaceNodeWithMarkup:function(e,t){s(r.canUseDOM),s(t),s("html"!==e.tagName.toLowerCase());var n=o(t,i)[0];e.parentNode.replaceChild(n,e)}};t.exports=l},{"./ExecutionEnvironment":21,"./createNodesFromMarkup":98,"./emptyFunction":100,"./getMarkupWrap":110,"./invariant":118}],13:[function(e,t){"use strict";var n=e("./keyOf"),r=[n({ResponderEventPlugin:null}),n({SimpleEventPlugin:null}),n({TapEventPlugin:null}),n({EnterLeaveEventPlugin:null}),n({ChangeEventPlugin:null}),n({SelectEventPlugin:null}),n({CompositionEventPlugin:null}),n({BeforeInputEventPlugin:null}),n({AnalyticsEventPlugin:null}),n({MobileSafariClickEventPlugin:null})];t.exports=r},{"./keyOf":125}],14:[function(e,t){"use strict";var n=e("./EventConstants"),r=e("./EventPropagators"),o=e("./SyntheticMouseEvent"),i=e("./ReactMount"),a=e("./keyOf"),s=n.topLevelTypes,u=i.getFirstReactDOM,c={mouseEnter:{registrationName:a({onMouseEnter:null}),dependencies:[s.topMouseOut,s.topMouseOver]},mouseLeave:{registrationName:a({onMouseLeave:null}),dependencies:[s.topMouseOut,s.topMouseOver]}},l=[null,null],p={eventTypes:c,extractEvents:function(e,t,n,a){if(e===s.topMouseOver&&(a.relatedTarget||a.fromElement))return null;if(e!==s.topMouseOut&&e!==s.topMouseOver)return null;var p;if(t.window===t)p=t;else{var d=t.ownerDocument;p=d?d.defaultView||d.parentWindow:window}var f,h;if(e===s.topMouseOut?(f=t,h=u(a.relatedTarget||a.toElement)||p):(f=p,h=t),f===h)return null;var v=f?i.getID(f):"",m=h?i.getID(h):"",g=o.getPooled(c.mouseLeave,v,a);g.type="mouseleave",g.target=f,g.relatedTarget=h;var y=o.getPooled(c.mouseEnter,m,a);return y.type="mouseenter",y.target=h,y.relatedTarget=f,r.accumulateEnterLeaveDispatches(g,y,v,m),l[0]=g,l[1]=y,l}};t.exports=p},{"./EventConstants":15,"./EventPropagators":20,"./ReactMount":59,"./SyntheticMouseEvent":86,"./keyOf":125}],15:[function(e,t){"use strict";var n=e("./keyMirror"),r=n({bubbled:null,captured:null}),o=n({topBlur:null,topChange:null,topClick:null,topCompositionEnd:null,topCompositionStart:null,topCompositionUpdate:null,topContextMenu:null,topCopy:null,topCut:null,topDoubleClick:null,topDrag:null,topDragEnd:null,topDragEnter:null,topDragExit:null,topDragLeave:null,topDragOver:null,topDragStart:null,topDrop:null,topError:null,topFocus:null,topInput:null,topKeyDown:null,topKeyPress:null,topKeyUp:null,topLoad:null,topMouseDown:null,topMouseMove:null,topMouseOut:null,topMouseOver:null,topMouseUp:null,topPaste:null,topReset:null,topScroll:null,topSelectionChange:null,topSubmit:null,topTextInput:null,topTouchCancel:null,topTouchEnd:null,topTouchMove:null,topTouchStart:null,topWheel:null}),i={topLevelTypes:o,PropagationPhases:r};t.exports=i},{"./keyMirror":124}],16:[function(e,t){var n=e("./emptyFunction"),r={listen:function(e,t,n){return e.addEventListener?(e.addEventListener(t,n,!1),{remove:function(){e.removeEventListener(t,n,!1)}}):e.attachEvent?(e.attachEvent("on"+t,n),{remove:function(){e.detachEvent("on"+t,n)}}):void 0},capture:function(e,t,r){return e.addEventListener?(e.addEventListener(t,r,!0),{remove:function(){e.removeEventListener(t,r,!0)}}):{remove:n}},registerDefault:function(){}};t.exports=r},{"./emptyFunction":100}],17:[function(e,t){"use strict";var n=e("./EventPluginRegistry"),r=e("./EventPluginUtils"),o=e("./accumulate"),i=e("./forEachAccumulated"),a=e("./invariant"),s=(e("./isEventSupported"),e("./monitorCodeUse"),{}),u=null,c=function(e){if(e){var t=r.executeDispatch,o=n.getPluginModuleForEvent(e);o&&o.executeDispatch&&(t=o.executeDispatch),r.executeDispatchesInOrder(e,t),e.isPersistent()||e.constructor.release(e)}},l=null,p={injection:{injectMount:r.injection.injectMount,injectInstanceHandle:function(e){l=e},getInstanceHandle:function(){return l},injectEventPluginOrder:n.injectEventPluginOrder,injectEventPluginsByName:n.injectEventPluginsByName},eventNameDispatchConfigs:n.eventNameDispatchConfigs,registrationNameModules:n.registrationNameModules,putListener:function(e,t,n){a(!n||"function"==typeof n);var r=s[t]||(s[t]={});r[e]=n},getListener:function(e,t){var n=s[t];return n&&n[e]},deleteListener:function(e,t){var n=s[t];n&&delete n[e]},deleteAllListeners:function(e){for(var t in s)delete s[t][e]},extractEvents:function(e,t,r,i){for(var a,s=n.plugins,u=0,c=s.length;c>u;u++){var l=s[u];if(l){var p=l.extractEvents(e,t,r,i);p&&(a=o(a,p))}}return a},enqueueEvents:function(e){e&&(u=o(u,e))},processEventQueue:function(){var e=u;u=null,i(e,c),a(!u)},__purge:function(){s={}},__getListenerBank:function(){return s}};t.exports=p},{"./EventPluginRegistry":18,"./EventPluginUtils":19,"./accumulate":92,"./forEachAccumulated":105,"./invariant":118,"./isEventSupported":119,"./monitorCodeUse":132}],18:[function(e,t){"use strict";function n(){if(a)for(var e in s){var t=s[e],n=a.indexOf(e);if(i(n>-1),!u.plugins[n]){i(t.extractEvents),u.plugins[n]=t;var o=t.eventTypes;for(var c in o)i(r(o[c],t,c))}}}function r(e,t,n){i(!u.eventNameDispatchConfigs.hasOwnProperty(n)),u.eventNameDispatchConfigs[n]=e;var r=e.phasedRegistrationNames;if(r){for(var a in r)if(r.hasOwnProperty(a)){var s=r[a];o(s,t,n)}return!0}return e.registrationName?(o(e.registrationName,t,n),!0):!1}function o(e,t,n){i(!u.registrationNameModules[e]),u.registrationNameModules[e]=t,u.registrationNameDependencies[e]=t.eventTypes[n].dependencies}var i=e("./invariant"),a=null,s={},u={plugins:[],eventNameDispatchConfigs:{},registrationNameModules:{},registrationNameDependencies:{},injectEventPluginOrder:function(e){i(!a),a=Array.prototype.slice.call(e),n()},injectEventPluginsByName:function(e){var t=!1;for(var r in e)if(e.hasOwnProperty(r)){var o=e[r];s.hasOwnProperty(r)&&s[r]===o||(i(!s[r]),s[r]=o,t=!0)}t&&n()},getPluginModuleForEvent:function(e){var t=e.dispatchConfig;if(t.registrationName)return u.registrationNameModules[t.registrationName]||null;for(var n in t.phasedRegistrationNames)if(t.phasedRegistrationNames.hasOwnProperty(n)){var r=u.registrationNameModules[t.phasedRegistrationNames[n]];if(r)return r}return null},_resetEventPlugins:function(){a=null;for(var e in s)s.hasOwnProperty(e)&&delete s[e];u.plugins.length=0;var t=u.eventNameDispatchConfigs;for(var n in t)t.hasOwnProperty(n)&&delete t[n];var r=u.registrationNameModules;for(var o in r)r.hasOwnProperty(o)&&delete r[o]}};t.exports=u},{"./invariant":118}],19:[function(e,t){"use strict";function n(e){return e===v.topMouseUp||e===v.topTouchEnd||e===v.topTouchCancel}function r(e){return e===v.topMouseMove||e===v.topTouchMove}function o(e){return e===v.topMouseDown||e===v.topTouchStart}function i(e,t){var n=e._dispatchListeners,r=e._dispatchIDs;if(Array.isArray(n))for(var o=0;o<n.length&&!e.isPropagationStopped();o++)t(e,n[o],r[o]);else n&&t(e,n,r)}function a(e,t,n){e.currentTarget=h.Mount.getNode(n);var r=t(e,n);return e.currentTarget=null,r}function s(e,t){i(e,t),e._dispatchListeners=null,e._dispatchIDs=null}function u(e){var t=e._dispatchListeners,n=e._dispatchIDs;if(Array.isArray(t)){for(var r=0;r<t.length&&!e.isPropagationStopped();r++)if(t[r](e,n[r]))return n[r]}else if(t&&t(e,n))return n;return null}function c(e){var t=u(e);return e._dispatchIDs=null,e._dispatchListeners=null,t}function l(e){var t=e._dispatchListeners,n=e._dispatchIDs;f(!Array.isArray(t));var r=t?t(e,n):null;return e._dispatchListeners=null,e._dispatchIDs=null,r}function p(e){return!!e._dispatchListeners}var d=e("./EventConstants"),f=e("./invariant"),h={Mount:null,injectMount:function(e){h.Mount=e}},v=d.topLevelTypes,m={isEndish:n,isMoveish:r,isStartish:o,executeDirectDispatch:l,executeDispatch:a,executeDispatchesInOrder:s,executeDispatchesInOrderStopAtTrue:c,hasDispatches:p,injection:h,useTouchEvents:!1};t.exports=m},{"./EventConstants":15,"./invariant":118}],20:[function(e,t){"use strict";function n(e,t,n){var r=t.dispatchConfig.phasedRegistrationNames[n];return v(e,r)}function r(e,t,r){var o=t?h.bubbled:h.captured,i=n(e,r,o);i&&(r._dispatchListeners=d(r._dispatchListeners,i),r._dispatchIDs=d(r._dispatchIDs,e))}function o(e){e&&e.dispatchConfig.phasedRegistrationNames&&p.injection.getInstanceHandle().traverseTwoPhase(e.dispatchMarker,r,e)}function i(e,t,n){if(n&&n.dispatchConfig.registrationName){var r=n.dispatchConfig.registrationName,o=v(e,r);o&&(n._dispatchListeners=d(n._dispatchListeners,o),n._dispatchIDs=d(n._dispatchIDs,e))}}function a(e){e&&e.dispatchConfig.registrationName&&i(e.dispatchMarker,null,e)}function s(e){f(e,o)}function u(e,t,n,r){p.injection.getInstanceHandle().traverseEnterLeave(n,r,i,e,t)}function c(e){f(e,a)}var l=e("./EventConstants"),p=e("./EventPluginHub"),d=e("./accumulate"),f=e("./forEachAccumulated"),h=l.PropagationPhases,v=p.getListener,m={accumulateTwoPhaseDispatches:s,accumulateDirectDispatches:c,accumulateEnterLeaveDispatches:u};t.exports=m},{"./EventConstants":15,"./EventPluginHub":17,"./accumulate":92,"./forEachAccumulated":105}],21:[function(e,t){"use strict";var n=!("undefined"==typeof window||!window.document||!window.document.createElement),r={canUseDOM:n,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:n&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:n&&!!window.screen,isInWorker:!n};t.exports=r},{}],22:[function(e,t){"use strict";var n,r=e("./DOMProperty"),o=e("./ExecutionEnvironment"),i=r.injection.MUST_USE_ATTRIBUTE,a=r.injection.MUST_USE_PROPERTY,s=r.injection.HAS_BOOLEAN_VALUE,u=r.injection.HAS_SIDE_EFFECTS,c=r.injection.HAS_NUMERIC_VALUE,l=r.injection.HAS_POSITIVE_NUMERIC_VALUE,p=r.injection.HAS_OVERLOADED_BOOLEAN_VALUE;if(o.canUseDOM){var d=document.implementation;n=d&&d.hasFeature&&d.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure","1.1")}var f={isCustomAttribute:RegExp.prototype.test.bind(/^(data|aria)-[a-z_][a-z\d_.\-]*$/),Properties:{accept:null,accessKey:null,action:null,allowFullScreen:i|s,allowTransparency:i,alt:null,async:s,autoComplete:null,autoPlay:s,cellPadding:null,cellSpacing:null,charSet:i,checked:a|s,className:n?i:a,cols:i|l,colSpan:null,content:null,contentEditable:null,contextMenu:i,controls:a|s,coords:null,crossOrigin:null,data:null,dateTime:i,defer:s,dir:null,disabled:i|s,download:p,draggable:null,encType:null,form:i,formNoValidate:s,frameBorder:i,height:i,hidden:i|s,href:null,hrefLang:null,htmlFor:null,httpEquiv:null,icon:null,id:a,label:null,lang:null,list:null,loop:a|s,max:null,maxLength:i,mediaGroup:null,method:null,min:null,multiple:a|s,muted:a|s,name:null,noValidate:s,pattern:null,placeholder:null,poster:null,preload:null,radioGroup:null,readOnly:a|s,rel:null,required:s,role:i,rows:i|l,rowSpan:null,sandbox:null,scope:null,scrollLeft:a,scrolling:null,scrollTop:a,seamless:i|s,selected:a|s,shape:null,size:i|l,span:l,spellCheck:null,src:null,srcDoc:a,srcSet:null,start:c,step:null,style:null,tabIndex:null,target:null,title:null,type:null,useMap:null,value:a|u,width:i,wmode:i,autoCapitalize:null,autoCorrect:null,itemProp:i,itemScope:i|s,itemType:i,property:null},DOMAttributeNames:{className:"class",htmlFor:"for",httpEquiv:"http-equiv"},DOMPropertyNames:{autoCapitalize:"autocapitalize",autoComplete:"autocomplete",autoCorrect:"autocorrect",autoFocus:"autofocus",autoPlay:"autoplay",encType:"enctype",hrefLang:"hreflang",radioGroup:"radiogroup",spellCheck:"spellcheck",srcDoc:"srcdoc",srcSet:"srcset"}};t.exports=f},{"./DOMProperty":10,"./ExecutionEnvironment":21}],23:[function(e,t){"use strict";function n(e){u(null==e.props.checkedLink||null==e.props.valueLink)}function r(e){n(e),u(null==e.props.value&&null==e.props.onChange)}function o(e){n(e),u(null==e.props.checked&&null==e.props.onChange)}function i(e){this.props.valueLink.requestChange(e.target.value)}function a(e){this.props.checkedLink.requestChange(e.target.checked)}var s=e("./ReactPropTypes"),u=e("./invariant"),c={button:!0,checkbox:!0,image:!0,hidden:!0,radio:!0,reset:!0,submit:!0},l={Mixin:{propTypes:{value:function(e,t){return!e[t]||c[e.type]||e.onChange||e.readOnly||e.disabled?void 0:new Error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.")},checked:function(e,t){return!e[t]||e.onChange||e.readOnly||e.disabled?void 0:new Error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.")},onChange:s.func}},getValue:function(e){return e.props.valueLink?(r(e),e.props.valueLink.value):e.props.value},getChecked:function(e){return e.props.checkedLink?(o(e),e.props.checkedLink.value):e.props.checked},getOnChange:function(e){return e.props.valueLink?(r(e),i):e.props.checkedLink?(o(e),a):e.props.onChange}};t.exports=l},{"./ReactPropTypes":67,"./invariant":118}],24:[function(e,t){"use strict";function n(e){e.remove()}var r=e("./ReactBrowserEventEmitter"),o=e("./accumulate"),i=e("./forEachAccumulated"),a=e("./invariant"),s={trapBubbledEvent:function(e,t){a(this.isMounted());var n=r.trapBubbledEvent(e,t,this.getDOMNode());this._localEventListeners=o(this._localEventListeners,n)},componentWillUnmount:function(){this._localEventListeners&&i(this._localEventListeners,n)}};t.exports=s},{"./ReactBrowserEventEmitter":29,"./accumulate":92,"./forEachAccumulated":105,"./invariant":118}],25:[function(e,t){"use strict";var n=e("./EventConstants"),r=e("./emptyFunction"),o=n.topLevelTypes,i={eventTypes:null,extractEvents:function(e,t,n,i){if(e===o.topTouchStart){var a=i.target;a&&!a.onclick&&(a.onclick=r)}}};t.exports=i},{"./EventConstants":15,"./emptyFunction":100}],26:[function(e,t){"use strict";var n=e("./invariant"),r=function(e){var t=this;if(t.instancePool.length){var n=t.instancePool.pop();return t.call(n,e),n}return new t(e)},o=function(e,t){var n=this;if(n.instancePool.length){var r=n.instancePool.pop();return n.call(r,e,t),r}return new n(e,t)},i=function(e,t,n){var r=this;if(r.instancePool.length){var o=r.instancePool.pop();return r.call(o,e,t,n),o}return new r(e,t,n)},a=function(e,t,n,r,o){var i=this;if(i.instancePool.length){var a=i.instancePool.pop();return i.call(a,e,t,n,r,o),a}return new i(e,t,n,r,o)},s=function(e){var t=this;n(e instanceof t),e.destructor&&e.destructor(),t.instancePool.length<t.poolSize&&t.instancePool.push(e)},u=10,c=r,l=function(e,t){var n=e;return n.instancePool=[],n.getPooled=t||c,n.poolSize||(n.poolSize=u),n.release=s,n},p={addPoolingTo:l,oneArgumentPooler:r,twoArgumentPooler:o,threeArgumentPooler:i,fiveArgumentPooler:a};t.exports=p},{"./invariant":118}],27:[function(e,t){"use strict";var n=e("./DOMPropertyOperations"),r=e("./EventPluginUtils"),o=e("./ReactChildren"),i=e("./ReactComponent"),a=e("./ReactCompositeComponent"),s=e("./ReactContext"),u=e("./ReactCurrentOwner"),c=e("./ReactDescriptor"),l=e("./ReactDOM"),p=e("./ReactDOMComponent"),d=e("./ReactDefaultInjection"),f=e("./ReactInstanceHandles"),h=e("./ReactMount"),v=e("./ReactMultiChild"),m=e("./ReactPerf"),g=e("./ReactPropTypes"),y=e("./ReactServerRendering"),C=e("./ReactTextComponent"),E=e("./onlyChild");d.inject();var R={Children:{map:o.map,forEach:o.forEach,count:o.count,only:E},DOM:l,PropTypes:g,initializeTouchEvents:function(e){r.useTouchEvents=e},createClass:a.createClass,createDescriptor:function(e){var t=Array.prototype.slice.call(arguments,1);return e.apply(null,t)},constructAndRenderComponent:h.constructAndRenderComponent,constructAndRenderComponentByID:h.constructAndRenderComponentByID,renderComponent:m.measure("React","renderComponent",h.renderComponent),renderComponentToString:y.renderComponentToString,renderComponentToStaticMarkup:y.renderComponentToStaticMarkup,unmountComponentAtNode:h.unmountComponentAtNode,isValidClass:c.isValidFactory,isValidComponent:c.isValidDescriptor,withContext:s.withContext,__internals:{Component:i,CurrentOwner:u,DOMComponent:p,DOMPropertyOperations:n,InstanceHandles:f,Mount:h,MultiChild:v,TextComponent:C}};R.version="0.11.1",t.exports=R},{"./DOMPropertyOperations":11,"./EventPluginUtils":19,"./ReactChildren":30,"./ReactComponent":31,"./ReactCompositeComponent":33,"./ReactContext":34,"./ReactCurrentOwner":35,"./ReactDOM":36,"./ReactDOMComponent":38,"./ReactDefaultInjection":48,"./ReactDescriptor":49,"./ReactInstanceHandles":57,"./ReactMount":59,"./ReactMultiChild":60,"./ReactPerf":63,"./ReactPropTypes":67,"./ReactServerRendering":71,"./ReactTextComponent":73,"./onlyChild":133}],28:[function(e,t){"use strict";var n=e("./ReactEmptyComponent"),r=e("./ReactMount"),o=e("./invariant"),i={getDOMNode:function(){return o(this.isMounted()),n.isNullComponentID(this._rootNodeID)?null:r.getNode(this._rootNodeID)}};t.exports=i},{"./ReactEmptyComponent":51,"./ReactMount":59,"./invariant":118}],29:[function(e,t){"use strict";function n(e){return Object.prototype.hasOwnProperty.call(e,h)||(e[h]=d++,l[e[h]]={}),l[e[h]]}var r=e("./EventConstants"),o=e("./EventPluginHub"),i=e("./EventPluginRegistry"),a=e("./ReactEventEmitterMixin"),s=e("./ViewportMetrics"),u=e("./isEventSupported"),c=e("./merge"),l={},p=!1,d=0,f={topBlur:"blur",topChange:"change",topClick:"click",topCompositionEnd:"compositionend",topCompositionStart:"compositionstart",topCompositionUpdate:"compositionupdate",topContextMenu:"contextmenu",topCopy:"copy",topCut:"cut",topDoubleClick:"dblclick",topDrag:"drag",topDragEnd:"dragend",topDragEnter:"dragenter",topDragExit:"dragexit",topDragLeave:"dragleave",topDragOver:"dragover",topDragStart:"dragstart",topDrop:"drop",topFocus:"focus",topInput:"input",topKeyDown:"keydown",topKeyPress:"keypress",topKeyUp:"keyup",topMouseDown:"mousedown",topMouseMove:"mousemove",topMouseOut:"mouseout",topMouseOver:"mouseover",topMouseUp:"mouseup",topPaste:"paste",topScroll:"scroll",topSelectionChange:"selectionchange",topTextInput:"textInput",topTouchCancel:"touchcancel",topTouchEnd:"touchend",topTouchMove:"touchmove",topTouchStart:"touchstart",topWheel:"wheel"},h="_reactListenersID"+String(Math.random()).slice(2),v=c(a,{ReactEventListener:null,injection:{injectReactEventListener:function(e){e.setHandleTopLevel(v.handleTopLevel),v.ReactEventListener=e
}},setEnabled:function(e){v.ReactEventListener&&v.ReactEventListener.setEnabled(e)},isEnabled:function(){return!(!v.ReactEventListener||!v.ReactEventListener.isEnabled())},listenTo:function(e,t){for(var o=t,a=n(o),s=i.registrationNameDependencies[e],c=r.topLevelTypes,l=0,p=s.length;p>l;l++){var d=s[l];a.hasOwnProperty(d)&&a[d]||(d===c.topWheel?u("wheel")?v.ReactEventListener.trapBubbledEvent(c.topWheel,"wheel",o):u("mousewheel")?v.ReactEventListener.trapBubbledEvent(c.topWheel,"mousewheel",o):v.ReactEventListener.trapBubbledEvent(c.topWheel,"DOMMouseScroll",o):d===c.topScroll?u("scroll",!0)?v.ReactEventListener.trapCapturedEvent(c.topScroll,"scroll",o):v.ReactEventListener.trapBubbledEvent(c.topScroll,"scroll",v.ReactEventListener.WINDOW_HANDLE):d===c.topFocus||d===c.topBlur?(u("focus",!0)?(v.ReactEventListener.trapCapturedEvent(c.topFocus,"focus",o),v.ReactEventListener.trapCapturedEvent(c.topBlur,"blur",o)):u("focusin")&&(v.ReactEventListener.trapBubbledEvent(c.topFocus,"focusin",o),v.ReactEventListener.trapBubbledEvent(c.topBlur,"focusout",o)),a[c.topBlur]=!0,a[c.topFocus]=!0):f.hasOwnProperty(d)&&v.ReactEventListener.trapBubbledEvent(d,f[d],o),a[d]=!0)}},trapBubbledEvent:function(e,t,n){return v.ReactEventListener.trapBubbledEvent(e,t,n)},trapCapturedEvent:function(e,t,n){return v.ReactEventListener.trapCapturedEvent(e,t,n)},ensureScrollValueMonitoring:function(){if(!p){var e=s.refreshScrollValues;v.ReactEventListener.monitorScrollValue(e),p=!0}},eventNameDispatchConfigs:o.eventNameDispatchConfigs,registrationNameModules:o.registrationNameModules,putListener:o.putListener,getListener:o.getListener,deleteListener:o.deleteListener,deleteAllListeners:o.deleteAllListeners});t.exports=v},{"./EventConstants":15,"./EventPluginHub":17,"./EventPluginRegistry":18,"./ReactEventEmitterMixin":53,"./ViewportMetrics":91,"./isEventSupported":119,"./merge":128}],30:[function(e,t){"use strict";function n(e,t){this.forEachFunction=e,this.forEachContext=t}function r(e,t,n,r){var o=e;o.forEachFunction.call(o.forEachContext,t,r)}function o(e,t,o){if(null==e)return e;var i=n.getPooled(t,o);p(e,r,i),n.release(i)}function i(e,t,n){this.mapResult=e,this.mapFunction=t,this.mapContext=n}function a(e,t,n,r){var o=e,i=o.mapResult,a=!i.hasOwnProperty(n);if(a){var s=o.mapFunction.call(o.mapContext,t,r);i[n]=s}}function s(e,t,n){if(null==e)return e;var r={},o=i.getPooled(r,t,n);return p(e,a,o),i.release(o),r}function u(){return null}function c(e){return p(e,u,null)}var l=e("./PooledClass"),p=e("./traverseAllChildren"),d=(e("./warning"),l.twoArgumentPooler),f=l.threeArgumentPooler;l.addPoolingTo(n,d),l.addPoolingTo(i,f);var h={forEach:o,map:s,count:c};t.exports=h},{"./PooledClass":26,"./traverseAllChildren":138,"./warning":139}],31:[function(e,t){"use strict";var n=e("./ReactDescriptor"),r=e("./ReactOwner"),o=e("./ReactUpdates"),i=e("./invariant"),a=e("./keyMirror"),s=e("./merge"),u=a({MOUNTED:null,UNMOUNTED:null}),c=!1,l=null,p=null,d={injection:{injectEnvironment:function(e){i(!c),p=e.mountImageIntoNode,l=e.unmountIDFromEnvironment,d.BackendIDOperations=e.BackendIDOperations,c=!0}},LifeCycle:u,BackendIDOperations:null,Mixin:{isMounted:function(){return this._lifeCycleState===u.MOUNTED},setProps:function(e,t){var n=this._pendingDescriptor||this._descriptor;this.replaceProps(s(n.props,e),t)},replaceProps:function(e,t){i(this.isMounted()),i(0===this._mountDepth),this._pendingDescriptor=n.cloneAndReplaceProps(this._pendingDescriptor||this._descriptor,e),o.enqueueUpdate(this,t)},_setPropsInternal:function(e,t){var r=this._pendingDescriptor||this._descriptor;this._pendingDescriptor=n.cloneAndReplaceProps(r,s(r.props,e)),o.enqueueUpdate(this,t)},construct:function(e){this.props=e.props,this._owner=e._owner,this._lifeCycleState=u.UNMOUNTED,this._pendingCallbacks=null,this._descriptor=e,this._pendingDescriptor=null},mountComponent:function(e,t,n){i(!this.isMounted());var o=this._descriptor.props;if(null!=o.ref){var a=this._descriptor._owner;r.addComponentAsRefTo(this,o.ref,a)}this._rootNodeID=e,this._lifeCycleState=u.MOUNTED,this._mountDepth=n},unmountComponent:function(){i(this.isMounted());var e=this.props;null!=e.ref&&r.removeComponentAsRefFrom(this,e.ref,this._owner),l(this._rootNodeID),this._rootNodeID=null,this._lifeCycleState=u.UNMOUNTED},receiveComponent:function(e,t){i(this.isMounted()),this._pendingDescriptor=e,this.performUpdateIfNecessary(t)},performUpdateIfNecessary:function(e){if(null!=this._pendingDescriptor){var t=this._descriptor,n=this._pendingDescriptor;this._descriptor=n,this.props=n.props,this._owner=n._owner,this._pendingDescriptor=null,this.updateComponent(e,t)}},updateComponent:function(e,t){var n=this._descriptor;(n._owner!==t._owner||n.props.ref!==t.props.ref)&&(null!=t.props.ref&&r.removeComponentAsRefFrom(this,t.props.ref,t._owner),null!=n.props.ref&&r.addComponentAsRefTo(this,n.props.ref,n._owner))},mountComponentIntoNode:function(e,t,n){var r=o.ReactReconcileTransaction.getPooled();r.perform(this._mountComponentIntoNode,this,e,t,r,n),o.ReactReconcileTransaction.release(r)},_mountComponentIntoNode:function(e,t,n,r){var o=this.mountComponent(e,n,0);p(o,t,r)},isOwnedBy:function(e){return this._owner===e},getSiblingByRef:function(e){var t=this._owner;return t&&t.refs?t.refs[e]:null}}};t.exports=d},{"./ReactDescriptor":49,"./ReactOwner":62,"./ReactUpdates":74,"./invariant":118,"./keyMirror":124,"./merge":128}],32:[function(e,t){"use strict";var n=e("./ReactDOMIDOperations"),r=e("./ReactMarkupChecksum"),o=e("./ReactMount"),i=e("./ReactPerf"),a=e("./ReactReconcileTransaction"),s=e("./getReactRootElementInContainer"),u=e("./invariant"),c=e("./setInnerHTML"),l=1,p=9,d={ReactReconcileTransaction:a,BackendIDOperations:n,unmountIDFromEnvironment:function(e){o.purgeID(e)},mountImageIntoNode:i.measure("ReactComponentBrowserEnvironment","mountImageIntoNode",function(e,t,n){if(u(t&&(t.nodeType===l||t.nodeType===p)),n){if(r.canReuseMarkup(e,s(t)))return;u(t.nodeType!==p)}u(t.nodeType!==p),c(t,e)})};t.exports=d},{"./ReactDOMIDOperations":40,"./ReactMarkupChecksum":58,"./ReactMount":59,"./ReactPerf":63,"./ReactReconcileTransaction":69,"./getReactRootElementInContainer":112,"./invariant":118,"./setInnerHTML":134}],33:[function(e,t){"use strict";function n(e){var t=e._owner||null;return t&&t.constructor&&t.constructor.displayName?" Check the render method of `"+t.constructor.displayName+"`.":""}function r(e,t){for(var n in t)t.hasOwnProperty(n)&&D("function"==typeof t[n])}function o(e,t){var n=N.hasOwnProperty(t)?N[t]:null;A.hasOwnProperty(t)&&D(n===_.OVERRIDE_BASE),e.hasOwnProperty(t)&&D(n===_.DEFINE_MANY||n===_.DEFINE_MANY_MERGED)}function i(e){var t=e._compositeLifeCycleState;D(e.isMounted()||t===S.MOUNTING),D(t!==S.RECEIVING_STATE),D(t!==S.UNMOUNTING)}function a(e,t){D(!h.isValidFactory(t)),D(!h.isValidDescriptor(t));var n=e.prototype;for(var r in t){var i=t[r];if(t.hasOwnProperty(r))if(o(n,r),w.hasOwnProperty(r))w[r](e,i);else{var a=N.hasOwnProperty(r),s=n.hasOwnProperty(r),u=i&&i.__reactDontBind,p="function"==typeof i,d=p&&!a&&!s&&!u;if(d)n.__reactAutoBindMap||(n.__reactAutoBindMap={}),n.__reactAutoBindMap[r]=i,n[r]=i;else if(s){var f=N[r];D(a&&(f===_.DEFINE_MANY_MERGED||f===_.DEFINE_MANY)),f===_.DEFINE_MANY_MERGED?n[r]=c(n[r],i):f===_.DEFINE_MANY&&(n[r]=l(n[r],i))}else n[r]=i}}}function s(e,t){if(t)for(var n in t){var r=t[n];if(t.hasOwnProperty(n)){var o=n in e,i=r;if(o){var a=e[n],s=typeof a,u=typeof r;D("function"===s&&"function"===u),i=l(a,r)}e[n]=i}}}function u(e,t){return D(e&&t&&"object"==typeof e&&"object"==typeof t),P(t,function(t,n){D(void 0===e[n]),e[n]=t}),e}function c(e,t){return function(){var n=e.apply(this,arguments),r=t.apply(this,arguments);return null==n?r:null==r?n:u(n,r)}}function l(e,t){return function(){e.apply(this,arguments),t.apply(this,arguments)}}var p=e("./ReactComponent"),d=e("./ReactContext"),f=e("./ReactCurrentOwner"),h=e("./ReactDescriptor"),v=(e("./ReactDescriptorValidator"),e("./ReactEmptyComponent")),m=e("./ReactErrorUtils"),g=e("./ReactOwner"),y=e("./ReactPerf"),C=e("./ReactPropTransferer"),E=e("./ReactPropTypeLocations"),R=(e("./ReactPropTypeLocationNames"),e("./ReactUpdates")),M=e("./instantiateReactComponent"),D=e("./invariant"),x=e("./keyMirror"),b=e("./merge"),O=e("./mixInto"),P=(e("./monitorCodeUse"),e("./mapObject")),I=e("./shouldUpdateReactComponent"),_=(e("./warning"),x({DEFINE_ONCE:null,DEFINE_MANY:null,OVERRIDE_BASE:null,DEFINE_MANY_MERGED:null})),T=[],N={mixins:_.DEFINE_MANY,statics:_.DEFINE_MANY,propTypes:_.DEFINE_MANY,contextTypes:_.DEFINE_MANY,childContextTypes:_.DEFINE_MANY,getDefaultProps:_.DEFINE_MANY_MERGED,getInitialState:_.DEFINE_MANY_MERGED,getChildContext:_.DEFINE_MANY_MERGED,render:_.DEFINE_ONCE,componentWillMount:_.DEFINE_MANY,componentDidMount:_.DEFINE_MANY,componentWillReceiveProps:_.DEFINE_MANY,shouldComponentUpdate:_.DEFINE_ONCE,componentWillUpdate:_.DEFINE_MANY,componentDidUpdate:_.DEFINE_MANY,componentWillUnmount:_.DEFINE_MANY,updateComponent:_.OVERRIDE_BASE},w={displayName:function(e,t){e.displayName=t},mixins:function(e,t){if(t)for(var n=0;n<t.length;n++)a(e,t[n])},childContextTypes:function(e,t){r(e,t,E.childContext),e.childContextTypes=b(e.childContextTypes,t)},contextTypes:function(e,t){r(e,t,E.context),e.contextTypes=b(e.contextTypes,t)},getDefaultProps:function(e,t){e.getDefaultProps=e.getDefaultProps?c(e.getDefaultProps,t):t},propTypes:function(e,t){r(e,t,E.prop),e.propTypes=b(e.propTypes,t)},statics:function(e,t){s(e,t)}},S=x({MOUNTING:null,UNMOUNTING:null,RECEIVING_PROPS:null,RECEIVING_STATE:null}),A={construct:function(){p.Mixin.construct.apply(this,arguments),g.Mixin.construct.apply(this,arguments),this.state=null,this._pendingState=null,this.context=null,this._compositeLifeCycleState=null},isMounted:function(){return p.Mixin.isMounted.call(this)&&this._compositeLifeCycleState!==S.MOUNTING},mountComponent:y.measure("ReactCompositeComponent","mountComponent",function(e,t,n){p.Mixin.mountComponent.call(this,e,t,n),this._compositeLifeCycleState=S.MOUNTING,this.__reactAutoBindMap&&this._bindAutoBindMethods(),this.context=this._processContext(this._descriptor._context),this.props=this._processProps(this.props),this.state=this.getInitialState?this.getInitialState():null,D("object"==typeof this.state&&!Array.isArray(this.state)),this._pendingState=null,this._pendingForceUpdate=!1,this.componentWillMount&&(this.componentWillMount(),this._pendingState&&(this.state=this._pendingState,this._pendingState=null)),this._renderedComponent=M(this._renderValidatedComponent()),this._compositeLifeCycleState=null;var r=this._renderedComponent.mountComponent(e,t,n+1);return this.componentDidMount&&t.getReactMountReady().enqueue(this.componentDidMount,this),r}),unmountComponent:function(){this._compositeLifeCycleState=S.UNMOUNTING,this.componentWillUnmount&&this.componentWillUnmount(),this._compositeLifeCycleState=null,this._renderedComponent.unmountComponent(),this._renderedComponent=null,p.Mixin.unmountComponent.call(this)},setState:function(e,t){D("object"==typeof e||null==e),this.replaceState(b(this._pendingState||this.state,e),t)},replaceState:function(e,t){i(this),this._pendingState=e,this._compositeLifeCycleState!==S.MOUNTING&&R.enqueueUpdate(this,t)},_processContext:function(e){var t=null,n=this.constructor.contextTypes;if(n){t={};for(var r in n)t[r]=e[r]}return t},_processChildContext:function(e){var t=this.getChildContext&&this.getChildContext();if(this.constructor.displayName||"ReactCompositeComponent",t){D("object"==typeof this.constructor.childContextTypes);for(var n in t)D(n in this.constructor.childContextTypes);return b(e,t)}return e},_processProps:function(e){var t,n=this.constructor.defaultProps;if(n){t=b(e);for(var r in n)"undefined"==typeof t[r]&&(t[r]=n[r])}else t=e;return t},_checkPropTypes:function(e,t,r){var o=this.constructor.displayName;for(var i in e)if(e.hasOwnProperty(i)){var a=e[i](t,i,o,r);a instanceof Error&&n(this)}},performUpdateIfNecessary:function(e){var t=this._compositeLifeCycleState;if(t!==S.MOUNTING&&t!==S.RECEIVING_PROPS&&(null!=this._pendingDescriptor||null!=this._pendingState||this._pendingForceUpdate)){var n=this.context,r=this.props,o=this._descriptor;null!=this._pendingDescriptor&&(o=this._pendingDescriptor,n=this._processContext(o._context),r=this._processProps(o.props),this._pendingDescriptor=null,this._compositeLifeCycleState=S.RECEIVING_PROPS,this.componentWillReceiveProps&&this.componentWillReceiveProps(r,n)),this._compositeLifeCycleState=S.RECEIVING_STATE;var i=this._pendingState||this.state;this._pendingState=null;try{var a=this._pendingForceUpdate||!this.shouldComponentUpdate||this.shouldComponentUpdate(r,i,n);a?(this._pendingForceUpdate=!1,this._performComponentUpdate(o,r,i,n,e)):(this._descriptor=o,this.props=r,this.state=i,this.context=n,this._owner=o._owner)}finally{this._compositeLifeCycleState=null}}},_performComponentUpdate:function(e,t,n,r,o){var i=this._descriptor,a=this.props,s=this.state,u=this.context;this.componentWillUpdate&&this.componentWillUpdate(t,n,r),this._descriptor=e,this.props=t,this.state=n,this.context=r,this._owner=e._owner,this.updateComponent(o,i),this.componentDidUpdate&&o.getReactMountReady().enqueue(this.componentDidUpdate.bind(this,a,s,u),this)},receiveComponent:function(e,t){(e!==this._descriptor||null==e._owner)&&p.Mixin.receiveComponent.call(this,e,t)},updateComponent:y.measure("ReactCompositeComponent","updateComponent",function(e,t){p.Mixin.updateComponent.call(this,e,t);var n=this._renderedComponent,r=n._descriptor,o=this._renderValidatedComponent();if(I(r,o))n.receiveComponent(o,e);else{var i=this._rootNodeID,a=n._rootNodeID;n.unmountComponent(),this._renderedComponent=M(o);var s=this._renderedComponent.mountComponent(i,e,this._mountDepth+1);p.BackendIDOperations.dangerouslyReplaceNodeWithMarkupByID(a,s)}}),forceUpdate:function(e){var t=this._compositeLifeCycleState;D(this.isMounted()||t===S.MOUNTING),D(t!==S.RECEIVING_STATE&&t!==S.UNMOUNTING),this._pendingForceUpdate=!0,R.enqueueUpdate(this,e)},_renderValidatedComponent:y.measure("ReactCompositeComponent","_renderValidatedComponent",function(){var e,t=d.current;d.current=this._processChildContext(this._descriptor._context),f.current=this;try{e=this.render(),null===e||e===!1?(e=v.getEmptyComponent(),v.registerNullComponentID(this._rootNodeID)):v.deregisterNullComponentID(this._rootNodeID)}finally{d.current=t,f.current=null}return D(h.isValidDescriptor(e)),e}),_bindAutoBindMethods:function(){for(var e in this.__reactAutoBindMap)if(this.__reactAutoBindMap.hasOwnProperty(e)){var t=this.__reactAutoBindMap[e];this[e]=this._bindAutoBindMethod(m.guard(t,this.constructor.displayName+"."+e))}},_bindAutoBindMethod:function(e){var t=this,n=function(){return e.apply(t,arguments)};return n}},k=function(){};O(k,p.Mixin),O(k,g.Mixin),O(k,C.Mixin),O(k,A);var U={LifeCycle:S,Base:k,createClass:function(e){var t=function(e,t){this.construct(e,t)};t.prototype=new k,t.prototype.constructor=t,T.forEach(a.bind(null,t)),a(t,e),t.getDefaultProps&&(t.defaultProps=t.getDefaultProps()),D(t.prototype.render);for(var n in N)t.prototype[n]||(t.prototype[n]=null);var r=h.createFactory(t);return r},injection:{injectMixin:function(e){T.push(e)}}};t.exports=U},{"./ReactComponent":31,"./ReactContext":34,"./ReactCurrentOwner":35,"./ReactDescriptor":49,"./ReactDescriptorValidator":50,"./ReactEmptyComponent":51,"./ReactErrorUtils":52,"./ReactOwner":62,"./ReactPerf":63,"./ReactPropTransferer":64,"./ReactPropTypeLocationNames":65,"./ReactPropTypeLocations":66,"./ReactUpdates":74,"./instantiateReactComponent":117,"./invariant":118,"./keyMirror":124,"./mapObject":126,"./merge":128,"./mixInto":131,"./monitorCodeUse":132,"./shouldUpdateReactComponent":136,"./warning":139}],34:[function(e,t){"use strict";var n=e("./merge"),r={current:{},withContext:function(e,t){var o,i=r.current;r.current=n(i,e);try{o=t()}finally{r.current=i}return o}};t.exports=r},{"./merge":128}],35:[function(e,t){"use strict";var n={current:null};t.exports=n},{}],36:[function(e,t){"use strict";function n(e,t){var n=function(e){this.construct(e)};n.prototype=new o(t,e),n.prototype.constructor=n,n.displayName=t;var i=r.createFactory(n);return i}var r=e("./ReactDescriptor"),o=(e("./ReactDescriptorValidator"),e("./ReactDOMComponent")),i=e("./mergeInto"),a=e("./mapObject"),s=a({a:!1,abbr:!1,address:!1,area:!0,article:!1,aside:!1,audio:!1,b:!1,base:!0,bdi:!1,bdo:!1,big:!1,blockquote:!1,body:!1,br:!0,button:!1,canvas:!1,caption:!1,cite:!1,code:!1,col:!0,colgroup:!1,data:!1,datalist:!1,dd:!1,del:!1,details:!1,dfn:!1,div:!1,dl:!1,dt:!1,em:!1,embed:!0,fieldset:!1,figcaption:!1,figure:!1,footer:!1,form:!1,h1:!1,h2:!1,h3:!1,h4:!1,h5:!1,h6:!1,head:!1,header:!1,hr:!0,html:!1,i:!1,iframe:!1,img:!0,input:!0,ins:!1,kbd:!1,keygen:!0,label:!1,legend:!1,li:!1,link:!0,main:!1,map:!1,mark:!1,menu:!1,menuitem:!1,meta:!0,meter:!1,nav:!1,noscript:!1,object:!1,ol:!1,optgroup:!1,option:!1,output:!1,p:!1,param:!0,pre:!1,progress:!1,q:!1,rp:!1,rt:!1,ruby:!1,s:!1,samp:!1,script:!1,section:!1,select:!1,small:!1,source:!0,span:!1,strong:!1,style:!1,sub:!1,summary:!1,sup:!1,table:!1,tbody:!1,td:!1,textarea:!1,tfoot:!1,th:!1,thead:!1,time:!1,title:!1,tr:!1,track:!0,u:!1,ul:!1,"var":!1,video:!1,wbr:!0,circle:!1,defs:!1,ellipse:!1,g:!1,line:!1,linearGradient:!1,mask:!1,path:!1,pattern:!1,polygon:!1,polyline:!1,radialGradient:!1,rect:!1,stop:!1,svg:!1,text:!1,tspan:!1},n),u={injectComponentClasses:function(e){i(s,e)}};s.injection=u,t.exports=s},{"./ReactDOMComponent":38,"./ReactDescriptor":49,"./ReactDescriptorValidator":50,"./mapObject":126,"./mergeInto":130}],37:[function(e,t){"use strict";var n=e("./AutoFocusMixin"),r=e("./ReactBrowserComponentMixin"),o=e("./ReactCompositeComponent"),i=e("./ReactDOM"),a=e("./keyMirror"),s=i.button,u=a({onClick:!0,onDoubleClick:!0,onMouseDown:!0,onMouseMove:!0,onMouseUp:!0,onClickCapture:!0,onDoubleClickCapture:!0,onMouseDownCapture:!0,onMouseMoveCapture:!0,onMouseUpCapture:!0}),c=o.createClass({displayName:"ReactDOMButton",mixins:[n,r],render:function(){var e={};for(var t in this.props)!this.props.hasOwnProperty(t)||this.props.disabled&&u[t]||(e[t]=this.props[t]);return s(e,this.props.children)}});t.exports=c},{"./AutoFocusMixin":1,"./ReactBrowserComponentMixin":28,"./ReactCompositeComponent":33,"./ReactDOM":36,"./keyMirror":124}],38:[function(e,t){"use strict";function n(e){e&&(v(null==e.children||null==e.dangerouslySetInnerHTML),v(null==e.style||"object"==typeof e.style))}function r(e,t,n,r){var o=p.findReactContainerForID(e);if(o){var i=o.nodeType===x?o.ownerDocument:o;E(t,i)}r.getPutListenerQueue().enqueuePutListener(e,t,n)}function o(e,t){this._tagOpen="<"+e,this._tagClose=t?"":"</"+e+">",this.tagName=e.toUpperCase()}var i=e("./CSSPropertyOperations"),a=e("./DOMProperty"),s=e("./DOMPropertyOperations"),u=e("./ReactBrowserComponentMixin"),c=e("./ReactComponent"),l=e("./ReactBrowserEventEmitter"),p=e("./ReactMount"),d=e("./ReactMultiChild"),f=e("./ReactPerf"),h=e("./escapeTextForBrowser"),v=e("./invariant"),m=e("./keyOf"),g=e("./merge"),y=e("./mixInto"),C=l.deleteListener,E=l.listenTo,R=l.registrationNameModules,M={string:!0,number:!0},D=m({style:null}),x=1;o.Mixin={mountComponent:f.measure("ReactDOMComponent","mountComponent",function(e,t,r){return c.Mixin.mountComponent.call(this,e,t,r),n(this.props),this._createOpenTagMarkupAndPutListeners(t)+this._createContentMarkup(t)+this._tagClose}),_createOpenTagMarkupAndPutListeners:function(e){var t=this.props,n=this._tagOpen;for(var o in t)if(t.hasOwnProperty(o)){var a=t[o];if(null!=a)if(R.hasOwnProperty(o))r(this._rootNodeID,o,a,e);else{o===D&&(a&&(a=t.style=g(t.style)),a=i.createMarkupForStyles(a));var u=s.createMarkupForProperty(o,a);u&&(n+=" "+u)}}if(e.renderToStaticMarkup)return n+">";var c=s.createMarkupForID(this._rootNodeID);return n+" "+c+">"},_createContentMarkup:function(e){var t=this.props.dangerouslySetInnerHTML;if(null!=t){if(null!=t.__html)return t.__html}else{var n=M[typeof this.props.children]?this.props.children:null,r=null!=n?null:this.props.children;if(null!=n)return h(n);if(null!=r){var o=this.mountChildren(r,e);return o.join("")}}return""},receiveComponent:function(e,t){(e!==this._descriptor||null==e._owner)&&c.Mixin.receiveComponent.call(this,e,t)},updateComponent:f.measure("ReactDOMComponent","updateComponent",function(e,t){n(this._descriptor.props),c.Mixin.updateComponent.call(this,e,t),this._updateDOMProperties(t.props,e),this._updateDOMChildren(t.props,e)}),_updateDOMProperties:function(e,t){var n,o,i,s=this.props;for(n in e)if(!s.hasOwnProperty(n)&&e.hasOwnProperty(n))if(n===D){var u=e[n];for(o in u)u.hasOwnProperty(o)&&(i=i||{},i[o]="")}else R.hasOwnProperty(n)?C(this._rootNodeID,n):(a.isStandardName[n]||a.isCustomAttribute(n))&&c.BackendIDOperations.deletePropertyByID(this._rootNodeID,n);for(n in s){var l=s[n],p=e[n];if(s.hasOwnProperty(n)&&l!==p)if(n===D)if(l&&(l=s.style=g(l)),p){for(o in p)!p.hasOwnProperty(o)||l&&l.hasOwnProperty(o)||(i=i||{},i[o]="");for(o in l)l.hasOwnProperty(o)&&p[o]!==l[o]&&(i=i||{},i[o]=l[o])}else i=l;else R.hasOwnProperty(n)?r(this._rootNodeID,n,l,t):(a.isStandardName[n]||a.isCustomAttribute(n))&&c.BackendIDOperations.updatePropertyByID(this._rootNodeID,n,l)}i&&c.BackendIDOperations.updateStylesByID(this._rootNodeID,i)},_updateDOMChildren:function(e,t){var n=this.props,r=M[typeof e.children]?e.children:null,o=M[typeof n.children]?n.children:null,i=e.dangerouslySetInnerHTML&&e.dangerouslySetInnerHTML.__html,a=n.dangerouslySetInnerHTML&&n.dangerouslySetInnerHTML.__html,s=null!=r?null:e.children,u=null!=o?null:n.children,l=null!=r||null!=i,p=null!=o||null!=a;null!=s&&null==u?this.updateChildren(null,t):l&&!p&&this.updateTextContent(""),null!=o?r!==o&&this.updateTextContent(""+o):null!=a?i!==a&&c.BackendIDOperations.updateInnerHTMLByID(this._rootNodeID,a):null!=u&&this.updateChildren(u,t)},unmountComponent:function(){this.unmountChildren(),l.deleteAllListeners(this._rootNodeID),c.Mixin.unmountComponent.call(this)}},y(o,c.Mixin),y(o,o.Mixin),y(o,d.Mixin),y(o,u),t.exports=o},{"./CSSPropertyOperations":4,"./DOMProperty":10,"./DOMPropertyOperations":11,"./ReactBrowserComponentMixin":28,"./ReactBrowserEventEmitter":29,"./ReactComponent":31,"./ReactMount":59,"./ReactMultiChild":60,"./ReactPerf":63,"./escapeTextForBrowser":102,"./invariant":118,"./keyOf":125,"./merge":128,"./mixInto":131}],39:[function(e,t){"use strict";var n=e("./EventConstants"),r=e("./LocalEventTrapMixin"),o=e("./ReactBrowserComponentMixin"),i=e("./ReactCompositeComponent"),a=e("./ReactDOM"),s=a.form,u=i.createClass({displayName:"ReactDOMForm",mixins:[o,r],render:function(){return this.transferPropsTo(s(null,this.props.children))},componentDidMount:function(){this.trapBubbledEvent(n.topLevelTypes.topReset,"reset"),this.trapBubbledEvent(n.topLevelTypes.topSubmit,"submit")}});t.exports=u},{"./EventConstants":15,"./LocalEventTrapMixin":24,"./ReactBrowserComponentMixin":28,"./ReactCompositeComponent":33,"./ReactDOM":36}],40:[function(e,t){"use strict";var n=e("./CSSPropertyOperations"),r=e("./DOMChildrenOperations"),o=e("./DOMPropertyOperations"),i=e("./ReactMount"),a=e("./ReactPerf"),s=e("./invariant"),u=e("./setInnerHTML"),c={dangerouslySetInnerHTML:"`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.",style:"`style` must be set using `updateStylesByID()`."},l={updatePropertyByID:a.measure("ReactDOMIDOperations","updatePropertyByID",function(e,t,n){var r=i.getNode(e);s(!c.hasOwnProperty(t)),null!=n?o.setValueForProperty(r,t,n):o.deleteValueForProperty(r,t)}),deletePropertyByID:a.measure("ReactDOMIDOperations","deletePropertyByID",function(e,t,n){var r=i.getNode(e);s(!c.hasOwnProperty(t)),o.deleteValueForProperty(r,t,n)}),updateStylesByID:a.measure("ReactDOMIDOperations","updateStylesByID",function(e,t){var r=i.getNode(e);n.setValueForStyles(r,t)}),updateInnerHTMLByID:a.measure("ReactDOMIDOperations","updateInnerHTMLByID",function(e,t){var n=i.getNode(e);u(n,t)}),updateTextContentByID:a.measure("ReactDOMIDOperations","updateTextContentByID",function(e,t){var n=i.getNode(e);r.updateTextContent(n,t)}),dangerouslyReplaceNodeWithMarkupByID:a.measure("ReactDOMIDOperations","dangerouslyReplaceNodeWithMarkupByID",function(e,t){var n=i.getNode(e);r.dangerouslyReplaceNodeWithMarkup(n,t)}),dangerouslyProcessChildrenUpdates:a.measure("ReactDOMIDOperations","dangerouslyProcessChildrenUpdates",function(e,t){for(var n=0;n<e.length;n++)e[n].parentNode=i.getNode(e[n].parentID);r.processUpdates(e,t)})};t.exports=l},{"./CSSPropertyOperations":4,"./DOMChildrenOperations":9,"./DOMPropertyOperations":11,"./ReactMount":59,"./ReactPerf":63,"./invariant":118,"./setInnerHTML":134}],41:[function(e,t){"use strict";var n=e("./EventConstants"),r=e("./LocalEventTrapMixin"),o=e("./ReactBrowserComponentMixin"),i=e("./ReactCompositeComponent"),a=e("./ReactDOM"),s=a.img,u=i.createClass({displayName:"ReactDOMImg",tagName:"IMG",mixins:[o,r],render:function(){return s(this.props)},componentDidMount:function(){this.trapBubbledEvent(n.topLevelTypes.topLoad,"load"),this.trapBubbledEvent(n.topLevelTypes.topError,"error")}});t.exports=u},{"./EventConstants":15,"./LocalEventTrapMixin":24,"./ReactBrowserComponentMixin":28,"./ReactCompositeComponent":33,"./ReactDOM":36}],42:[function(e,t){"use strict";var n=e("./AutoFocusMixin"),r=e("./DOMPropertyOperations"),o=e("./LinkedValueUtils"),i=e("./ReactBrowserComponentMixin"),a=e("./ReactCompositeComponent"),s=e("./ReactDOM"),u=e("./ReactMount"),c=e("./invariant"),l=e("./merge"),p=s.input,d={},f=a.createClass({displayName:"ReactDOMInput",mixins:[n,o.Mixin,i],getInitialState:function(){var e=this.props.defaultValue;return{checked:this.props.defaultChecked||!1,value:null!=e?e:null}},shouldComponentUpdate:function(){return!this._isChanging},render:function(){var e=l(this.props);e.defaultChecked=null,e.defaultValue=null;var t=o.getValue(this);e.value=null!=t?t:this.state.value;var n=o.getChecked(this);return e.checked=null!=n?n:this.state.checked,e.onChange=this._handleChange,p(e,this.props.children)},componentDidMount:function(){var e=u.getID(this.getDOMNode());d[e]=this},componentWillUnmount:function(){var e=this.getDOMNode(),t=u.getID(e);delete d[t]},componentDidUpdate:function(){var e=this.getDOMNode();null!=this.props.checked&&r.setValueForProperty(e,"checked",this.props.checked||!1);var t=o.getValue(this);null!=t&&r.setValueForProperty(e,"value",""+t)},_handleChange:function(e){var t,n=o.getOnChange(this);n&&(this._isChanging=!0,t=n.call(this,e),this._isChanging=!1),this.setState({checked:e.target.checked,value:e.target.value});var r=this.props.name;if("radio"===this.props.type&&null!=r){for(var i=this.getDOMNode(),a=i;a.parentNode;)a=a.parentNode;for(var s=a.querySelectorAll("input[name="+JSON.stringify(""+r)+'][type="radio"]'),l=0,p=s.length;p>l;l++){var f=s[l];if(f!==i&&f.form===i.form){var h=u.getID(f);c(h);var v=d[h];c(v),v.setState({checked:!1})}}}return t}});t.exports=f},{"./AutoFocusMixin":1,"./DOMPropertyOperations":11,"./LinkedValueUtils":23,"./ReactBrowserComponentMixin":28,"./ReactCompositeComponent":33,"./ReactDOM":36,"./ReactMount":59,"./invariant":118,"./merge":128}],43:[function(e,t){"use strict";var n=e("./ReactBrowserComponentMixin"),r=e("./ReactCompositeComponent"),o=e("./ReactDOM"),i=(e("./warning"),o.option),a=r.createClass({displayName:"ReactDOMOption",mixins:[n],componentWillMount:function(){},render:function(){return i(this.props,this.props.children)}});t.exports=a},{"./ReactBrowserComponentMixin":28,"./ReactCompositeComponent":33,"./ReactDOM":36,"./warning":139}],44:[function(e,t){"use strict";function n(e,t){if(null!=e[t])if(e.multiple){if(!Array.isArray(e[t]))return new Error("The `"+t+"` prop supplied to <select> must be an array if `multiple` is true.")}else if(Array.isArray(e[t]))return new Error("The `"+t+"` prop supplied to <select> must be a scalar value if `multiple` is false.")}function r(e,t){var n,r,o,i=e.props.multiple,a=null!=t?t:e.state.value,s=e.getDOMNode().options;if(i)for(n={},r=0,o=a.length;o>r;++r)n[""+a[r]]=!0;else n=""+a;for(r=0,o=s.length;o>r;r++){var u=i?n.hasOwnProperty(s[r].value):s[r].value===n;u!==s[r].selected&&(s[r].selected=u)}}var o=e("./AutoFocusMixin"),i=e("./LinkedValueUtils"),a=e("./ReactBrowserComponentMixin"),s=e("./ReactCompositeComponent"),u=e("./ReactDOM"),c=e("./merge"),l=u.select,p=s.createClass({displayName:"ReactDOMSelect",mixins:[o,i.Mixin,a],propTypes:{defaultValue:n,value:n},getInitialState:function(){return{value:this.props.defaultValue||(this.props.multiple?[]:"")}},componentWillReceiveProps:function(e){!this.props.multiple&&e.multiple?this.setState({value:[this.state.value]}):this.props.multiple&&!e.multiple&&this.setState({value:this.state.value[0]})},shouldComponentUpdate:function(){return!this._isChanging},render:function(){var e=c(this.props);return e.onChange=this._handleChange,e.value=null,l(e,this.props.children)},componentDidMount:function(){r(this,i.getValue(this))},componentDidUpdate:function(e){var t=i.getValue(this),n=!!e.multiple,o=!!this.props.multiple;(null!=t||n!==o)&&r(this,t)},_handleChange:function(e){var t,n=i.getOnChange(this);n&&(this._isChanging=!0,t=n.call(this,e),this._isChanging=!1);var r;if(this.props.multiple){r=[];for(var o=e.target.options,a=0,s=o.length;s>a;a++)o[a].selected&&r.push(o[a].value)}else r=e.target.value;return this.setState({value:r}),t}});t.exports=p},{"./AutoFocusMixin":1,"./LinkedValueUtils":23,"./ReactBrowserComponentMixin":28,"./ReactCompositeComponent":33,"./ReactDOM":36,"./merge":128}],45:[function(e,t){"use strict";function n(e,t,n,r){return e===n&&t===r}function r(e){var t=document.selection,n=t.createRange(),r=n.text.length,o=n.duplicate();o.moveToElementText(e),o.setEndPoint("EndToStart",n);var i=o.text.length,a=i+r;return{start:i,end:a}}function o(e){var t=window.getSelection();if(0===t.rangeCount)return null;var r=t.anchorNode,o=t.anchorOffset,i=t.focusNode,a=t.focusOffset,s=t.getRangeAt(0),u=n(t.anchorNode,t.anchorOffset,t.focusNode,t.focusOffset),c=u?0:s.toString().length,l=s.cloneRange();l.selectNodeContents(e),l.setEnd(s.startContainer,s.startOffset);var p=n(l.startContainer,l.startOffset,l.endContainer,l.endOffset),d=p?0:l.toString().length,f=d+c,h=document.createRange();h.setStart(r,o),h.setEnd(i,a);var v=h.collapsed;return h.detach(),{start:v?f:d,end:v?d:f}}function i(e,t){var n,r,o=document.selection.createRange().duplicate();"undefined"==typeof t.end?(n=t.start,r=n):t.start>t.end?(n=t.end,r=t.start):(n=t.start,r=t.end),o.moveToElementText(e),o.moveStart("character",n),o.setEndPoint("EndToStart",o),o.moveEnd("character",r-n),o.select()}function a(e,t){var n=window.getSelection(),r=e[c()].length,o=Math.min(t.start,r),i="undefined"==typeof t.end?o:Math.min(t.end,r);if(!n.extend&&o>i){var a=i;i=o,o=a}var s=u(e,o),l=u(e,i);if(s&&l){var p=document.createRange();p.setStart(s.node,s.offset),n.removeAllRanges(),o>i?(n.addRange(p),n.extend(l.node,l.offset)):(p.setEnd(l.node,l.offset),n.addRange(p)),p.detach()}}var s=e("./ExecutionEnvironment"),u=e("./getNodeForCharacterOffset"),c=e("./getTextContentAccessor"),l=s.canUseDOM&&document.selection,p={getOffsets:l?r:o,setOffsets:l?i:a};t.exports=p},{"./ExecutionEnvironment":21,"./getNodeForCharacterOffset":111,"./getTextContentAccessor":113}],46:[function(e,t){"use strict";var n=e("./AutoFocusMixin"),r=e("./DOMPropertyOperations"),o=e("./LinkedValueUtils"),i=e("./ReactBrowserComponentMixin"),a=e("./ReactCompositeComponent"),s=e("./ReactDOM"),u=e("./invariant"),c=e("./merge"),l=(e("./warning"),s.textarea),p=a.createClass({displayName:"ReactDOMTextarea",mixins:[n,o.Mixin,i],getInitialState:function(){var e=this.props.defaultValue,t=this.props.children;null!=t&&(u(null==e),Array.isArray(t)&&(u(t.length<=1),t=t[0]),e=""+t),null==e&&(e="");var n=o.getValue(this);return{initialValue:""+(null!=n?n:e)}},shouldComponentUpdate:function(){return!this._isChanging},render:function(){var e=c(this.props);return u(null==e.dangerouslySetInnerHTML),e.defaultValue=null,e.value=null,e.onChange=this._handleChange,l(e,this.state.initialValue)},componentDidUpdate:function(){var e=o.getValue(this);
if(null!=e){var t=this.getDOMNode();r.setValueForProperty(t,"value",""+e)}},_handleChange:function(e){var t,n=o.getOnChange(this);return n&&(this._isChanging=!0,t=n.call(this,e),this._isChanging=!1),this.setState({value:e.target.value}),t}});t.exports=p},{"./AutoFocusMixin":1,"./DOMPropertyOperations":11,"./LinkedValueUtils":23,"./ReactBrowserComponentMixin":28,"./ReactCompositeComponent":33,"./ReactDOM":36,"./invariant":118,"./merge":128,"./warning":139}],47:[function(e,t){"use strict";function n(){this.reinitializeTransaction()}var r=e("./ReactUpdates"),o=e("./Transaction"),i=e("./emptyFunction"),a=e("./mixInto"),s={initialize:i,close:function(){p.isBatchingUpdates=!1}},u={initialize:i,close:r.flushBatchedUpdates.bind(r)},c=[u,s];a(n,o.Mixin),a(n,{getTransactionWrappers:function(){return c}});var l=new n,p={isBatchingUpdates:!1,batchedUpdates:function(e,t,n){var r=p.isBatchingUpdates;p.isBatchingUpdates=!0,r?e(t,n):l.perform(e,null,t,n)}};t.exports=p},{"./ReactUpdates":74,"./Transaction":90,"./emptyFunction":100,"./mixInto":131}],48:[function(e,t){"use strict";function n(){x.EventEmitter.injectReactEventListener(D),x.EventPluginHub.injectEventPluginOrder(s),x.EventPluginHub.injectInstanceHandle(b),x.EventPluginHub.injectMount(O),x.EventPluginHub.injectEventPluginsByName({SimpleEventPlugin:_,EnterLeaveEventPlugin:u,ChangeEventPlugin:o,CompositionEventPlugin:a,MobileSafariClickEventPlugin:p,SelectEventPlugin:P,BeforeInputEventPlugin:r}),x.DOM.injectComponentClasses({button:m,form:g,img:y,input:C,option:E,select:R,textarea:M,html:N(v.html),head:N(v.head),body:N(v.body)}),x.CompositeComponent.injectMixin(d),x.DOMProperty.injectDOMPropertyConfig(l),x.DOMProperty.injectDOMPropertyConfig(T),x.EmptyComponent.injectEmptyComponent(v.noscript),x.Updates.injectReconcileTransaction(f.ReactReconcileTransaction),x.Updates.injectBatchingStrategy(h),x.RootIndex.injectCreateReactRootIndex(c.canUseDOM?i.createReactRootIndex:I.createReactRootIndex),x.Component.injectEnvironment(f)}var r=e("./BeforeInputEventPlugin"),o=e("./ChangeEventPlugin"),i=e("./ClientReactRootIndex"),a=e("./CompositionEventPlugin"),s=e("./DefaultEventPluginOrder"),u=e("./EnterLeaveEventPlugin"),c=e("./ExecutionEnvironment"),l=e("./HTMLDOMPropertyConfig"),p=e("./MobileSafariClickEventPlugin"),d=e("./ReactBrowserComponentMixin"),f=e("./ReactComponentBrowserEnvironment"),h=e("./ReactDefaultBatchingStrategy"),v=e("./ReactDOM"),m=e("./ReactDOMButton"),g=e("./ReactDOMForm"),y=e("./ReactDOMImg"),C=e("./ReactDOMInput"),E=e("./ReactDOMOption"),R=e("./ReactDOMSelect"),M=e("./ReactDOMTextarea"),D=e("./ReactEventListener"),x=e("./ReactInjection"),b=e("./ReactInstanceHandles"),O=e("./ReactMount"),P=e("./SelectEventPlugin"),I=e("./ServerReactRootIndex"),_=e("./SimpleEventPlugin"),T=e("./SVGDOMPropertyConfig"),N=e("./createFullPageComponent");t.exports={inject:n}},{"./BeforeInputEventPlugin":2,"./ChangeEventPlugin":6,"./ClientReactRootIndex":7,"./CompositionEventPlugin":8,"./DefaultEventPluginOrder":13,"./EnterLeaveEventPlugin":14,"./ExecutionEnvironment":21,"./HTMLDOMPropertyConfig":22,"./MobileSafariClickEventPlugin":25,"./ReactBrowserComponentMixin":28,"./ReactComponentBrowserEnvironment":32,"./ReactDOM":36,"./ReactDOMButton":37,"./ReactDOMForm":39,"./ReactDOMImg":41,"./ReactDOMInput":42,"./ReactDOMOption":43,"./ReactDOMSelect":44,"./ReactDOMTextarea":46,"./ReactDefaultBatchingStrategy":47,"./ReactEventListener":54,"./ReactInjection":55,"./ReactInstanceHandles":57,"./ReactMount":59,"./SVGDOMPropertyConfig":75,"./SelectEventPlugin":76,"./ServerReactRootIndex":77,"./SimpleEventPlugin":78,"./createFullPageComponent":97}],49:[function(e,t){"use strict";function n(e,t){if("function"==typeof t)for(var n in t)if(t.hasOwnProperty(n)){var r=t[n];if("function"==typeof r){var o=r.bind(t);for(var i in r)r.hasOwnProperty(i)&&(o[i]=r[i]);e[n]=o}else e[n]=r}}var r=e("./ReactContext"),o=e("./ReactCurrentOwner"),i=e("./merge"),a=(e("./warning"),function(){});a.createFactory=function(e){var t=Object.create(a.prototype),s=function(e,n){null==e?e={}:"object"==typeof e&&(e=i(e));var a=arguments.length-1;if(1===a)e.children=n;else if(a>1){for(var s=Array(a),u=0;a>u;u++)s[u]=arguments[u+1];e.children=s}var c=Object.create(t);return c._owner=o.current,c._context=r.current,c.props=e,c};return s.prototype=t,s.type=e,t.type=e,n(s,e),t.constructor=s,s},a.cloneAndReplaceProps=function(e,t){var n=Object.create(e.constructor.prototype);return n._owner=e._owner,n._context=e._context,n.props=t,n},a.isValidFactory=function(e){return"function"==typeof e&&e.prototype instanceof a},a.isValidDescriptor=function(e){return e instanceof a},t.exports=a},{"./ReactContext":34,"./ReactCurrentOwner":35,"./merge":128,"./warning":139}],50:[function(e,t){"use strict";function n(){var e=p.current;return e&&e.constructor.displayName||void 0}function r(e,t){e._store.validated||null!=e.props.key||(e._store.validated=!0,i("react_key_warning",'Each child in an array should have a unique "key" prop.',e,t))}function o(e,t,n){m.test(e)&&i("react_numeric_key_warning","Child objects should have non-numeric keys so ordering is preserved.",t,n)}function i(e,t,r,o){var i=n(),a=o.displayName,s=i||a,u=f[e];if(!u.hasOwnProperty(s)){u[s]=!0,t+=i?" Check the render method of "+i+".":" Check the renderComponent call using <"+a+">.";var c=null;r._owner&&r._owner!==p.current&&(c=r._owner.constructor.displayName,t+=" It was passed a child from "+c+"."),t+=" See http://fb.me/react-warning-keys for more information.",d(e,{component:s,componentOwner:c}),console.warn(t)}}function a(){var e=n()||"";h.hasOwnProperty(e)||(h[e]=!0,d("react_object_map_children"))}function s(e,t){if(Array.isArray(e))for(var n=0;n<e.length;n++){var i=e[n];c.isValidDescriptor(i)&&r(i,t)}else if(c.isValidDescriptor(e))e._store.validated=!0;else if(e&&"object"==typeof e){a();for(var s in e)o(s,e[s],t)}}function u(e,t,n,r){for(var o in t)if(t.hasOwnProperty(o)){var i;try{i=t[o](n,o,e,r)}catch(a){i=a}i instanceof Error&&!(i.message in v)&&(v[i.message]=!0,d("react_failed_descriptor_type_check",{message:i.message}))}}var c=e("./ReactDescriptor"),l=e("./ReactPropTypeLocations"),p=e("./ReactCurrentOwner"),d=e("./monitorCodeUse"),f={react_key_warning:{},react_numeric_key_warning:{}},h={},v={},m=/^\d+$/,g={createFactory:function(e,t,n){var r=function(){for(var r=e.apply(this,arguments),o=1;o<arguments.length;o++)s(arguments[o],r.type);var i=r.type.displayName;return t&&u(i,t,r.props,l.prop),n&&u(i,n,r._context,l.context),r};r.prototype=e.prototype,r.type=e.type;for(var o in e)e.hasOwnProperty(o)&&(r[o]=e[o]);return r}};t.exports=g},{"./ReactCurrentOwner":35,"./ReactDescriptor":49,"./ReactPropTypeLocations":66,"./monitorCodeUse":132}],51:[function(e,t){"use strict";function n(){return s(a),a()}function r(e){u[e]=!0}function o(e){delete u[e]}function i(e){return u[e]}var a,s=e("./invariant"),u={},c={injectEmptyComponent:function(e){a=e}},l={deregisterNullComponentID:o,getEmptyComponent:n,injection:c,isNullComponentID:i,registerNullComponentID:r};t.exports=l},{"./invariant":118}],52:[function(e,t){"use strict";var n={guard:function(e){return e}};t.exports=n},{}],53:[function(e,t){"use strict";function n(e){r.enqueueEvents(e),r.processEventQueue()}var r=e("./EventPluginHub"),o={handleTopLevel:function(e,t,o,i){var a=r.extractEvents(e,t,o,i);n(a)}};t.exports=o},{"./EventPluginHub":17}],54:[function(e,t){"use strict";function n(e){var t=l.getID(e),n=c.getReactRootIDFromNodeID(t),r=l.findReactContainerForID(n),o=l.getFirstReactDOM(r);return o}function r(e,t){this.topLevelType=e,this.nativeEvent=t,this.ancestors=[]}function o(e){for(var t=l.getFirstReactDOM(d(e.nativeEvent))||window,r=t;r;)e.ancestors.push(r),r=n(r);for(var o=0,i=e.ancestors.length;i>o;o++){t=e.ancestors[o];var a=l.getID(t)||"";v._handleTopLevel(e.topLevelType,t,a,e.nativeEvent)}}function i(e){var t=f(window);e(t)}var a=e("./EventListener"),s=e("./ExecutionEnvironment"),u=e("./PooledClass"),c=e("./ReactInstanceHandles"),l=e("./ReactMount"),p=e("./ReactUpdates"),d=e("./getEventTarget"),f=e("./getUnboundedScrollPosition"),h=e("./mixInto");h(r,{destructor:function(){this.topLevelType=null,this.nativeEvent=null,this.ancestors.length=0}}),u.addPoolingTo(r,u.twoArgumentPooler);var v={_enabled:!0,_handleTopLevel:null,WINDOW_HANDLE:s.canUseDOM?window:null,setHandleTopLevel:function(e){v._handleTopLevel=e},setEnabled:function(e){v._enabled=!!e},isEnabled:function(){return v._enabled},trapBubbledEvent:function(e,t,n){var r=n;return r?a.listen(r,t,v.dispatchEvent.bind(null,e)):void 0},trapCapturedEvent:function(e,t,n){var r=n;return r?a.capture(r,t,v.dispatchEvent.bind(null,e)):void 0},monitorScrollValue:function(e){var t=i.bind(null,e);a.listen(window,"scroll",t),a.listen(window,"resize",t)},dispatchEvent:function(e,t){if(v._enabled){var n=r.getPooled(e,t);try{p.batchedUpdates(o,n)}finally{r.release(n)}}}};t.exports=v},{"./EventListener":16,"./ExecutionEnvironment":21,"./PooledClass":26,"./ReactInstanceHandles":57,"./ReactMount":59,"./ReactUpdates":74,"./getEventTarget":109,"./getUnboundedScrollPosition":114,"./mixInto":131}],55:[function(e,t){"use strict";var n=e("./DOMProperty"),r=e("./EventPluginHub"),o=e("./ReactComponent"),i=e("./ReactCompositeComponent"),a=e("./ReactDOM"),s=e("./ReactEmptyComponent"),u=e("./ReactBrowserEventEmitter"),c=e("./ReactPerf"),l=e("./ReactRootIndex"),p=e("./ReactUpdates"),d={Component:o.injection,CompositeComponent:i.injection,DOMProperty:n.injection,EmptyComponent:s.injection,EventPluginHub:r.injection,DOM:a.injection,EventEmitter:u.injection,Perf:c.injection,RootIndex:l.injection,Updates:p.injection};t.exports=d},{"./DOMProperty":10,"./EventPluginHub":17,"./ReactBrowserEventEmitter":29,"./ReactComponent":31,"./ReactCompositeComponent":33,"./ReactDOM":36,"./ReactEmptyComponent":51,"./ReactPerf":63,"./ReactRootIndex":70,"./ReactUpdates":74}],56:[function(e,t){"use strict";function n(e){return o(document.documentElement,e)}var r=e("./ReactDOMSelection"),o=e("./containsNode"),i=e("./focusNode"),a=e("./getActiveElement"),s={hasSelectionCapabilities:function(e){return e&&("INPUT"===e.nodeName&&"text"===e.type||"TEXTAREA"===e.nodeName||"true"===e.contentEditable)},getSelectionInformation:function(){var e=a();return{focusedElem:e,selectionRange:s.hasSelectionCapabilities(e)?s.getSelection(e):null}},restoreSelection:function(e){var t=a(),r=e.focusedElem,o=e.selectionRange;t!==r&&n(r)&&(s.hasSelectionCapabilities(r)&&s.setSelection(r,o),i(r))},getSelection:function(e){var t;if("selectionStart"in e)t={start:e.selectionStart,end:e.selectionEnd};else if(document.selection&&"INPUT"===e.nodeName){var n=document.selection.createRange();n.parentElement()===e&&(t={start:-n.moveStart("character",-e.value.length),end:-n.moveEnd("character",-e.value.length)})}else t=r.getOffsets(e);return t||{start:0,end:0}},setSelection:function(e,t){var n=t.start,o=t.end;if("undefined"==typeof o&&(o=n),"selectionStart"in e)e.selectionStart=n,e.selectionEnd=Math.min(o,e.value.length);else if(document.selection&&"INPUT"===e.nodeName){var i=e.createTextRange();i.collapse(!0),i.moveStart("character",n),i.moveEnd("character",o-n),i.select()}else r.setOffsets(e,t)}};t.exports=s},{"./ReactDOMSelection":45,"./containsNode":94,"./focusNode":104,"./getActiveElement":106}],57:[function(e,t){"use strict";function n(e){return d+e.toString(36)}function r(e,t){return e.charAt(t)===d||t===e.length}function o(e){return""===e||e.charAt(0)===d&&e.charAt(e.length-1)!==d}function i(e,t){return 0===t.indexOf(e)&&r(t,e.length)}function a(e){return e?e.substr(0,e.lastIndexOf(d)):""}function s(e,t){if(p(o(e)&&o(t)),p(i(e,t)),e===t)return e;for(var n=e.length+f,a=n;a<t.length&&!r(t,a);a++);return t.substr(0,a)}function u(e,t){var n=Math.min(e.length,t.length);if(0===n)return"";for(var i=0,a=0;n>=a;a++)if(r(e,a)&&r(t,a))i=a;else if(e.charAt(a)!==t.charAt(a))break;var s=e.substr(0,i);return p(o(s)),s}function c(e,t,n,r,o,u){e=e||"",t=t||"",p(e!==t);var c=i(t,e);p(c||i(e,t));for(var l=0,d=c?a:s,f=e;;f=d(f,t)){var v;if(o&&f===e||u&&f===t||(v=n(f,c,r)),v===!1||f===t)break;p(l++<h)}}var l=e("./ReactRootIndex"),p=e("./invariant"),d=".",f=d.length,h=100,v={createReactRootID:function(){return n(l.createReactRootIndex())},createReactID:function(e,t){return e+t},getReactRootIDFromNodeID:function(e){if(e&&e.charAt(0)===d&&e.length>1){var t=e.indexOf(d,1);return t>-1?e.substr(0,t):e}return null},traverseEnterLeave:function(e,t,n,r,o){var i=u(e,t);i!==e&&c(e,i,n,r,!1,!0),i!==t&&c(i,t,n,o,!0,!1)},traverseTwoPhase:function(e,t,n){e&&(c("",e,t,n,!0,!1),c(e,"",t,n,!1,!0))},traverseAncestors:function(e,t,n){c("",e,t,n,!0,!1)},_getFirstCommonAncestorID:u,_getNextDescendantID:s,isAncestorIDOf:i,SEPARATOR:d};t.exports=v},{"./ReactRootIndex":70,"./invariant":118}],58:[function(e,t){"use strict";var n=e("./adler32"),r={CHECKSUM_ATTR_NAME:"data-react-checksum",addChecksumToMarkup:function(e){var t=n(e);return e.replace(">"," "+r.CHECKSUM_ATTR_NAME+'="'+t+'">')},canReuseMarkup:function(e,t){var o=t.getAttribute(r.CHECKSUM_ATTR_NAME);o=o&&parseInt(o,10);var i=n(e);return i===o}};t.exports=r},{"./adler32":93}],59:[function(e,t){"use strict";function n(e){var t=g(e);return t&&T.getID(t)}function r(e){var t=o(e);if(t)if(D.hasOwnProperty(t)){var n=D[t];n!==e&&(C(!s(n,t)),D[t]=e)}else D[t]=e;return t}function o(e){return e&&e.getAttribute&&e.getAttribute(M)||""}function i(e,t){var n=o(e);n!==t&&delete D[n],e.setAttribute(M,t),D[t]=e}function a(e){return D.hasOwnProperty(e)&&s(D[e],e)||(D[e]=T.findReactNodeByID(e)),D[e]}function s(e,t){if(e){C(o(e)===t);var n=T.findReactContainerForID(t);if(n&&m(n,e))return!0}return!1}function u(e){delete D[e]}function c(e){var t=D[e];return t&&s(t,e)?void(_=t):!1}function l(e){_=null,h.traverseAncestors(e,c);var t=_;return _=null,t}var p=e("./DOMProperty"),d=e("./ReactBrowserEventEmitter"),f=(e("./ReactCurrentOwner"),e("./ReactDescriptor")),h=e("./ReactInstanceHandles"),v=e("./ReactPerf"),m=e("./containsNode"),g=e("./getReactRootElementInContainer"),y=e("./instantiateReactComponent"),C=e("./invariant"),E=e("./shouldUpdateReactComponent"),R=(e("./warning"),h.SEPARATOR),M=p.ID_ATTRIBUTE_NAME,D={},x=1,b=9,O={},P={},I=[],_=null,T={_instancesByReactRootID:O,scrollMonitor:function(e,t){t()},_updateRootComponent:function(e,t,n,r){var o=t.props;return T.scrollMonitor(n,function(){e.replaceProps(o,r)}),e},_registerComponent:function(e,t){C(t&&(t.nodeType===x||t.nodeType===b)),d.ensureScrollValueMonitoring();var n=T.registerContainer(t);return O[n]=e,n},_renderNewRootComponent:v.measure("ReactMount","_renderNewRootComponent",function(e,t,n){var r=y(e),o=T._registerComponent(r,t);return r.mountComponentIntoNode(o,t,n),r}),renderComponent:function(e,t,r){C(f.isValidDescriptor(e));var o=O[n(t)];if(o){var i=o._descriptor;if(E(i,e))return T._updateRootComponent(o,e,t,r);T.unmountComponentAtNode(t)}var a=g(t),s=a&&T.isRenderedByReact(a),u=s&&!o,c=T._renderNewRootComponent(e,t,u);return r&&r.call(c),c},constructAndRenderComponent:function(e,t,n){return T.renderComponent(e(t),n)},constructAndRenderComponentByID:function(e,t,n){var r=document.getElementById(n);return C(r),T.constructAndRenderComponent(e,t,r)},registerContainer:function(e){var t=n(e);return t&&(t=h.getReactRootIDFromNodeID(t)),t||(t=h.createReactRootID()),P[t]=e,t},unmountComponentAtNode:function(e){var t=n(e),r=O[t];return r?(T.unmountComponentFromNode(r,e),delete O[t],delete P[t],!0):!1},unmountComponentFromNode:function(e,t){for(e.unmountComponent(),t.nodeType===b&&(t=t.documentElement);t.lastChild;)t.removeChild(t.lastChild)},findReactContainerForID:function(e){var t=h.getReactRootIDFromNodeID(e),n=P[t];return n},findReactNodeByID:function(e){var t=T.findReactContainerForID(e);return T.findComponentRoot(t,e)},isRenderedByReact:function(e){if(1!==e.nodeType)return!1;var t=T.getID(e);return t?t.charAt(0)===R:!1},getFirstReactDOM:function(e){for(var t=e;t&&t.parentNode!==t;){if(T.isRenderedByReact(t))return t;t=t.parentNode}return null},findComponentRoot:function(e,t){var n=I,r=0,o=l(t)||e;for(n[0]=o.firstChild,n.length=1;r<n.length;){for(var i,a=n[r++];a;){var s=T.getID(a);s?t===s?i=a:h.isAncestorIDOf(s,t)&&(n.length=r=0,n.push(a.firstChild)):n.push(a.firstChild),a=a.nextSibling}if(i)return n.length=0,i}n.length=0,C(!1)},getReactRootID:n,getID:r,setID:i,getNode:a,purgeID:u};t.exports=T},{"./DOMProperty":10,"./ReactBrowserEventEmitter":29,"./ReactCurrentOwner":35,"./ReactDescriptor":49,"./ReactInstanceHandles":57,"./ReactPerf":63,"./containsNode":94,"./getReactRootElementInContainer":112,"./instantiateReactComponent":117,"./invariant":118,"./shouldUpdateReactComponent":136,"./warning":139}],60:[function(e,t){"use strict";function n(e,t,n){h.push({parentID:e,parentNode:null,type:c.INSERT_MARKUP,markupIndex:v.push(t)-1,textContent:null,fromIndex:null,toIndex:n})}function r(e,t,n){h.push({parentID:e,parentNode:null,type:c.MOVE_EXISTING,markupIndex:null,textContent:null,fromIndex:t,toIndex:n})}function o(e,t){h.push({parentID:e,parentNode:null,type:c.REMOVE_NODE,markupIndex:null,textContent:null,fromIndex:t,toIndex:null})}function i(e,t){h.push({parentID:e,parentNode:null,type:c.TEXT_CONTENT,markupIndex:null,textContent:t,fromIndex:null,toIndex:null})}function a(){h.length&&(u.BackendIDOperations.dangerouslyProcessChildrenUpdates(h,v),s())}function s(){h.length=0,v.length=0}var u=e("./ReactComponent"),c=e("./ReactMultiChildUpdateTypes"),l=e("./flattenChildren"),p=e("./instantiateReactComponent"),d=e("./shouldUpdateReactComponent"),f=0,h=[],v=[],m={Mixin:{mountChildren:function(e,t){var n=l(e),r=[],o=0;this._renderedChildren=n;for(var i in n){var a=n[i];if(n.hasOwnProperty(i)){var s=p(a);n[i]=s;var u=this._rootNodeID+i,c=s.mountComponent(u,t,this._mountDepth+1);s._mountIndex=o,r.push(c),o++}}return r},updateTextContent:function(e){f++;var t=!0;try{var n=this._renderedChildren;for(var r in n)n.hasOwnProperty(r)&&this._unmountChildByName(n[r],r);this.setTextContent(e),t=!1}finally{f--,f||(t?s():a())}},updateChildren:function(e,t){f++;var n=!0;try{this._updateChildren(e,t),n=!1}finally{f--,f||(n?s():a())}},_updateChildren:function(e,t){var n=l(e),r=this._renderedChildren;if(n||r){var o,i=0,a=0;for(o in n)if(n.hasOwnProperty(o)){var s=r&&r[o],u=s&&s._descriptor,c=n[o];if(d(u,c))this.moveChild(s,a,i),i=Math.max(s._mountIndex,i),s.receiveComponent(c,t),s._mountIndex=a;else{s&&(i=Math.max(s._mountIndex,i),this._unmountChildByName(s,o));var f=p(c);this._mountChildByNameAtIndex(f,o,a,t)}a++}for(o in r)!r.hasOwnProperty(o)||n&&n[o]||this._unmountChildByName(r[o],o)}},unmountChildren:function(){var e=this._renderedChildren;for(var t in e){var n=e[t];n.unmountComponent&&n.unmountComponent()}this._renderedChildren=null},moveChild:function(e,t,n){e._mountIndex<n&&r(this._rootNodeID,e._mountIndex,t)},createChild:function(e,t){n(this._rootNodeID,t,e._mountIndex)},removeChild:function(e){o(this._rootNodeID,e._mountIndex)},setTextContent:function(e){i(this._rootNodeID,e)},_mountChildByNameAtIndex:function(e,t,n,r){var o=this._rootNodeID+t,i=e.mountComponent(o,r,this._mountDepth+1);e._mountIndex=n,this.createChild(e,i),this._renderedChildren=this._renderedChildren||{},this._renderedChildren[t]=e},_unmountChildByName:function(e,t){this.removeChild(e),e._mountIndex=null,e.unmountComponent(),delete this._renderedChildren[t]}}};t.exports=m},{"./ReactComponent":31,"./ReactMultiChildUpdateTypes":61,"./flattenChildren":103,"./instantiateReactComponent":117,"./shouldUpdateReactComponent":136}],61:[function(e,t){"use strict";var n=e("./keyMirror"),r=n({INSERT_MARKUP:null,MOVE_EXISTING:null,REMOVE_NODE:null,TEXT_CONTENT:null});t.exports=r},{"./keyMirror":124}],62:[function(e,t){"use strict";var n=e("./emptyObject"),r=e("./invariant"),o={isValidOwner:function(e){return!(!e||"function"!=typeof e.attachRef||"function"!=typeof e.detachRef)},addComponentAsRefTo:function(e,t,n){r(o.isValidOwner(n)),n.attachRef(t,e)},removeComponentAsRefFrom:function(e,t,n){r(o.isValidOwner(n)),n.refs[t]===e&&n.detachRef(t)},Mixin:{construct:function(){this.refs=n},attachRef:function(e,t){r(t.isOwnedBy(this));var o=this.refs===n?this.refs={}:this.refs;o[e]=t},detachRef:function(e){delete this.refs[e]}}};t.exports=o},{"./emptyObject":101,"./invariant":118}],63:[function(e,t){"use strict";function n(e,t,n){return n}var r={enableMeasure:!1,storedMeasure:n,measure:function(e,t,n){return n},injection:{injectMeasure:function(e){r.storedMeasure=e}}};t.exports=r},{}],64:[function(e,t){"use strict";function n(e){return function(t,n,r){t[n]=t.hasOwnProperty(n)?e(t[n],r):r}}function r(e,t){for(var n in t)if(t.hasOwnProperty(n)){var r=c[n];r&&c.hasOwnProperty(n)?r(e,n,t[n]):e.hasOwnProperty(n)||(e[n]=t[n])}return e}var o=e("./emptyFunction"),i=e("./invariant"),a=e("./joinClasses"),s=e("./merge"),u=n(function(e,t){return s(t,e)}),c={children:o,className:n(a),key:o,ref:o,style:u},l={TransferStrategies:c,mergeProps:function(e,t){return r(s(e),t)},Mixin:{transferPropsTo:function(e){return i(e._owner===this),r(e.props,this.props),e}}};t.exports=l},{"./emptyFunction":100,"./invariant":118,"./joinClasses":123,"./merge":128}],65:[function(e,t){"use strict";var n={};t.exports=n},{}],66:[function(e,t){"use strict";var n=e("./keyMirror"),r=n({prop:null,context:null,childContext:null});t.exports=r},{"./keyMirror":124}],67:[function(e,t){"use strict";function n(e){function t(t,n,r,o,i){if(o=o||C,null!=n[r])return e(n,r,o,i);var a=g[i];return t?new Error("Required "+a+" `"+r+"` was not specified in "+("`"+o+"`.")):void 0}var n=t.bind(null,!1);return n.isRequired=t.bind(null,!0),n}function r(e){function t(t,n,r,o){var i=t[n],a=h(i);if(a!==e){var s=g[o],u=v(i);return new Error("Invalid "+s+" `"+n+"` of type `"+u+"` "+("supplied to `"+r+"`, expected `"+e+"`."))}}return n(t)}function o(){return n(y.thatReturns())}function i(e){function t(t,n,r,o){var i=t[n];if(!Array.isArray(i)){var a=g[o],s=h(i);return new Error("Invalid "+a+" `"+n+"` of type "+("`"+s+"` supplied to `"+r+"`, expected an array."))}for(var u=0;u<i.length;u++){var c=e(i,u,r,o);if(c instanceof Error)return c}}return n(t)}function a(){function e(e,t,n,r){if(!m.isValidDescriptor(e[t])){var o=g[r];return new Error("Invalid "+o+" `"+t+"` supplied to "+("`"+n+"`, expected a React component."))}}return n(e)}function s(e){function t(t,n,r,o){if(!(t[n]instanceof e)){var i=g[o],a=e.name||C;return new Error("Invalid "+i+" `"+n+"` supplied to "+("`"+r+"`, expected instance of `"+a+"`."))}}return n(t)}function u(e){function t(t,n,r,o){for(var i=t[n],a=0;a<e.length;a++)if(i===e[a])return;var s=g[o],u=JSON.stringify(e);return new Error("Invalid "+s+" `"+n+"` of value `"+i+"` "+("supplied to `"+r+"`, expected one of "+u+"."))}return n(t)}function c(e){function t(t,n,r,o){var i=t[n],a=h(i);if("object"!==a){var s=g[o];return new Error("Invalid "+s+" `"+n+"` of type "+("`"+a+"` supplied to `"+r+"`, expected an object."))}for(var u in i)if(i.hasOwnProperty(u)){var c=e(i,u,r,o);if(c instanceof Error)return c}}return n(t)}function l(e){function t(t,n,r,o){for(var i=0;i<e.length;i++){var a=e[i];if(null==a(t,n,r,o))return}var s=g[o];return new Error("Invalid "+s+" `"+n+"` supplied to "+("`"+r+"`."))}return n(t)}function p(){function e(e,t,n,r){if(!f(e[t])){var o=g[r];return new Error("Invalid "+o+" `"+t+"` supplied to "+("`"+n+"`, expected a renderable prop."))}}return n(e)}function d(e){function t(t,n,r,o){var i=t[n],a=h(i);if("object"!==a){var s=g[o];return new Error("Invalid "+s+" `"+n+"` of type `"+a+"` "+("supplied to `"+r+"`, expected `object`."))}for(var u in e){var c=e[u];if(c){var l=c(i,u,r,o);if(l)return l}}}return n(t,"expected `object`")}function f(e){switch(typeof e){case"number":case"string":return!0;case"boolean":return!e;case"object":if(Array.isArray(e))return e.every(f);if(m.isValidDescriptor(e))return!0;for(var t in e)if(!f(e[t]))return!1;return!0;default:return!1}}function h(e){var t=typeof e;return Array.isArray(e)?"array":e instanceof RegExp?"object":t}function v(e){var t=h(e);if("object"===t){if(e instanceof Date)return"date";if(e instanceof RegExp)return"regexp"}return t}var m=e("./ReactDescriptor"),g=e("./ReactPropTypeLocationNames"),y=e("./emptyFunction"),C="<<anonymous>>",E={array:r("array"),bool:r("boolean"),func:r("function"),number:r("number"),object:r("object"),string:r("string"),any:o(),arrayOf:i,component:a(),instanceOf:s,objectOf:c,oneOf:u,oneOfType:l,renderable:p(),shape:d};t.exports=E},{"./ReactDescriptor":49,"./ReactPropTypeLocationNames":65,"./emptyFunction":100}],68:[function(e,t){"use strict";function n(){this.listenersToPut=[]}var r=e("./PooledClass"),o=e("./ReactBrowserEventEmitter"),i=e("./mixInto");i(n,{enqueuePutListener:function(e,t,n){this.listenersToPut.push({rootNodeID:e,propKey:t,propValue:n})},putListeners:function(){for(var e=0;e<this.listenersToPut.length;e++){var t=this.listenersToPut[e];o.putListener(t.rootNodeID,t.propKey,t.propValue)}},reset:function(){this.listenersToPut.length=0},destructor:function(){this.reset()}}),r.addPoolingTo(n),t.exports=n},{"./PooledClass":26,"./ReactBrowserEventEmitter":29,"./mixInto":131}],69:[function(e,t){"use strict";function n(){this.reinitializeTransaction(),this.renderToStaticMarkup=!1,this.reactMountReady=r.getPooled(null),this.putListenerQueue=s.getPooled()}var r=e("./CallbackQueue"),o=e("./PooledClass"),i=e("./ReactBrowserEventEmitter"),a=e("./ReactInputSelection"),s=e("./ReactPutListenerQueue"),u=e("./Transaction"),c=e("./mixInto"),l={initialize:a.getSelectionInformation,close:a.restoreSelection},p={initialize:function(){var e=i.isEnabled();return i.setEnabled(!1),e},close:function(e){i.setEnabled(e)}},d={initialize:function(){this.reactMountReady.reset()},close:function(){this.reactMountReady.notifyAll()}},f={initialize:function(){this.putListenerQueue.reset()},close:function(){this.putListenerQueue.putListeners()}},h=[f,l,p,d],v={getTransactionWrappers:function(){return h},getReactMountReady:function(){return this.reactMountReady},getPutListenerQueue:function(){return this.putListenerQueue},destructor:function(){r.release(this.reactMountReady),this.reactMountReady=null,s.release(this.putListenerQueue),this.putListenerQueue=null}};c(n,u.Mixin),c(n,v),o.addPoolingTo(n),t.exports=n},{"./CallbackQueue":5,"./PooledClass":26,"./ReactBrowserEventEmitter":29,"./ReactInputSelection":56,"./ReactPutListenerQueue":68,"./Transaction":90,"./mixInto":131}],70:[function(e,t){"use strict";var n={injectCreateReactRootIndex:function(e){r.createReactRootIndex=e}},r={createReactRootIndex:null,injection:n};t.exports=r},{}],71:[function(e,t){"use strict";function n(e){c(o.isValidDescriptor(e)),c(!(2===arguments.length&&"function"==typeof arguments[1]));var t;try{var n=i.createReactRootID();return t=s.getPooled(!1),t.perform(function(){var r=u(e),o=r.mountComponent(n,t,0);return a.addChecksumToMarkup(o)},null)}finally{s.release(t)}}function r(e){c(o.isValidDescriptor(e));var t;try{var n=i.createReactRootID();return t=s.getPooled(!0),t.perform(function(){var r=u(e);return r.mountComponent(n,t,0)},null)}finally{s.release(t)}}var o=e("./ReactDescriptor"),i=e("./ReactInstanceHandles"),a=e("./ReactMarkupChecksum"),s=e("./ReactServerRenderingTransaction"),u=e("./instantiateReactComponent"),c=e("./invariant");t.exports={renderComponentToString:n,renderComponentToStaticMarkup:r}},{"./ReactDescriptor":49,"./ReactInstanceHandles":57,"./ReactMarkupChecksum":58,"./ReactServerRenderingTransaction":72,"./instantiateReactComponent":117,"./invariant":118}],72:[function(e,t){"use strict";function n(e){this.reinitializeTransaction(),this.renderToStaticMarkup=e,this.reactMountReady=o.getPooled(null),this.putListenerQueue=i.getPooled()}var r=e("./PooledClass"),o=e("./CallbackQueue"),i=e("./ReactPutListenerQueue"),a=e("./Transaction"),s=e("./emptyFunction"),u=e("./mixInto"),c={initialize:function(){this.reactMountReady.reset()},close:s},l={initialize:function(){this.putListenerQueue.reset()},close:s},p=[l,c],d={getTransactionWrappers:function(){return p},getReactMountReady:function(){return this.reactMountReady},getPutListenerQueue:function(){return this.putListenerQueue},destructor:function(){o.release(this.reactMountReady),this.reactMountReady=null,i.release(this.putListenerQueue),this.putListenerQueue=null}};u(n,a.Mixin),u(n,d),r.addPoolingTo(n),t.exports=n},{"./CallbackQueue":5,"./PooledClass":26,"./ReactPutListenerQueue":68,"./Transaction":90,"./emptyFunction":100,"./mixInto":131}],73:[function(e,t){"use strict";var n=e("./DOMPropertyOperations"),r=e("./ReactBrowserComponentMixin"),o=e("./ReactComponent"),i=e("./ReactDescriptor"),a=e("./escapeTextForBrowser"),s=e("./mixInto"),u=function(e){this.construct(e)};s(u,o.Mixin),s(u,r),s(u,{mountComponent:function(e,t,r){o.Mixin.mountComponent.call(this,e,t,r);var i=a(this.props);return t.renderToStaticMarkup?i:"<span "+n.createMarkupForID(e)+">"+i+"</span>"},receiveComponent:function(e){var t=e.props;t!==this.props&&(this.props=t,o.BackendIDOperations.updateTextContentByID(this._rootNodeID,t))}}),t.exports=i.createFactory(u)},{"./DOMPropertyOperations":11,"./ReactBrowserComponentMixin":28,"./ReactComponent":31,"./ReactDescriptor":49,"./escapeTextForBrowser":102,"./mixInto":131}],74:[function(e,t){"use strict";function n(){d(R.ReactReconcileTransaction&&v)}function r(){this.reinitializeTransaction(),this.dirtyComponentsLength=null,this.callbackQueue=u.getPooled(null),this.reconcileTransaction=R.ReactReconcileTransaction.getPooled()}function o(e,t,r){n(),v.batchedUpdates(e,t,r)}function i(e,t){return e._mountDepth-t._mountDepth}function a(e){var t=e.dirtyComponentsLength;d(t===h.length),h.sort(i);for(var n=0;t>n;n++){var r=h[n];if(r.isMounted()){var o=r._pendingCallbacks;if(r._pendingCallbacks=null,r.performUpdateIfNecessary(e.reconcileTransaction),o)for(var a=0;a<o.length;a++)e.callbackQueue.enqueue(o[a],r)}}}function s(e,t){return d(!t||"function"==typeof t),n(),v.isBatchingUpdates?(h.push(e),void(t&&(e._pendingCallbacks?e._pendingCallbacks.push(t):e._pendingCallbacks=[t]))):void v.batchedUpdates(s,e,t)}var u=e("./CallbackQueue"),c=e("./PooledClass"),l=(e("./ReactCurrentOwner"),e("./ReactPerf")),p=e("./Transaction"),d=e("./invariant"),f=e("./mixInto"),h=(e("./warning"),[]),v=null,m={initialize:function(){this.dirtyComponentsLength=h.length},close:function(){this.dirtyComponentsLength!==h.length?(h.splice(0,this.dirtyComponentsLength),C()):h.length=0}},g={initialize:function(){this.callbackQueue.reset()},close:function(){this.callbackQueue.notifyAll()}},y=[m,g];f(r,p.Mixin),f(r,{getTransactionWrappers:function(){return y},destructor:function(){this.dirtyComponentsLength=null,u.release(this.callbackQueue),this.callbackQueue=null,R.ReactReconcileTransaction.release(this.reconcileTransaction),this.reconcileTransaction=null},perform:function(e,t,n){return p.Mixin.perform.call(this,this.reconcileTransaction.perform,this.reconcileTransaction,e,t,n)}}),c.addPoolingTo(r);var C=l.measure("ReactUpdates","flushBatchedUpdates",function(){for(;h.length;){var e=r.getPooled();e.perform(a,null,e),r.release(e)}}),E={injectReconcileTransaction:function(e){d(e),R.ReactReconcileTransaction=e},injectBatchingStrategy:function(e){d(e),d("function"==typeof e.batchedUpdates),d("boolean"==typeof e.isBatchingUpdates),v=e}},R={ReactReconcileTransaction:null,batchedUpdates:o,enqueueUpdate:s,flushBatchedUpdates:C,injection:E};t.exports=R},{"./CallbackQueue":5,"./PooledClass":26,"./ReactCurrentOwner":35,"./ReactPerf":63,"./Transaction":90,"./invariant":118,"./mixInto":131,"./warning":139}],75:[function(e,t){"use strict";var n=e("./DOMProperty"),r=n.injection.MUST_USE_ATTRIBUTE,o={Properties:{cx:r,cy:r,d:r,dx:r,dy:r,fill:r,fillOpacity:r,fontFamily:r,fontSize:r,fx:r,fy:r,gradientTransform:r,gradientUnits:r,markerEnd:r,markerMid:r,markerStart:r,offset:r,opacity:r,patternContentUnits:r,patternUnits:r,points:r,preserveAspectRatio:r,r:r,rx:r,ry:r,spreadMethod:r,stopColor:r,stopOpacity:r,stroke:r,strokeDasharray:r,strokeLinecap:r,strokeOpacity:r,strokeWidth:r,textAnchor:r,transform:r,version:r,viewBox:r,x1:r,x2:r,x:r,y1:r,y2:r,y:r},DOMAttributeNames:{fillOpacity:"fill-opacity",fontFamily:"font-family",fontSize:"font-size",gradientTransform:"gradientTransform",gradientUnits:"gradientUnits",markerEnd:"marker-end",markerMid:"marker-mid",markerStart:"marker-start",patternContentUnits:"patternContentUnits",patternUnits:"patternUnits",preserveAspectRatio:"preserveAspectRatio",spreadMethod:"spreadMethod",stopColor:"stop-color",stopOpacity:"stop-opacity",strokeDasharray:"stroke-dasharray",strokeLinecap:"stroke-linecap",strokeOpacity:"stroke-opacity",strokeWidth:"stroke-width",textAnchor:"text-anchor",viewBox:"viewBox"}};
t.exports=o},{"./DOMProperty":10}],76:[function(e,t){"use strict";function n(e){if("selectionStart"in e&&a.hasSelectionCapabilities(e))return{start:e.selectionStart,end:e.selectionEnd};if(document.selection){var t=document.selection.createRange();return{parentElement:t.parentElement(),text:t.text,top:t.boundingTop,left:t.boundingLeft}}var n=window.getSelection();return{anchorNode:n.anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset}}function r(e){if(!g&&null!=h&&h==u()){var t=n(h);if(!m||!p(m,t)){m=t;var r=s.getPooled(f.select,v,e);return r.type="select",r.target=h,i.accumulateTwoPhaseDispatches(r),r}}}var o=e("./EventConstants"),i=e("./EventPropagators"),a=e("./ReactInputSelection"),s=e("./SyntheticEvent"),u=e("./getActiveElement"),c=e("./isTextInputElement"),l=e("./keyOf"),p=e("./shallowEqual"),d=o.topLevelTypes,f={select:{phasedRegistrationNames:{bubbled:l({onSelect:null}),captured:l({onSelectCapture:null})},dependencies:[d.topBlur,d.topContextMenu,d.topFocus,d.topKeyDown,d.topMouseDown,d.topMouseUp,d.topSelectionChange]}},h=null,v=null,m=null,g=!1,y={eventTypes:f,extractEvents:function(e,t,n,o){switch(e){case d.topFocus:(c(t)||"true"===t.contentEditable)&&(h=t,v=n,m=null);break;case d.topBlur:h=null,v=null,m=null;break;case d.topMouseDown:g=!0;break;case d.topContextMenu:case d.topMouseUp:return g=!1,r(o);case d.topSelectionChange:case d.topKeyDown:case d.topKeyUp:return r(o)}}};t.exports=y},{"./EventConstants":15,"./EventPropagators":20,"./ReactInputSelection":56,"./SyntheticEvent":82,"./getActiveElement":106,"./isTextInputElement":121,"./keyOf":125,"./shallowEqual":135}],77:[function(e,t){"use strict";var n=Math.pow(2,53),r={createReactRootIndex:function(){return Math.ceil(Math.random()*n)}};t.exports=r},{}],78:[function(e,t){"use strict";var n=e("./EventConstants"),r=e("./EventPluginUtils"),o=e("./EventPropagators"),i=e("./SyntheticClipboardEvent"),a=e("./SyntheticEvent"),s=e("./SyntheticFocusEvent"),u=e("./SyntheticKeyboardEvent"),c=e("./SyntheticMouseEvent"),l=e("./SyntheticDragEvent"),p=e("./SyntheticTouchEvent"),d=e("./SyntheticUIEvent"),f=e("./SyntheticWheelEvent"),h=e("./invariant"),v=e("./keyOf"),m=n.topLevelTypes,g={blur:{phasedRegistrationNames:{bubbled:v({onBlur:!0}),captured:v({onBlurCapture:!0})}},click:{phasedRegistrationNames:{bubbled:v({onClick:!0}),captured:v({onClickCapture:!0})}},contextMenu:{phasedRegistrationNames:{bubbled:v({onContextMenu:!0}),captured:v({onContextMenuCapture:!0})}},copy:{phasedRegistrationNames:{bubbled:v({onCopy:!0}),captured:v({onCopyCapture:!0})}},cut:{phasedRegistrationNames:{bubbled:v({onCut:!0}),captured:v({onCutCapture:!0})}},doubleClick:{phasedRegistrationNames:{bubbled:v({onDoubleClick:!0}),captured:v({onDoubleClickCapture:!0})}},drag:{phasedRegistrationNames:{bubbled:v({onDrag:!0}),captured:v({onDragCapture:!0})}},dragEnd:{phasedRegistrationNames:{bubbled:v({onDragEnd:!0}),captured:v({onDragEndCapture:!0})}},dragEnter:{phasedRegistrationNames:{bubbled:v({onDragEnter:!0}),captured:v({onDragEnterCapture:!0})}},dragExit:{phasedRegistrationNames:{bubbled:v({onDragExit:!0}),captured:v({onDragExitCapture:!0})}},dragLeave:{phasedRegistrationNames:{bubbled:v({onDragLeave:!0}),captured:v({onDragLeaveCapture:!0})}},dragOver:{phasedRegistrationNames:{bubbled:v({onDragOver:!0}),captured:v({onDragOverCapture:!0})}},dragStart:{phasedRegistrationNames:{bubbled:v({onDragStart:!0}),captured:v({onDragStartCapture:!0})}},drop:{phasedRegistrationNames:{bubbled:v({onDrop:!0}),captured:v({onDropCapture:!0})}},focus:{phasedRegistrationNames:{bubbled:v({onFocus:!0}),captured:v({onFocusCapture:!0})}},input:{phasedRegistrationNames:{bubbled:v({onInput:!0}),captured:v({onInputCapture:!0})}},keyDown:{phasedRegistrationNames:{bubbled:v({onKeyDown:!0}),captured:v({onKeyDownCapture:!0})}},keyPress:{phasedRegistrationNames:{bubbled:v({onKeyPress:!0}),captured:v({onKeyPressCapture:!0})}},keyUp:{phasedRegistrationNames:{bubbled:v({onKeyUp:!0}),captured:v({onKeyUpCapture:!0})}},load:{phasedRegistrationNames:{bubbled:v({onLoad:!0}),captured:v({onLoadCapture:!0})}},error:{phasedRegistrationNames:{bubbled:v({onError:!0}),captured:v({onErrorCapture:!0})}},mouseDown:{phasedRegistrationNames:{bubbled:v({onMouseDown:!0}),captured:v({onMouseDownCapture:!0})}},mouseMove:{phasedRegistrationNames:{bubbled:v({onMouseMove:!0}),captured:v({onMouseMoveCapture:!0})}},mouseOut:{phasedRegistrationNames:{bubbled:v({onMouseOut:!0}),captured:v({onMouseOutCapture:!0})}},mouseOver:{phasedRegistrationNames:{bubbled:v({onMouseOver:!0}),captured:v({onMouseOverCapture:!0})}},mouseUp:{phasedRegistrationNames:{bubbled:v({onMouseUp:!0}),captured:v({onMouseUpCapture:!0})}},paste:{phasedRegistrationNames:{bubbled:v({onPaste:!0}),captured:v({onPasteCapture:!0})}},reset:{phasedRegistrationNames:{bubbled:v({onReset:!0}),captured:v({onResetCapture:!0})}},scroll:{phasedRegistrationNames:{bubbled:v({onScroll:!0}),captured:v({onScrollCapture:!0})}},submit:{phasedRegistrationNames:{bubbled:v({onSubmit:!0}),captured:v({onSubmitCapture:!0})}},touchCancel:{phasedRegistrationNames:{bubbled:v({onTouchCancel:!0}),captured:v({onTouchCancelCapture:!0})}},touchEnd:{phasedRegistrationNames:{bubbled:v({onTouchEnd:!0}),captured:v({onTouchEndCapture:!0})}},touchMove:{phasedRegistrationNames:{bubbled:v({onTouchMove:!0}),captured:v({onTouchMoveCapture:!0})}},touchStart:{phasedRegistrationNames:{bubbled:v({onTouchStart:!0}),captured:v({onTouchStartCapture:!0})}},wheel:{phasedRegistrationNames:{bubbled:v({onWheel:!0}),captured:v({onWheelCapture:!0})}}},y={topBlur:g.blur,topClick:g.click,topContextMenu:g.contextMenu,topCopy:g.copy,topCut:g.cut,topDoubleClick:g.doubleClick,topDrag:g.drag,topDragEnd:g.dragEnd,topDragEnter:g.dragEnter,topDragExit:g.dragExit,topDragLeave:g.dragLeave,topDragOver:g.dragOver,topDragStart:g.dragStart,topDrop:g.drop,topError:g.error,topFocus:g.focus,topInput:g.input,topKeyDown:g.keyDown,topKeyPress:g.keyPress,topKeyUp:g.keyUp,topLoad:g.load,topMouseDown:g.mouseDown,topMouseMove:g.mouseMove,topMouseOut:g.mouseOut,topMouseOver:g.mouseOver,topMouseUp:g.mouseUp,topPaste:g.paste,topReset:g.reset,topScroll:g.scroll,topSubmit:g.submit,topTouchCancel:g.touchCancel,topTouchEnd:g.touchEnd,topTouchMove:g.touchMove,topTouchStart:g.touchStart,topWheel:g.wheel};for(var C in y)y[C].dependencies=[C];var E={eventTypes:g,executeDispatch:function(e,t,n){var o=r.executeDispatch(e,t,n);o===!1&&(e.stopPropagation(),e.preventDefault())},extractEvents:function(e,t,n,r){var v=y[e];if(!v)return null;var g;switch(e){case m.topInput:case m.topLoad:case m.topError:case m.topReset:case m.topSubmit:g=a;break;case m.topKeyPress:if(0===r.charCode)return null;case m.topKeyDown:case m.topKeyUp:g=u;break;case m.topBlur:case m.topFocus:g=s;break;case m.topClick:if(2===r.button)return null;case m.topContextMenu:case m.topDoubleClick:case m.topMouseDown:case m.topMouseMove:case m.topMouseOut:case m.topMouseOver:case m.topMouseUp:g=c;break;case m.topDrag:case m.topDragEnd:case m.topDragEnter:case m.topDragExit:case m.topDragLeave:case m.topDragOver:case m.topDragStart:case m.topDrop:g=l;break;case m.topTouchCancel:case m.topTouchEnd:case m.topTouchMove:case m.topTouchStart:g=p;break;case m.topScroll:g=d;break;case m.topWheel:g=f;break;case m.topCopy:case m.topCut:case m.topPaste:g=i}h(g);var C=g.getPooled(v,n,r);return o.accumulateTwoPhaseDispatches(C),C}};t.exports=E},{"./EventConstants":15,"./EventPluginUtils":19,"./EventPropagators":20,"./SyntheticClipboardEvent":79,"./SyntheticDragEvent":81,"./SyntheticEvent":82,"./SyntheticFocusEvent":83,"./SyntheticKeyboardEvent":85,"./SyntheticMouseEvent":86,"./SyntheticTouchEvent":87,"./SyntheticUIEvent":88,"./SyntheticWheelEvent":89,"./invariant":118,"./keyOf":125}],79:[function(e,t){"use strict";function n(e,t,n){r.call(this,e,t,n)}var r=e("./SyntheticEvent"),o={clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}};r.augmentClass(n,o),t.exports=n},{"./SyntheticEvent":82}],80:[function(e,t){"use strict";function n(e,t,n){r.call(this,e,t,n)}var r=e("./SyntheticEvent"),o={data:null};r.augmentClass(n,o),t.exports=n},{"./SyntheticEvent":82}],81:[function(e,t){"use strict";function n(e,t,n){r.call(this,e,t,n)}var r=e("./SyntheticMouseEvent"),o={dataTransfer:null};r.augmentClass(n,o),t.exports=n},{"./SyntheticMouseEvent":86}],82:[function(e,t){"use strict";function n(e,t,n){this.dispatchConfig=e,this.dispatchMarker=t,this.nativeEvent=n;var r=this.constructor.Interface;for(var i in r)if(r.hasOwnProperty(i)){var a=r[i];this[i]=a?a(n):n[i]}var s=null!=n.defaultPrevented?n.defaultPrevented:n.returnValue===!1;this.isDefaultPrevented=s?o.thatReturnsTrue:o.thatReturnsFalse,this.isPropagationStopped=o.thatReturnsFalse}var r=e("./PooledClass"),o=e("./emptyFunction"),i=e("./getEventTarget"),a=e("./merge"),s=e("./mergeInto"),u={type:null,target:i,currentTarget:o.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};s(n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e.preventDefault?e.preventDefault():e.returnValue=!1,this.isDefaultPrevented=o.thatReturnsTrue},stopPropagation:function(){var e=this.nativeEvent;e.stopPropagation?e.stopPropagation():e.cancelBubble=!0,this.isPropagationStopped=o.thatReturnsTrue},persist:function(){this.isPersistent=o.thatReturnsTrue},isPersistent:o.thatReturnsFalse,destructor:function(){var e=this.constructor.Interface;for(var t in e)this[t]=null;this.dispatchConfig=null,this.dispatchMarker=null,this.nativeEvent=null}}),n.Interface=u,n.augmentClass=function(e,t){var n=this,o=Object.create(n.prototype);s(o,e.prototype),e.prototype=o,e.prototype.constructor=e,e.Interface=a(n.Interface,t),e.augmentClass=n.augmentClass,r.addPoolingTo(e,r.threeArgumentPooler)},r.addPoolingTo(n,r.threeArgumentPooler),t.exports=n},{"./PooledClass":26,"./emptyFunction":100,"./getEventTarget":109,"./merge":128,"./mergeInto":130}],83:[function(e,t){"use strict";function n(e,t,n){r.call(this,e,t,n)}var r=e("./SyntheticUIEvent"),o={relatedTarget:null};r.augmentClass(n,o),t.exports=n},{"./SyntheticUIEvent":88}],84:[function(e,t){"use strict";function n(e,t,n){r.call(this,e,t,n)}var r=e("./SyntheticEvent"),o={data:null};r.augmentClass(n,o),t.exports=n},{"./SyntheticEvent":82}],85:[function(e,t){"use strict";function n(e,t,n){r.call(this,e,t,n)}var r=e("./SyntheticUIEvent"),o=e("./getEventKey"),i=e("./getEventModifierState"),a={key:o,location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:i,charCode:function(e){return"keypress"===e.type?"charCode"in e?e.charCode:e.keyCode:0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return e.keyCode||e.charCode}};r.augmentClass(n,a),t.exports=n},{"./SyntheticUIEvent":88,"./getEventKey":107,"./getEventModifierState":108}],86:[function(e,t){"use strict";function n(e,t,n){r.call(this,e,t,n)}var r=e("./SyntheticUIEvent"),o=e("./ViewportMetrics"),i=e("./getEventModifierState"),a={screenX:null,screenY:null,clientX:null,clientY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:i,button:function(e){var t=e.button;return"which"in e?t:2===t?2:4===t?1:0},buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},pageX:function(e){return"pageX"in e?e.pageX:e.clientX+o.currentScrollLeft},pageY:function(e){return"pageY"in e?e.pageY:e.clientY+o.currentScrollTop}};r.augmentClass(n,a),t.exports=n},{"./SyntheticUIEvent":88,"./ViewportMetrics":91,"./getEventModifierState":108}],87:[function(e,t){"use strict";function n(e,t,n){r.call(this,e,t,n)}var r=e("./SyntheticUIEvent"),o=e("./getEventModifierState"),i={touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:o};r.augmentClass(n,i),t.exports=n},{"./SyntheticUIEvent":88,"./getEventModifierState":108}],88:[function(e,t){"use strict";function n(e,t,n){r.call(this,e,t,n)}var r=e("./SyntheticEvent"),o=e("./getEventTarget"),i={view:function(e){if(e.view)return e.view;var t=o(e);if(null!=t&&t.window===t)return t;var n=t.ownerDocument;return n?n.defaultView||n.parentWindow:window},detail:function(e){return e.detail||0}};r.augmentClass(n,i),t.exports=n},{"./SyntheticEvent":82,"./getEventTarget":109}],89:[function(e,t){"use strict";function n(e,t,n){r.call(this,e,t,n)}var r=e("./SyntheticMouseEvent"),o={deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null};r.augmentClass(n,o),t.exports=n},{"./SyntheticMouseEvent":86}],90:[function(e,t){"use strict";var n=e("./invariant"),r={reinitializeTransaction:function(){this.transactionWrappers=this.getTransactionWrappers(),this.wrapperInitData?this.wrapperInitData.length=0:this.wrapperInitData=[],this._isInTransaction=!1},_isInTransaction:!1,getTransactionWrappers:null,isInTransaction:function(){return!!this._isInTransaction},perform:function(e,t,r,o,i,a,s,u){n(!this.isInTransaction());var c,l;try{this._isInTransaction=!0,c=!0,this.initializeAll(0),l=e.call(t,r,o,i,a,s,u),c=!1}finally{try{if(c)try{this.closeAll(0)}catch(p){}else this.closeAll(0)}finally{this._isInTransaction=!1}}return l},initializeAll:function(e){for(var t=this.transactionWrappers,n=e;n<t.length;n++){var r=t[n];try{this.wrapperInitData[n]=o.OBSERVED_ERROR,this.wrapperInitData[n]=r.initialize?r.initialize.call(this):null}finally{if(this.wrapperInitData[n]===o.OBSERVED_ERROR)try{this.initializeAll(n+1)}catch(i){}}}},closeAll:function(e){n(this.isInTransaction());for(var t=this.transactionWrappers,r=e;r<t.length;r++){var i,a=t[r],s=this.wrapperInitData[r];try{i=!0,s!==o.OBSERVED_ERROR&&a.close&&a.close.call(this,s),i=!1}finally{if(i)try{this.closeAll(r+1)}catch(u){}}}this.wrapperInitData.length=0}},o={Mixin:r,OBSERVED_ERROR:{}};t.exports=o},{"./invariant":118}],91:[function(e,t){"use strict";var n=e("./getUnboundedScrollPosition"),r={currentScrollLeft:0,currentScrollTop:0,refreshScrollValues:function(){var e=n(window);r.currentScrollLeft=e.x,r.currentScrollTop=e.y}};t.exports=r},{"./getUnboundedScrollPosition":114}],92:[function(e,t){"use strict";function n(e,t){if(r(null!=t),null==e)return t;var n=Array.isArray(e),o=Array.isArray(t);return n?e.concat(t):o?[e].concat(t):[e,t]}var r=e("./invariant");t.exports=n},{"./invariant":118}],93:[function(e,t){"use strict";function n(e){for(var t=1,n=0,o=0;o<e.length;o++)t=(t+e.charCodeAt(o))%r,n=(n+t)%r;return t|n<<16}var r=65521;t.exports=n},{}],94:[function(e,t){function n(e,t){return e&&t?e===t?!0:r(e)?!1:r(t)?n(e,t.parentNode):e.contains?e.contains(t):e.compareDocumentPosition?!!(16&e.compareDocumentPosition(t)):!1:!1}var r=e("./isTextNode");t.exports=n},{"./isTextNode":122}],95:[function(e,t){function n(e,t,n,r,o,i){e=e||{};for(var a,s=[t,n,r,o,i],u=0;s[u];){a=s[u++];for(var c in a)e[c]=a[c];a.hasOwnProperty&&a.hasOwnProperty("toString")&&"undefined"!=typeof a.toString&&e.toString!==a.toString&&(e.toString=a.toString)}return e}t.exports=n},{}],96:[function(e,t){function n(e){return!!e&&("object"==typeof e||"function"==typeof e)&&"length"in e&&!("setInterval"in e)&&"number"!=typeof e.nodeType&&(Array.isArray(e)||"callee"in e||"item"in e)}function r(e){return n(e)?Array.isArray(e)?e.slice():o(e):[e]}var o=e("./toArray");t.exports=r},{"./toArray":137}],97:[function(e,t){"use strict";function n(e){var t=r.createClass({displayName:"ReactFullPageComponent"+(e.type.displayName||""),componentWillUnmount:function(){o(!1)},render:function(){return this.transferPropsTo(e(null,this.props.children))}});return t}var r=e("./ReactCompositeComponent"),o=e("./invariant");t.exports=n},{"./ReactCompositeComponent":33,"./invariant":118}],98:[function(e,t){function n(e){var t=e.match(c);return t&&t[1].toLowerCase()}function r(e,t){var r=u;s(!!u);var o=n(e),c=o&&a(o);if(c){r.innerHTML=c[1]+e+c[2];for(var l=c[0];l--;)r=r.lastChild}else r.innerHTML=e;var p=r.getElementsByTagName("script");p.length&&(s(t),i(p).forEach(t));for(var d=i(r.childNodes);r.lastChild;)r.removeChild(r.lastChild);return d}var o=e("./ExecutionEnvironment"),i=e("./createArrayFrom"),a=e("./getMarkupWrap"),s=e("./invariant"),u=o.canUseDOM?document.createElement("div"):null,c=/^\s*<(\w+)/;t.exports=r},{"./ExecutionEnvironment":21,"./createArrayFrom":96,"./getMarkupWrap":110,"./invariant":118}],99:[function(e,t){"use strict";function n(e,t){var n=null==t||"boolean"==typeof t||""===t;if(n)return"";var r=isNaN(t);return r||0===t||o.hasOwnProperty(e)&&o[e]?""+t:("string"==typeof t&&(t=t.trim()),t+"px")}var r=e("./CSSProperty"),o=r.isUnitlessNumber;t.exports=n},{"./CSSProperty":3}],100:[function(e,t){function n(e){return function(){return e}}function r(){}var o=e("./copyProperties");o(r,{thatReturns:n,thatReturnsFalse:n(!1),thatReturnsTrue:n(!0),thatReturnsNull:n(null),thatReturnsThis:function(){return this},thatReturnsArgument:function(e){return e}}),t.exports=r},{"./copyProperties":95}],101:[function(e,t){"use strict";var n={};t.exports=n},{}],102:[function(e,t){"use strict";function n(e){return o[e]}function r(e){return(""+e).replace(i,n)}var o={"&":"&amp;",">":"&gt;","<":"&lt;",'"':"&quot;","'":"&#x27;"},i=/[&><"']/g;t.exports=r},{}],103:[function(e,t){"use strict";function n(e,t,n){var r=e,o=!r.hasOwnProperty(n);o&&null!=t&&(r[n]=t)}function r(e){if(null==e)return e;var t={};return o(e,n,t),t}{var o=e("./traverseAllChildren");e("./warning")}t.exports=r},{"./traverseAllChildren":138,"./warning":139}],104:[function(e,t){"use strict";function n(e){e.disabled||e.focus()}t.exports=n},{}],105:[function(e,t){"use strict";var n=function(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)};t.exports=n},{}],106:[function(e,t){function n(){try{return document.activeElement||document.body}catch(e){return document.body}}t.exports=n},{}],107:[function(e,t){"use strict";function n(e){if(e.key){var t=o[e.key]||e.key;if("Unidentified"!==t)return t}if("keypress"===e.type){var n="charCode"in e?e.charCode:e.keyCode;return 13===n?"Enter":String.fromCharCode(n)}return"keydown"===e.type||"keyup"===e.type?i[e.keyCode]||"Unidentified":void r(!1)}var r=e("./invariant"),o={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},i={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"};t.exports=n},{"./invariant":118}],108:[function(e,t){"use strict";function n(e){var t=this,n=t.nativeEvent;if(n.getModifierState)return n.getModifierState(e);var r=o[e];return r?!!n[r]:!1}function r(){return n}var o={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};t.exports=r},{}],109:[function(e,t){"use strict";function n(e){var t=e.target||e.srcElement||window;return 3===t.nodeType?t.parentNode:t}t.exports=n},{}],110:[function(e,t){function n(e){return o(!!i),p.hasOwnProperty(e)||(e="*"),a.hasOwnProperty(e)||(i.innerHTML="*"===e?"<link />":"<"+e+"></"+e+">",a[e]=!i.firstChild),a[e]?p[e]:null}var r=e("./ExecutionEnvironment"),o=e("./invariant"),i=r.canUseDOM?document.createElement("div"):null,a={circle:!0,defs:!0,ellipse:!0,g:!0,line:!0,linearGradient:!0,path:!0,polygon:!0,polyline:!0,radialGradient:!0,rect:!0,stop:!0,text:!0},s=[1,'<select multiple="true">',"</select>"],u=[1,"<table>","</table>"],c=[3,"<table><tbody><tr>","</tr></tbody></table>"],l=[1,"<svg>","</svg>"],p={"*":[1,"?<div>","</div>"],area:[1,"<map>","</map>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],legend:[1,"<fieldset>","</fieldset>"],param:[1,"<object>","</object>"],tr:[2,"<table><tbody>","</tbody></table>"],optgroup:s,option:s,caption:u,colgroup:u,tbody:u,tfoot:u,thead:u,td:c,th:c,circle:l,defs:l,ellipse:l,g:l,line:l,linearGradient:l,path:l,polygon:l,polyline:l,radialGradient:l,rect:l,stop:l,text:l};t.exports=n},{"./ExecutionEnvironment":21,"./invariant":118}],111:[function(e,t){"use strict";function n(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function r(e){for(;e;){if(e.nextSibling)return e.nextSibling;e=e.parentNode}}function o(e,t){for(var o=n(e),i=0,a=0;o;){if(3==o.nodeType){if(a=i+o.textContent.length,t>=i&&a>=t)return{node:o,offset:t-i};i=a}o=n(r(o))}}t.exports=o},{}],112:[function(e,t){"use strict";function n(e){return e?e.nodeType===r?e.documentElement:e.firstChild:null}var r=9;t.exports=n},{}],113:[function(e,t){"use strict";function n(){return!o&&r.canUseDOM&&(o="textContent"in document.documentElement?"textContent":"innerText"),o}var r=e("./ExecutionEnvironment"),o=null;t.exports=n},{"./ExecutionEnvironment":21}],114:[function(e,t){"use strict";function n(e){return e===window?{x:window.pageXOffset||document.documentElement.scrollLeft,y:window.pageYOffset||document.documentElement.scrollTop}:{x:e.scrollLeft,y:e.scrollTop}}t.exports=n},{}],115:[function(e,t){function n(e){return e.replace(r,"-$1").toLowerCase()}var r=/([A-Z])/g;t.exports=n},{}],116:[function(e,t){"use strict";function n(e){return r(e).replace(o,"-ms-")}var r=e("./hyphenate"),o=/^ms-/;t.exports=n},{"./hyphenate":115}],117:[function(e,t){"use strict";function n(e){return e&&"function"==typeof e.type&&"function"==typeof e.type.prototype.mountComponent&&"function"==typeof e.type.prototype.receiveComponent}function r(e){return o(n(e)),new e.type(e)}var o=e("./invariant");t.exports=r},{"./invariant":118}],118:[function(e,t){"use strict";var n=function(e,t,n,r,o,i,a,s){if(!e){var u;if(void 0===t)u=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,r,o,i,a,s],l=0;u=new Error("Invariant Violation: "+t.replace(/%s/g,function(){return c[l++]}))}throw u.framesToPop=1,u}};t.exports=n},{}],119:[function(e,t){"use strict";function n(e,t){if(!o.canUseDOM||t&&!("addEventListener"in document))return!1;var n="on"+e,i=n in document;if(!i){var a=document.createElement("div");a.setAttribute(n,"return;"),i="function"==typeof a[n]}return!i&&r&&"wheel"===e&&(i=document.implementation.hasFeature("Events.wheel","3.0")),i}var r,o=e("./ExecutionEnvironment");o.canUseDOM&&(r=document.implementation&&document.implementation.hasFeature&&document.implementation.hasFeature("","")!==!0),t.exports=n},{"./ExecutionEnvironment":21}],120:[function(e,t){function n(e){return!(!e||!("function"==typeof Node?e instanceof Node:"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName))}t.exports=n},{}],121:[function(e,t){"use strict";function n(e){return e&&("INPUT"===e.nodeName&&r[e.type]||"TEXTAREA"===e.nodeName)}var r={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};t.exports=n},{}],122:[function(e,t){function n(e){return r(e)&&3==e.nodeType}var r=e("./isNode");t.exports=n},{"./isNode":120}],123:[function(e,t){"use strict";function n(e){e||(e="");var t,n=arguments.length;if(n>1)for(var r=1;n>r;r++)t=arguments[r],t&&(e+=" "+t);return e}t.exports=n},{}],124:[function(e,t){"use strict";var n=e("./invariant"),r=function(e){var t,r={};n(e instanceof Object&&!Array.isArray(e));for(t in e)e.hasOwnProperty(t)&&(r[t]=t);return r};t.exports=r},{"./invariant":118}],125:[function(e,t){var n=function(e){var t;for(t in e)if(e.hasOwnProperty(t))return t;return null};t.exports=n},{}],126:[function(e,t){"use strict";function n(e,t,n){if(!e)return null;var r=0,o={};for(var i in e)e.hasOwnProperty(i)&&(o[i]=t.call(n,e[i],i,r++));return o}t.exports=n},{}],127:[function(e,t){"use strict";function n(e){var t={};return function(n){return t.hasOwnProperty(n)?t[n]:t[n]=e.call(this,n)}}t.exports=n},{}],128:[function(e,t){"use strict";var n=e("./mergeInto"),r=function(e,t){var r={};return n(r,e),n(r,t),r};t.exports=r},{"./mergeInto":130}],129:[function(e,t){"use strict";var n=e("./invariant"),r=e("./keyMirror"),o=36,i=function(e){return"object"!=typeof e||null===e},a={MAX_MERGE_DEPTH:o,isTerminal:i,normalizeMergeArg:function(e){return void 0===e||null===e?{}:e},checkMergeArrayArgs:function(e,t){n(Array.isArray(e)&&Array.isArray(t))},checkMergeObjectArgs:function(e,t){a.checkMergeObjectArg(e),a.checkMergeObjectArg(t)},checkMergeObjectArg:function(e){n(!i(e)&&!Array.isArray(e))},checkMergeIntoObjectArg:function(e){n(!(i(e)&&"function"!=typeof e||Array.isArray(e)))},checkMergeLevel:function(e){n(o>e)},checkArrayStrategy:function(e){n(void 0===e||e in a.ArrayStrategies)},ArrayStrategies:r({Clobber:!0,IndexByIndex:!0})};t.exports=a},{"./invariant":118,"./keyMirror":124}],130:[function(e,t){"use strict";function n(e,t){if(i(e),null!=t){o(t);for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])}}var r=e("./mergeHelpers"),o=r.checkMergeObjectArg,i=r.checkMergeIntoObjectArg;t.exports=n},{"./mergeHelpers":129}],131:[function(e,t){"use strict";var n=function(e,t){var n;for(n in t)t.hasOwnProperty(n)&&(e.prototype[n]=t[n])};t.exports=n},{}],132:[function(e,t){"use strict";function n(e){r(e&&!/[^a-z0-9_]/.test(e))}var r=e("./invariant");t.exports=n},{"./invariant":118}],133:[function(e,t){"use strict";function n(e){return o(r.isValidDescriptor(e)),e}var r=e("./ReactDescriptor"),o=e("./invariant");t.exports=n},{"./ReactDescriptor":49,"./invariant":118}],134:[function(e,t){"use strict";var n=e("./ExecutionEnvironment"),r=function(e,t){e.innerHTML=t};if(n.canUseDOM){var o=document.createElement("div");o.innerHTML=" ",""===o.innerHTML&&(r=function(e,t){if(e.parentNode&&e.parentNode.replaceChild(e,e),t.match(/^[ \r\n\t\f]/)||"<"===t[0]&&(-1!==t.indexOf("<noscript")||-1!==t.indexOf("<script")||-1!==t.indexOf("<style")||-1!==t.indexOf("<meta")||-1!==t.indexOf("<link"))){e.innerHTML=""+t;var n=e.firstChild;1===n.data.length?e.removeChild(n):n.deleteData(0,1)}else e.innerHTML=t})}t.exports=r},{"./ExecutionEnvironment":21}],135:[function(e,t){"use strict";function n(e,t){if(e===t)return!0;var n;for(n in e)if(e.hasOwnProperty(n)&&(!t.hasOwnProperty(n)||e[n]!==t[n]))return!1;for(n in t)if(t.hasOwnProperty(n)&&!e.hasOwnProperty(n))return!1;return!0}t.exports=n},{}],136:[function(e,t){"use strict";function n(e,t){return e&&t&&e.type===t.type&&(e.props&&e.props.key)===(t.props&&t.props.key)&&e._owner===t._owner?!0:!1}t.exports=n},{}],137:[function(e,t){function n(e){var t=e.length;if(r(!Array.isArray(e)&&("object"==typeof e||"function"==typeof e)),r("number"==typeof t),r(0===t||t-1 in e),e.hasOwnProperty)try{return Array.prototype.slice.call(e)}catch(n){}for(var o=Array(t),i=0;t>i;i++)o[i]=e[i];return o}var r=e("./invariant");t.exports=n},{"./invariant":118}],138:[function(e,t){"use strict";function n(e){return d[e]}function r(e,t){return e&&e.props&&null!=e.props.key?i(e.props.key):t.toString(36)}function o(e){return(""+e).replace(f,n)}function i(e){return"$"+o(e)}function a(e,t,n){return null==e?0:h(e,"",0,t,n)}var s=e("./ReactInstanceHandles"),u=e("./ReactTextComponent"),c=e("./invariant"),l=s.SEPARATOR,p=":",d={"=":"=0",".":"=1",":":"=2"},f=/[=.:]/g,h=function(e,t,n,o,a){var s=0;if(Array.isArray(e))for(var d=0;d<e.length;d++){var f=e[d],v=t+(t?p:l)+r(f,d),m=n+s;s+=h(f,v,m,o,a)}else{var g=typeof e,y=""===t,C=y?l+r(e,0):t;if(null==e||"boolean"===g)o(a,null,C,n),s=1;else if(e.type&&e.type.prototype&&e.type.prototype.mountComponentIntoNode)o(a,e,C,n),s=1;else if("object"===g){c(!e||1!==e.nodeType);for(var E in e)e.hasOwnProperty(E)&&(s+=h(e[E],t+(t?p:l)+i(E)+p+r(e[E],0),n+s,o,a))}else if("string"===g){var R=u(e);o(a,R,C,n),s+=1}else if("number"===g){var M=u(""+e);o(a,M,C,n),s+=1}}return s};t.exports=a},{"./ReactInstanceHandles":57,"./ReactTextComponent":73,"./invariant":118}],139:[function(e,t){"use strict";var n=e("./emptyFunction"),r=n;t.exports=r},{"./emptyFunction":100}]},{},[27])(27)});
var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_DEFINES;
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && opt_object !== undefined) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
      value = goog.global.CLOSURE_DEFINES[name];
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && (typeof value.splice != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")))) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call"))) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isDef = function(val) {
  return val !== undefined;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for (var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value);
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.DEBUG) {
    if (!caller) {
      throw Error("arguments.caller not defined.  goog.base() expects not " + "to be running in strict mode. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
    }
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && (ch >= " " && ch <= "~") || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "\x26amp;").replace(goog.string.ltRe_, "\x26lt;").replace(goog.string.gtRe_, "\x26gt;").replace(goog.string.quotRe_, "\x26quot;").replace(goog.string.singleQuoteRe_, "\x26#39;");
  } else {
    if (!goog.string.allRe_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.amperRe_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.ltRe_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.gtRe_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.singleQuoteRe_, "\x26#39;");
    }
    return str;
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /"/g;
goog.string.singleQuoteRe_ = /'/g;
goog.string.allRe_ = /[&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1;
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && (index < s.length && stringLength > 0)) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || (goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]));
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || (!goog.isArrayLike(arr2) || arr1.length != arr2.length)) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2202";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 4441712502), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1017252215), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 1014004081), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  3960797560), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__5861__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__5861 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__5861__delegate.call(this, args);
    };
    G__5861.cljs$lang$maxFixedArity = 0;
    G__5861.cljs$lang$applyTo = function(arglist__5862) {
      var args = cljs.core.seq(arglist__5862);
      return G__5861__delegate(args);
    };
    G__5861.cljs$core$IFn$_invoke$arity$variadic = G__5861__delegate;
    return G__5861;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return false;
      } else {
        return null;
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3469__auto__ = ty;
    if (cljs.core.truth_(and__3469__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3469__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4329__auto___5863 = len;
  var i_5864 = 0;
  while (true) {
    if (i_5864 < n__4329__auto___5863) {
      new_arr[i_5864] = arr[i_5864];
      var G__5865 = i_5864 + 1;
      i_5864 = G__5865;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__5866__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__5866 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5866__delegate.call(this, array, i, idxs);
    };
    G__5866.cljs$lang$maxFixedArity = 2;
    G__5866.cljs$lang$applyTo = function(arglist__5867) {
      var array = cljs.core.first(arglist__5867);
      arglist__5867 = cljs.core.next(arglist__5867);
      var i = cljs.core.first(arglist__5867);
      var idxs = cljs.core.rest(arglist__5867);
      return G__5866__delegate(array, i, idxs);
    };
    G__5866.cljs$core$IFn$_invoke$arity$variadic = G__5866__delegate;
    return G__5866;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__5868__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__5868 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__5868__delegate.call(this, array, idx, idx2, idxv);
    };
    G__5868.cljs$lang$maxFixedArity = 3;
    G__5868.cljs$lang$applyTo = function(arglist__5869) {
      var array = cljs.core.first(arglist__5869);
      arglist__5869 = cljs.core.next(arglist__5869);
      var idx = cljs.core.first(arglist__5869);
      arglist__5869 = cljs.core.next(arglist__5869);
      var idx2 = cljs.core.first(arglist__5869);
      var idxv = cljs.core.rest(arglist__5869);
      return G__5868__delegate(array, idx, idx2, idxv);
    };
    G__5868.cljs$core$IFn$_invoke$arity$variadic = G__5868__delegate;
    return G__5868;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.Fn = function() {
  var obj5871 = {};
  return obj5871;
}();
cljs.core.IFn = function() {
  var obj5873 = {};
  return obj5873;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj5875 = {};
  return obj5875;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3469__auto__ = value;
    if (and__3469__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4108__auto__ = value == null ? null : value;
    return function() {
      var or__3481__auto__ = cljs.core._clone[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._clone["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj5877 = {};
  return obj5877;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._count[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._count["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj5879 = {};
  return obj5879;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._empty[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._empty["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj5881 = {};
  return obj5881;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._conj[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._conj["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj5883 = {};
  return obj5883;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3469__auto__ = coll;
      if (and__3469__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4108__auto__ = coll == null ? null : coll;
      return function() {
        var or__3481__auto__ = cljs.core._nth[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._nth["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3469__auto__ = coll;
      if (and__3469__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4108__auto__ = coll == null ? null : coll;
      return function() {
        var or__3481__auto__ = cljs.core._nth[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._nth["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj5885 = {};
  return obj5885;
}();
cljs.core.ISeq = function() {
  var obj5887 = {};
  return obj5887;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._first[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._first["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._rest[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._rest["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj5889 = {};
  return obj5889;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._next[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._next["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj5891 = {};
  return obj5891;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3469__auto__ = o;
      if (and__3469__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4108__auto__ = o == null ? null : o;
      return function() {
        var or__3481__auto__ = cljs.core._lookup[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._lookup["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3469__auto__ = o;
      if (and__3469__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4108__auto__ = o == null ? null : o;
      return function() {
        var or__3481__auto__ = cljs.core._lookup[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._lookup["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj5893 = {};
  return obj5893;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._assoc[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._assoc["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj5895 = {};
  return obj5895;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._dissoc[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._dissoc["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj5897 = {};
  return obj5897;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._key[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._key["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._val[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._val["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj5899 = {};
  return obj5899;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._disjoin[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._disjoin["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj5901 = {};
  return obj5901;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._peek[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._peek["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._pop[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._pop["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj5903 = {};
  return obj5903;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._assoc_n[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj5905 = {};
  return obj5905;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3469__auto__ = o;
    if (and__3469__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4108__auto__ = o == null ? null : o;
    return function() {
      var or__3481__auto__ = cljs.core._deref[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._deref["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj5907 = {};
  return obj5907;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3469__auto__ = o;
    if (and__3469__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4108__auto__ = o == null ? null : o;
    return function() {
      var or__3481__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj5909 = {};
  return obj5909;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3469__auto__ = o;
    if (and__3469__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4108__auto__ = o == null ? null : o;
    return function() {
      var or__3481__auto__ = cljs.core._meta[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._meta["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj5911 = {};
  return obj5911;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3469__auto__ = o;
    if (and__3469__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4108__auto__ = o == null ? null : o;
    return function() {
      var or__3481__auto__ = cljs.core._with_meta[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._with_meta["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj5913 = {};
  return obj5913;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3469__auto__ = coll;
      if (and__3469__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4108__auto__ = coll == null ? null : coll;
      return function() {
        var or__3481__auto__ = cljs.core._reduce[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._reduce["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3469__auto__ = coll;
      if (and__3469__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4108__auto__ = coll == null ? null : coll;
      return function() {
        var or__3481__auto__ = cljs.core._reduce[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._reduce["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj5915 = {};
  return obj5915;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj5917 = {};
  return obj5917;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3469__auto__ = o;
    if (and__3469__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4108__auto__ = o == null ? null : o;
    return function() {
      var or__3481__auto__ = cljs.core._equiv[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._equiv["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj5919 = {};
  return obj5919;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3469__auto__ = o;
    if (and__3469__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4108__auto__ = o == null ? null : o;
    return function() {
      var or__3481__auto__ = cljs.core._hash[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._hash["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj5921 = {};
  return obj5921;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3469__auto__ = o;
    if (and__3469__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4108__auto__ = o == null ? null : o;
    return function() {
      var or__3481__auto__ = cljs.core._seq[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._seq["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj5923 = {};
  return obj5923;
}();
cljs.core.IList = function() {
  var obj5925 = {};
  return obj5925;
}();
cljs.core.IRecord = function() {
  var obj5927 = {};
  return obj5927;
}();
cljs.core.IReversible = function() {
  var obj5929 = {};
  return obj5929;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._rseq[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._rseq["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj5931 = {};
  return obj5931;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._entry_key[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._entry_key["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._comparator[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._comparator["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj5933 = {};
  return obj5933;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3469__auto__ = writer;
    if (and__3469__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4108__auto__ = writer == null ? null : writer;
    return function() {
      var or__3481__auto__ = cljs.core._write[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._write["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3469__auto__ = writer;
    if (and__3469__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4108__auto__ = writer == null ? null : writer;
    return function() {
      var or__3481__auto__ = cljs.core._flush[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._flush["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj5935 = {};
  return obj5935;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3469__auto__ = o;
    if (and__3469__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4108__auto__ = o == null ? null : o;
    return function() {
      var or__3481__auto__ = cljs.core._pr_writer[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj5937 = {};
  return obj5937;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3469__auto__ = d;
    if (and__3469__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4108__auto__ = d == null ? null : d;
    return function() {
      var or__3481__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj5939 = {};
  return obj5939;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3469__auto__ = this$;
    if (and__3469__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4108__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3481__auto__ = cljs.core._notify_watches[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3469__auto__ = this$;
    if (and__3469__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4108__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3481__auto__ = cljs.core._add_watch[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._add_watch["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3469__auto__ = this$;
    if (and__3469__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4108__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3481__auto__ = cljs.core._remove_watch[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj5941 = {};
  return obj5941;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._as_transient[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._as_transient["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj5943 = {};
  return obj5943;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3469__auto__ = tcoll;
    if (and__3469__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4108__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3481__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3469__auto__ = tcoll;
    if (and__3469__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4108__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3481__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj5945 = {};
  return obj5945;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3469__auto__ = tcoll;
    if (and__3469__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4108__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3481__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj5947 = {};
  return obj5947;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3469__auto__ = tcoll;
    if (and__3469__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4108__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3481__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj5949 = {};
  return obj5949;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3469__auto__ = tcoll;
    if (and__3469__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4108__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3481__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3469__auto__ = tcoll;
    if (and__3469__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4108__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3481__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj5951 = {};
  return obj5951;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3469__auto__ = tcoll;
    if (and__3469__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4108__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3481__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj5953 = {};
  return obj5953;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3469__auto__ = x;
    if (and__3469__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4108__auto__ = x == null ? null : x;
    return function() {
      var or__3481__auto__ = cljs.core._compare[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._compare["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj5955 = {};
  return obj5955;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._drop_first[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._drop_first["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj5957 = {};
  return obj5957;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._chunked_first[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj5959 = {};
  return obj5959;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._chunked_next[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj5961 = {};
  return obj5961;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3469__auto__ = x;
    if (and__3469__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4108__auto__ = x == null ? null : x;
    return function() {
      var or__3481__auto__ = cljs.core._name[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._name["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3469__auto__ = x;
    if (and__3469__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4108__auto__ = x == null ? null : x;
    return function() {
      var or__3481__auto__ = cljs.core._namespace[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._namespace["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("");
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.hash.call(null, sym.ns), cljs.core.hash.call(null, sym.name));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3469__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3469__auto__) {
        return b.ns;
      } else {
        return and__3469__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if (nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
          return cljs.core.compare.call(null, a.name, b.name);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/Symbol");
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__3892__auto__ = self__._hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__5963 = null;
  var G__5963__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__5963__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__5963 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5963__2.call(this, self__, coll);
      case 3:
        return G__5963__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__5963;
}();
cljs.core.Symbol.prototype.apply = function(self__, args5962) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5962)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__5965 = value;
  if (G__5965) {
    var bit__4131__auto__ = G__5965.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4131__auto__ || G__5965.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__5965.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__5965);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__5965);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__5967 = coll;
      if (G__5967) {
        var bit__4124__auto__ = G__5967.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4124__auto__ || G__5967.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw new Error([cljs.core.str(coll), cljs.core.str("is not ISeqable")].join(""));
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__5969 = coll;
      if (G__5969) {
        var bit__4124__auto__ = G__5969.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4124__auto__ || G__5969.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__5971 = coll;
      if (G__5971) {
        var bit__4124__auto__ = G__5971.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4124__auto__ || G__5971.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__5973 = coll;
      if (G__5973) {
        var bit__4124__auto__ = G__5973.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4124__auto__ || G__5973.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__5974__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__5975 = y;
            var G__5976 = cljs.core.first.call(null, more);
            var G__5977 = cljs.core.next.call(null, more);
            x = G__5975;
            y = G__5976;
            more = G__5977;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__5974 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5974__delegate.call(this, x, y, more);
    };
    G__5974.cljs$lang$maxFixedArity = 2;
    G__5974.cljs$lang$applyTo = function(arglist__5978) {
      var x = cljs.core.first(arglist__5978);
      arglist__5978 = cljs.core.next(arglist__5978);
      var y = cljs.core.first(arglist__5978);
      var more = cljs.core.rest(arglist__5978);
      return G__5974__delegate(x, y, more);
    };
    G__5974.cljs$core$IFn$_invoke$arity$variadic = G__5974__delegate;
    return G__5974;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/Reduced");
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__5979 = nval;
            var G__5980 = n + 1;
            val = G__5979;
            n = G__5980;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__5981 = nval;
          var G__5982 = n + 1;
          val__$1 = G__5981;
          n = G__5982;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__5983 = nval;
          var G__5984 = n + 1;
          val__$1 = G__5983;
          n = G__5984;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__5985 = nval;
            var G__5986 = n + 1;
            val = G__5985;
            n = G__5986;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__5987 = nval;
          var G__5988 = n + 1;
          val__$1 = G__5987;
          n = G__5988;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__5989 = nval;
          var G__5990 = n + 1;
          val__$1 = G__5989;
          n = G__5990;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__5992 = x;
  if (G__5992) {
    var bit__4131__auto__ = G__5992.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4131__auto__ || G__5992.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__5992.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__5992);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__5992);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__5994 = x;
  if (G__5994) {
    var bit__4131__auto__ = G__5994.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4131__auto__ || G__5994.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__5994.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__5994);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__5994);
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/IndexedSeq");
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/RSeq");
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__5995 = sn;
      s = G__5995;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__5996__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__5997 = conj.call(null, coll, x);
          var G__5998 = cljs.core.first.call(null, xs);
          var G__5999 = cljs.core.next.call(null, xs);
          coll = G__5997;
          x = G__5998;
          xs = G__5999;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__5996 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5996__delegate.call(this, coll, x, xs);
    };
    G__5996.cljs$lang$maxFixedArity = 2;
    G__5996.cljs$lang$applyTo = function(arglist__6000) {
      var coll = cljs.core.first(arglist__6000);
      arglist__6000 = cljs.core.next(arglist__6000);
      var x = cljs.core.first(arglist__6000);
      var xs = cljs.core.rest(arglist__6000);
      return G__5996__delegate(coll, x, xs);
    };
    G__5996.cljs$core$IFn$_invoke$arity$variadic = G__5996__delegate;
    return G__5996;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__6001 = cljs.core.next.call(null, s);
      var G__6002 = acc + 1;
      s = G__6001;
      acc = G__6002;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__6004 = coll;
      if (G__6004) {
        var bit__4124__auto__ = G__6004.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4124__auto__ || G__6004.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.accumulating_seq_count.call(null, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__6005 = cljs.core.next.call(null, coll);
              var G__6006 = n - 1;
              coll = G__6005;
              n = G__6006;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw new Error("Index out of bounds");
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__6007 = cljs.core.next.call(null, coll);
              var G__6008 = n - 1;
              var G__6009 = not_found;
              coll = G__6007;
              n = G__6008;
              not_found = G__6009;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__6014 = coll;
          if (G__6014) {
            var bit__4124__auto__ = G__6014.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4124__auto__ || G__6014.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__6015 = coll;
                  if (G__6015) {
                    var bit__4131__auto__ = G__6015.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4131__auto__ || G__6015.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__6015.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__6015);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__6015);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                  } else {
                    return null;
                  }
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__6016 = coll;
          if (G__6016) {
            var bit__4124__auto__ = G__6016.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4124__auto__ || G__6016.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__6017 = coll;
                  if (G__6017) {
                    var bit__4131__auto__ = G__6017.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4131__auto__ || G__6017.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__6017.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__6017);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__6017);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                  } else {
                    return null;
                  }
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__6020 = o;
        if (G__6020) {
          var bit__4124__auto__ = G__6020.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4124__auto__ || G__6020.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return null;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__6021 = o;
        if (G__6021) {
          var bit__4124__auto__ = G__6021.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4124__auto__ || G__6021.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays.call(null, [k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__6022__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__6023 = ret;
          var G__6024 = cljs.core.first.call(null, kvs);
          var G__6025 = cljs.core.second.call(null, kvs);
          var G__6026 = cljs.core.nnext.call(null, kvs);
          coll = G__6023;
          k = G__6024;
          v = G__6025;
          kvs = G__6026;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__6022 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6022__delegate.call(this, coll, k, v, kvs);
    };
    G__6022.cljs$lang$maxFixedArity = 3;
    G__6022.cljs$lang$applyTo = function(arglist__6027) {
      var coll = cljs.core.first(arglist__6027);
      arglist__6027 = cljs.core.next(arglist__6027);
      var k = cljs.core.first(arglist__6027);
      arglist__6027 = cljs.core.next(arglist__6027);
      var v = cljs.core.first(arglist__6027);
      var kvs = cljs.core.rest(arglist__6027);
      return G__6022__delegate(coll, k, v, kvs);
    };
    G__6022.cljs$core$IFn$_invoke$arity$variadic = G__6022__delegate;
    return G__6022;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__6028__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__6029 = ret;
            var G__6030 = cljs.core.first.call(null, ks);
            var G__6031 = cljs.core.next.call(null, ks);
            coll = G__6029;
            k = G__6030;
            ks = G__6031;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__6028 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6028__delegate.call(this, coll, k, ks);
    };
    G__6028.cljs$lang$maxFixedArity = 2;
    G__6028.cljs$lang$applyTo = function(arglist__6032) {
      var coll = cljs.core.first(arglist__6032);
      arglist__6032 = cljs.core.next(arglist__6032);
      var k = cljs.core.first(arglist__6032);
      var ks = cljs.core.rest(arglist__6032);
      return G__6028__delegate(coll, k, ks);
    };
    G__6028.cljs$core$IFn$_invoke$arity$variadic = G__6028__delegate;
    return G__6028;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3481__auto__ = goog.isFunction(f);
  if (or__3481__auto__) {
    return or__3481__auto__;
  } else {
    var G__6036 = f;
    if (G__6036) {
      var bit__4131__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3481__auto____$1 = bit__4131__auto__;
        if (cljs.core.truth_(or__3481__auto____$1)) {
          return or__3481__auto____$1;
        } else {
          return G__6036.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__6036.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__6036);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__6036);
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__6044 = o;
    if (G__6044) {
      var bit__4131__auto__ = G__6044.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4131__auto__ || G__6044.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__6044.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__6044);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__6044);
    }
  }()) {
    return with_meta.call(null, function() {
      if (typeof cljs.core.t6045 !== "undefined") {
      } else {
        cljs.core.t6045 = function(meta, o, with_meta, meta6046) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta6046 = meta6046;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217;
        };
        cljs.core.t6045.cljs$lang$type = true;
        cljs.core.t6045.cljs$lang$ctorStr = "cljs.core/t6045";
        cljs.core.t6045.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
          return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/t6045");
        };
        cljs.core.t6045.prototype.call = function() {
          var G__6049__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.call(null, self__.o, args);
          };
          var G__6049 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
            }
            return G__6049__delegate.call(this, self__, args);
          };
          G__6049.cljs$lang$maxFixedArity = 1;
          G__6049.cljs$lang$applyTo = function(arglist__6050) {
            var self__ = cljs.core.first(arglist__6050);
            var args = cljs.core.rest(arglist__6050);
            return G__6049__delegate(self__, args);
          };
          G__6049.cljs$core$IFn$_invoke$arity$variadic = G__6049__delegate;
          return G__6049;
        }();
        cljs.core.t6045.prototype.apply = function(self__, args6048) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6048)));
        };
        cljs.core.t6045.prototype.cljs$core$IFn$_invoke$arity$2 = function() {
          var G__6051__delegate = function(args) {
            var _ = this;
            return cljs.core.apply.call(null, self__.o, args);
          };
          var G__6051 = function(var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__6051__delegate.call(this, args);
          };
          G__6051.cljs$lang$maxFixedArity = 0;
          G__6051.cljs$lang$applyTo = function(arglist__6052) {
            var args = cljs.core.seq(arglist__6052);
            return G__6051__delegate(args);
          };
          G__6051.cljs$core$IFn$_invoke$arity$variadic = G__6051__delegate;
          return G__6051;
        }();
        cljs.core.t6045.prototype.cljs$core$Fn$ = true;
        cljs.core.t6045.prototype.cljs$core$IMeta$_meta$arity$1 = function(_6047) {
          var self__ = this;
          var _6047__$1 = this;
          return self__.meta6046;
        };
        cljs.core.t6045.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_6047, meta6046__$1) {
          var self__ = this;
          var _6047__$1 = this;
          return new cljs.core.t6045(self__.meta, self__.o, self__.with_meta, meta6046__$1);
        };
        cljs.core.__GT_t6045 = function __GT_t6045(meta__$1, o__$1, with_meta__$1, meta6046) {
          return new cljs.core.t6045(meta__$1, o__$1, with_meta__$1, meta6046);
        };
      }
      return new cljs.core.t6045(meta, o, with_meta, null);
    }(), meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3469__auto__ = !(o == null);
    if (and__3469__auto__) {
      var G__6056 = o;
      if (G__6056) {
        var bit__4131__auto__ = G__6056.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4131__auto__ || G__6056.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__6056.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__6056);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__6056);
      }
    } else {
      return and__3469__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__6057__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__6058 = ret;
            var G__6059 = cljs.core.first.call(null, ks);
            var G__6060 = cljs.core.next.call(null, ks);
            coll = G__6058;
            k = G__6059;
            ks = G__6060;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__6057 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6057__delegate.call(this, coll, k, ks);
    };
    G__6057.cljs$lang$maxFixedArity = 2;
    G__6057.cljs$lang$applyTo = function(arglist__6061) {
      var coll = cljs.core.first(arglist__6061);
      arglist__6061 = cljs.core.next(arglist__6061);
      var k = cljs.core.first(arglist__6061);
      var ks = cljs.core.rest(arglist__6061);
      return G__6057__delegate(coll, k, ks);
    };
    G__6057.cljs$core$IFn$_invoke$arity$variadic = G__6057__delegate;
    return G__6057;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.string_hash_cache = function() {
  var obj6063 = {};
  return obj6063;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj6067 = {};
      return obj6067;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__6069 = o;
    if (G__6069) {
      var bit__4124__auto__ = G__6069.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4124__auto__ || G__6069.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor(o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.check_string_hash_cache.call(null, o);
          } else {
            if (o == null) {
              return 0;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return cljs.core._hash.call(null, o);
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__6071 = x;
    if (G__6071) {
      var bit__4131__auto__ = G__6071.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4131__auto__ || G__6071.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__6071.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__6071);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__6071);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__6073 = x;
    if (G__6073) {
      var bit__4131__auto__ = G__6073.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4131__auto__ || G__6073.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__6073.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__6073);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__6073);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__6075 = x;
  if (G__6075) {
    var bit__4131__auto__ = G__6075.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4131__auto__ || G__6075.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__6075.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__6075);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__6075);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__6077 = x;
  if (G__6077) {
    var bit__4131__auto__ = G__6077.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4131__auto__ || G__6077.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__6077.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__6077);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__6077);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__6079 = x;
  if (G__6079) {
    var bit__4131__auto__ = G__6079.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4131__auto__ || G__6079.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__6079.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__6079);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__6079);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__6081 = x;
  if (G__6081) {
    var bit__4131__auto__ = G__6081.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4131__auto__ || G__6081.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__6081.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__6081);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__6081);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__6083 = x;
    if (G__6083) {
      var bit__4131__auto__ = G__6083.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4131__auto__ || G__6083.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__6083.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__6083);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__6083);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__6085 = x;
  if (G__6085) {
    var bit__4131__auto__ = G__6085.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4131__auto__ || G__6085.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__6085.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__6085);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__6085);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__6087 = x;
  if (G__6087) {
    var bit__4124__auto__ = G__6087.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4124__auto__ || G__6087.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj6091 = {};
    return obj6091;
  };
  var js_obj__1 = function() {
    var G__6092__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__6092 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__6092__delegate.call(this, keyvals);
    };
    G__6092.cljs$lang$maxFixedArity = 0;
    G__6092.cljs$lang$applyTo = function(arglist__6093) {
      var keyvals = cljs.core.seq(arglist__6093);
      return G__6092__delegate(keyvals);
    };
    G__6092.cljs$core$IFn$_invoke$arity$variadic = G__6092__delegate;
    return G__6092;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(keys));
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__6094 = i__$1 + 1;
      var G__6095 = j__$1 + 1;
      var G__6096 = len__$1 - 1;
      i__$1 = G__6094;
      j__$1 = G__6095;
      len__$1 = G__6096;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__6097 = i__$1 - 1;
      var G__6098 = j__$1 - 1;
      var G__6099 = len__$1 - 1;
      i__$1 = G__6097;
      j__$1 = G__6098;
      len__$1 = G__6099;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj6101 = {};
  return obj6101;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__6103 = s;
    if (G__6103) {
      var bit__4131__auto__ = G__6103.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4131__auto__ || G__6103.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__6103.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__6103);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__6103);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__6105 = s;
  if (G__6105) {
    var bit__4131__auto__ = G__6105.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4131__auto__ || G__6105.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__6105.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__6105);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__6105);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3481__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__3481__auto__) {
    return or__3481__auto__;
  } else {
    var G__6109 = f;
    if (G__6109) {
      var bit__4131__auto__ = G__6109.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4131__auto__ || G__6109.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__6109.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__6109);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__6109);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && (!isNaN(n) && (!(n === Infinity) && parseFloat(n) === parseInt(n, 10)));
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && (cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__6110__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__6111 = cljs.core.conj.call(null, s, x__$1);
              var G__6112 = etc;
              s = G__6111;
              xs = G__6112;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__6110 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6110__delegate.call(this, x, y, more);
    };
    G__6110.cljs$lang$maxFixedArity = 2;
    G__6110.cljs$lang$applyTo = function(arglist__6113) {
      var x = cljs.core.first(arglist__6113);
      arglist__6113 = cljs.core.next(arglist__6113);
      var y = cljs.core.first(arglist__6113);
      var more = cljs.core.rest(arglist__6113);
      return G__6110__delegate(x, y, more);
    };
    G__6110.cljs$core$IFn$_invoke$arity$variadic = G__6110__delegate;
    return G__6110;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__3481__auto__ = cljs.core.seq.call(null, coll);
    if (or__3481__auto__) {
      return or__3481__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__6115 = x;
            if (G__6115) {
              var bit__4124__auto__ = G__6115.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4124__auto__ || G__6115.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error("compare on non-nil objects of different types");
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return compare_indexed.call(null, xs, ys, xl, 0);
        } else {
          return null;
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__6116 = xs;
        var G__6117 = ys;
        var G__6118 = len;
        var G__6119 = n + 1;
        xs = G__6116;
        ys = G__6117;
        len = G__6118;
        n = G__6119;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__6120 = nval;
          var G__6121 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__6120;
          coll__$1 = G__6121;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__6124 = coll;
      if (G__6124) {
        var bit__4124__auto__ = G__6124.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4124__auto__ || G__6124.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__6125 = coll;
      if (G__6125) {
        var bit__4124__auto__ = G__6125.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4124__auto__ || G__6125.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, val, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__6126__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__6126 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6126__delegate.call(this, x, y, more);
    };
    G__6126.cljs$lang$maxFixedArity = 2;
    G__6126.cljs$lang$applyTo = function(arglist__6127) {
      var x = cljs.core.first(arglist__6127);
      arglist__6127 = cljs.core.next(arglist__6127);
      var y = cljs.core.first(arglist__6127);
      var more = cljs.core.rest(arglist__6127);
      return G__6126__delegate(x, y, more);
    };
    G__6126.cljs$core$IFn$_invoke$arity$variadic = G__6126__delegate;
    return G__6126;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__6128__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__6128 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6128__delegate.call(this, x, y, more);
    };
    G__6128.cljs$lang$maxFixedArity = 2;
    G__6128.cljs$lang$applyTo = function(arglist__6129) {
      var x = cljs.core.first(arglist__6129);
      arglist__6129 = cljs.core.next(arglist__6129);
      var y = cljs.core.first(arglist__6129);
      var more = cljs.core.rest(arglist__6129);
      return G__6128__delegate(x, y, more);
    };
    G__6128.cljs$core$IFn$_invoke$arity$variadic = G__6128__delegate;
    return G__6128;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__6130__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__6130 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6130__delegate.call(this, x, y, more);
    };
    G__6130.cljs$lang$maxFixedArity = 2;
    G__6130.cljs$lang$applyTo = function(arglist__6131) {
      var x = cljs.core.first(arglist__6131);
      arglist__6131 = cljs.core.next(arglist__6131);
      var y = cljs.core.first(arglist__6131);
      var more = cljs.core.rest(arglist__6131);
      return G__6130__delegate(x, y, more);
    };
    G__6130.cljs$core$IFn$_invoke$arity$variadic = G__6130__delegate;
    return G__6130;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__6132__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__6132 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6132__delegate.call(this, x, y, more);
    };
    G__6132.cljs$lang$maxFixedArity = 2;
    G__6132.cljs$lang$applyTo = function(arglist__6133) {
      var x = cljs.core.first(arglist__6133);
      arglist__6133 = cljs.core.next(arglist__6133);
      var y = cljs.core.first(arglist__6133);
      var more = cljs.core.rest(arglist__6133);
      return G__6132__delegate(x, y, more);
    };
    G__6132.cljs$core$IFn$_invoke$arity$variadic = G__6132__delegate;
    return G__6132;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__6134__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__6135 = y;
            var G__6136 = cljs.core.first.call(null, more);
            var G__6137 = cljs.core.next.call(null, more);
            x = G__6135;
            y = G__6136;
            more = G__6137;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6134 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6134__delegate.call(this, x, y, more);
    };
    G__6134.cljs$lang$maxFixedArity = 2;
    G__6134.cljs$lang$applyTo = function(arglist__6138) {
      var x = cljs.core.first(arglist__6138);
      arglist__6138 = cljs.core.next(arglist__6138);
      var y = cljs.core.first(arglist__6138);
      var more = cljs.core.rest(arglist__6138);
      return G__6134__delegate(x, y, more);
    };
    G__6134.cljs$core$IFn$_invoke$arity$variadic = G__6134__delegate;
    return G__6134;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__6139__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__6140 = y;
            var G__6141 = cljs.core.first.call(null, more);
            var G__6142 = cljs.core.next.call(null, more);
            x = G__6140;
            y = G__6141;
            more = G__6142;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6139 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6139__delegate.call(this, x, y, more);
    };
    G__6139.cljs$lang$maxFixedArity = 2;
    G__6139.cljs$lang$applyTo = function(arglist__6143) {
      var x = cljs.core.first(arglist__6143);
      arglist__6143 = cljs.core.next(arglist__6143);
      var y = cljs.core.first(arglist__6143);
      var more = cljs.core.rest(arglist__6143);
      return G__6139__delegate(x, y, more);
    };
    G__6139.cljs$core$IFn$_invoke$arity$variadic = G__6139__delegate;
    return G__6139;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__6144__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__6145 = y;
            var G__6146 = cljs.core.first.call(null, more);
            var G__6147 = cljs.core.next.call(null, more);
            x = G__6145;
            y = G__6146;
            more = G__6147;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6144 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6144__delegate.call(this, x, y, more);
    };
    G__6144.cljs$lang$maxFixedArity = 2;
    G__6144.cljs$lang$applyTo = function(arglist__6148) {
      var x = cljs.core.first(arglist__6148);
      arglist__6148 = cljs.core.next(arglist__6148);
      var y = cljs.core.first(arglist__6148);
      var more = cljs.core.rest(arglist__6148);
      return G__6144__delegate(x, y, more);
    };
    G__6144.cljs$core$IFn$_invoke$arity$variadic = G__6144__delegate;
    return G__6144;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__6149__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__6150 = y;
            var G__6151 = cljs.core.first.call(null, more);
            var G__6152 = cljs.core.next.call(null, more);
            x = G__6150;
            y = G__6151;
            more = G__6152;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6149 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6149__delegate.call(this, x, y, more);
    };
    G__6149.cljs$lang$maxFixedArity = 2;
    G__6149.cljs$lang$applyTo = function(arglist__6153) {
      var x = cljs.core.first(arglist__6153);
      arglist__6153 = cljs.core.next(arglist__6153);
      var y = cljs.core.first(arglist__6153);
      var more = cljs.core.rest(arglist__6153);
      return G__6149__delegate(x, y, more);
    };
    G__6149.cljs$core$IFn$_invoke$arity$variadic = G__6149__delegate;
    return G__6149;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3788__auto__ = x;
    var y__3789__auto__ = y;
    return x__3788__auto__ > y__3789__auto__ ? x__3788__auto__ : y__3789__auto__;
  };
  var max__3 = function() {
    var G__6154__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3788__auto__ = x;
        var y__3789__auto__ = y;
        return x__3788__auto__ > y__3789__auto__ ? x__3788__auto__ : y__3789__auto__;
      }(), more);
    };
    var G__6154 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6154__delegate.call(this, x, y, more);
    };
    G__6154.cljs$lang$maxFixedArity = 2;
    G__6154.cljs$lang$applyTo = function(arglist__6155) {
      var x = cljs.core.first(arglist__6155);
      arglist__6155 = cljs.core.next(arglist__6155);
      var y = cljs.core.first(arglist__6155);
      var more = cljs.core.rest(arglist__6155);
      return G__6154__delegate(x, y, more);
    };
    G__6154.cljs$core$IFn$_invoke$arity$variadic = G__6154__delegate;
    return G__6154;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3795__auto__ = x;
    var y__3796__auto__ = y;
    return x__3795__auto__ < y__3796__auto__ ? x__3795__auto__ : y__3796__auto__;
  };
  var min__3 = function() {
    var G__6156__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3795__auto__ = x;
        var y__3796__auto__ = y;
        return x__3795__auto__ < y__3796__auto__ ? x__3795__auto__ : y__3796__auto__;
      }(), more);
    };
    var G__6156 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6156__delegate.call(this, x, y, more);
    };
    G__6156.cljs$lang$maxFixedArity = 2;
    G__6156.cljs$lang$applyTo = function(arglist__6157) {
      var x = cljs.core.first(arglist__6157);
      arglist__6157 = cljs.core.next(arglist__6157);
      var y = cljs.core.first(arglist__6157);
      var more = cljs.core.rest(arglist__6157);
      return G__6156__delegate(x, y, more);
    };
    G__6156.cljs$core$IFn$_invoke$arity$variadic = G__6156__delegate;
    return G__6156;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Argument to char must be a character or number");
      } else {
        return null;
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__6158__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__6158 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6158__delegate.call(this, x, y, more);
    };
    G__6158.cljs$lang$maxFixedArity = 2;
    G__6158.cljs$lang$applyTo = function(arglist__6159) {
      var x = cljs.core.first(arglist__6159);
      arglist__6159 = cljs.core.next(arglist__6159);
      var y = cljs.core.first(arglist__6159);
      var more = cljs.core.rest(arglist__6159);
      return G__6158__delegate(x, y, more);
    };
    G__6158.cljs$core$IFn$_invoke$arity$variadic = G__6158__delegate;
    return G__6158;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__6160__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__6160 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6160__delegate.call(this, x, y, more);
    };
    G__6160.cljs$lang$maxFixedArity = 2;
    G__6160.cljs$lang$applyTo = function(arglist__6161) {
      var x = cljs.core.first(arglist__6161);
      arglist__6161 = cljs.core.next(arglist__6161);
      var y = cljs.core.first(arglist__6161);
      var more = cljs.core.rest(arglist__6161);
      return G__6160__delegate(x, y, more);
    };
    G__6160.cljs$core$IFn$_invoke$arity$variadic = G__6160__delegate;
    return G__6160;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__6162__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__6162 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6162__delegate.call(this, x, y, more);
    };
    G__6162.cljs$lang$maxFixedArity = 2;
    G__6162.cljs$lang$applyTo = function(arglist__6163) {
      var x = cljs.core.first(arglist__6163);
      arglist__6163 = cljs.core.next(arglist__6163);
      var y = cljs.core.first(arglist__6163);
      var more = cljs.core.rest(arglist__6163);
      return G__6162__delegate(x, y, more);
    };
    G__6162.cljs$core$IFn$_invoke$arity$variadic = G__6162__delegate;
    return G__6162;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__6164__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__6164 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6164__delegate.call(this, x, y, more);
    };
    G__6164.cljs$lang$maxFixedArity = 2;
    G__6164.cljs$lang$applyTo = function(arglist__6165) {
      var x = cljs.core.first(arglist__6165);
      arglist__6165 = cljs.core.next(arglist__6165);
      var y = cljs.core.first(arglist__6165);
      var more = cljs.core.rest(arglist__6165);
      return G__6164__delegate(x, y, more);
    };
    G__6164.cljs$core$IFn$_invoke$arity$variadic = G__6164__delegate;
    return G__6164;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__6166__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__6166 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6166__delegate.call(this, x, y, more);
    };
    G__6166.cljs$lang$maxFixedArity = 2;
    G__6166.cljs$lang$applyTo = function(arglist__6167) {
      var x = cljs.core.first(arglist__6167);
      arglist__6167 = cljs.core.next(arglist__6167);
      var y = cljs.core.first(arglist__6167);
      var more = cljs.core.rest(arglist__6167);
      return G__6166__delegate(x, y, more);
    };
    G__6166.cljs$core$IFn$_invoke$arity$variadic = G__6166__delegate;
    return G__6166;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x;
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract__3 = function() {
    var G__6168__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract, x - y, more);
    };
    var G__6168 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6168__delegate.call(this, x, y, more);
    };
    G__6168.cljs$lang$maxFixedArity = 2;
    G__6168.cljs$lang$applyTo = function(arglist__6169) {
      var x = cljs.core.first(arglist__6169);
      arglist__6169 = cljs.core.next(arglist__6169);
      var y = cljs.core.first(arglist__6169);
      var more = cljs.core.rest(arglist__6169);
      return G__6168__delegate(x, y, more);
    };
    G__6168.cljs$core$IFn$_invoke$arity$variadic = G__6168__delegate;
    return G__6168;
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract;
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x;
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract_int__3 = function() {
    var G__6170__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract_int, x - y, more);
    };
    var G__6170 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6170__delegate.call(this, x, y, more);
    };
    G__6170.cljs$lang$maxFixedArity = 2;
    G__6170.cljs$lang$applyTo = function(arglist__6171) {
      var x = cljs.core.first(arglist__6171);
      arglist__6171 = cljs.core.next(arglist__6171);
      var y = cljs.core.first(arglist__6171);
      var more = cljs.core.rest(arglist__6171);
      return G__6170__delegate(x, y, more);
    };
    G__6170.cljs$core$IFn$_invoke$arity$variadic = G__6170__delegate;
    return G__6170;
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__6172__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__6173 = y;
            var G__6174 = cljs.core.first.call(null, more);
            var G__6175 = cljs.core.next.call(null, more);
            x = G__6173;
            y = G__6174;
            more = G__6175;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6172 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6172__delegate.call(this, x, y, more);
    };
    G__6172.cljs$lang$maxFixedArity = 2;
    G__6172.cljs$lang$applyTo = function(arglist__6176) {
      var x = cljs.core.first(arglist__6176);
      arglist__6176 = cljs.core.next(arglist__6176);
      var y = cljs.core.first(arglist__6176);
      var more = cljs.core.rest(arglist__6176);
      return G__6172__delegate(x, y, more);
    };
    G__6172.cljs$core$IFn$_invoke$arity$variadic = G__6172__delegate;
    return G__6172;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__6177 = n__$1 - 1;
      var G__6178 = cljs.core.next.call(null, xs);
      n__$1 = G__6177;
      xs = G__6178;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return x.toString();
    }
  };
  var str__2 = function() {
    var G__6179__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__6180 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__6181 = cljs.core.next.call(null, more);
          sb = G__6180;
          more = G__6181;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__6179 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__6179__delegate.call(this, x, ys);
    };
    G__6179.cljs$lang$maxFixedArity = 1;
    G__6179.cljs$lang$applyTo = function(arglist__6182) {
      var x = cljs.core.first(arglist__6182);
      var ys = cljs.core.rest(arglist__6182);
      return G__6179__delegate(x, ys);
    };
    G__6179.cljs$core$IFn$_invoke$arity$variadic = G__6179__delegate;
    return G__6179;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__6183 = cljs.core.next.call(null, xs);
            var G__6184 = cljs.core.next.call(null, ys);
            xs = G__6183;
            ys = G__6184;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false;
            } else {
              return null;
            }
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__6185 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__6186 = cljs.core.next.call(null, s);
        res = G__6185;
        s = G__6186;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__6187 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__6188 = cljs.core.next.call(null, s);
      h = G__6187;
      s = G__6188;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__6189 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__6190 = cljs.core.next.call(null, s__$1);
      h = G__6189;
      s__$1 = G__6190;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__6197_6203 = cljs.core.seq.call(null, fn_map);
  var chunk__6198_6204 = null;
  var count__6199_6205 = 0;
  var i__6200_6206 = 0;
  while (true) {
    if (i__6200_6206 < count__6199_6205) {
      var vec__6201_6207 = cljs.core._nth.call(null, chunk__6198_6204, i__6200_6206);
      var key_name_6208 = cljs.core.nth.call(null, vec__6201_6207, 0, null);
      var f_6209 = cljs.core.nth.call(null, vec__6201_6207, 1, null);
      var str_name_6210 = cljs.core.name.call(null, key_name_6208);
      obj[str_name_6210] = f_6209;
      var G__6211 = seq__6197_6203;
      var G__6212 = chunk__6198_6204;
      var G__6213 = count__6199_6205;
      var G__6214 = i__6200_6206 + 1;
      seq__6197_6203 = G__6211;
      chunk__6198_6204 = G__6212;
      count__6199_6205 = G__6213;
      i__6200_6206 = G__6214;
      continue;
    } else {
      var temp__4126__auto___6215 = cljs.core.seq.call(null, seq__6197_6203);
      if (temp__4126__auto___6215) {
        var seq__6197_6216__$1 = temp__4126__auto___6215;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6197_6216__$1)) {
          var c__4229__auto___6217 = cljs.core.chunk_first.call(null, seq__6197_6216__$1);
          var G__6218 = cljs.core.chunk_rest.call(null, seq__6197_6216__$1);
          var G__6219 = c__4229__auto___6217;
          var G__6220 = cljs.core.count.call(null, c__4229__auto___6217);
          var G__6221 = 0;
          seq__6197_6203 = G__6218;
          chunk__6198_6204 = G__6219;
          count__6199_6205 = G__6220;
          i__6200_6206 = G__6221;
          continue;
        } else {
          var vec__6202_6222 = cljs.core.first.call(null, seq__6197_6216__$1);
          var key_name_6223 = cljs.core.nth.call(null, vec__6202_6222, 0, null);
          var f_6224 = cljs.core.nth.call(null, vec__6202_6222, 1, null);
          var str_name_6225 = cljs.core.name.call(null, key_name_6223);
          obj[str_name_6225] = f_6224;
          var G__6226 = cljs.core.next.call(null, seq__6197_6216__$1);
          var G__6227 = null;
          var G__6228 = 0;
          var G__6229 = 0;
          seq__6197_6203 = G__6226;
          chunk__6198_6204 = G__6227;
          count__6199_6205 = G__6228;
          i__6200_6206 = G__6229;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/List");
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/EmptyList");
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__6231 = coll;
  if (G__6231) {
    var bit__4131__auto__ = G__6231.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4131__auto__ || G__6231.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__6231.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__6231);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__6231);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__6232 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__6232;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__6233 = i - 1;
        var G__6234 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__6233;
        r = G__6234;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__6235) {
    var xs = cljs.core.seq(arglist__6235);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/Cons");
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3481__auto__ = coll == null;
    if (or__3481__auto__) {
      return or__3481__auto__;
    } else {
      var G__6239 = coll;
      if (G__6239) {
        var bit__4124__auto__ = G__6239.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4124__auto__ || G__6239.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__6241 = x;
  if (G__6241) {
    var bit__4131__auto__ = G__6241.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4131__auto__ || G__6241.cljs$core$IList$) {
      return true;
    } else {
      if (!G__6241.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__6241);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__6241);
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/Keyword");
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._hash == null) {
    self__._hash = cljs.core.hash_combine.call(null, cljs.core.hash.call(null, self__.ns), cljs.core.hash.call(null, self__.name)) + 2654435769;
    return self__._hash;
  } else {
    return self__._hash;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__6243 = null;
  var G__6243__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__6243__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__6243 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6243__2.call(this, self__, coll);
      case 3:
        return G__6243__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6243;
}();
cljs.core.Keyword.prototype.apply = function(self__, args6242) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6242)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__6245 = x;
    if (G__6245) {
      var bit__4124__auto__ = G__6245.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4124__auto__ || G__6245.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/LazySeq");
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__6246 = ls.sval();
        ls = G__6246;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/ArrayChunk");
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/ChunkedCons");
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__6248 = s;
    if (G__6248) {
      var bit__4124__auto__ = G__6248.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4124__auto__ || G__6248.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__6249 = cljs.core.next.call(null, s__$1);
      s__$1 = G__6249;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_6250 = 0;
  var xs_6251 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_6251) {
      ret[i_6250] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_6251));
      var G__6252 = i_6250 + 1;
      var G__6253 = cljs.core.next.call(null, xs_6251);
      i_6250 = G__6252;
      xs_6251 = G__6253;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__6254 = i + 1;
          var G__6255 = cljs.core.next.call(null, s__$1);
          i = G__6254;
          s__$1 = G__6255;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4329__auto___6256 = size;
      var i_6257 = 0;
      while (true) {
        if (i_6257 < n__4329__auto___6256) {
          a[i_6257] = init_val_or_seq;
          var G__6258 = i_6257 + 1;
          i_6257 = G__6258;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__6259 = i + 1;
          var G__6260 = cljs.core.next.call(null, s__$1);
          i = G__6259;
          s__$1 = G__6260;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4329__auto___6261 = size;
      var i_6262 = 0;
      while (true) {
        if (i_6262 < n__4329__auto___6261) {
          a[i_6262] = init_val_or_seq;
          var G__6263 = i_6262 + 1;
          i_6262 = G__6263;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__6264 = i + 1;
          var G__6265 = cljs.core.next.call(null, s__$1);
          i = G__6264;
          s__$1 = G__6265;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4329__auto___6266 = size;
      var i_6267 = 0;
      while (true) {
        if (i_6267 < n__4329__auto___6266) {
          a[i_6267] = init_val_or_seq;
          var G__6268 = i_6267 + 1;
          i_6267 = G__6268;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__6269 = i + 1;
          var G__6270 = cljs.core.next.call(null, s__$1);
          i = G__6269;
          s__$1 = G__6270;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4329__auto___6271 = size;
      var i_6272 = 0;
      while (true) {
        if (i_6272 < n__4329__auto___6271) {
          a[i_6272] = init_val_or_seq;
          var G__6273 = i_6272 + 1;
          i_6272 = G__6273;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__6274 = cljs.core.next.call(null, s__$1);
        var G__6275 = i - 1;
        var G__6276 = sum + 1;
        s__$1 = G__6274;
        i = G__6275;
        sum = G__6276;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__6277__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__6277 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6277__delegate.call(this, x, y, zs);
    };
    G__6277.cljs$lang$maxFixedArity = 2;
    G__6277.cljs$lang$applyTo = function(arglist__6278) {
      var x = cljs.core.first(arglist__6278);
      arglist__6278 = cljs.core.next(arglist__6278);
      var y = cljs.core.first(arglist__6278);
      var zs = cljs.core.rest(arglist__6278);
      return G__6277__delegate(x, y, zs);
    };
    G__6277.cljs$core$IFn$_invoke$arity$variadic = G__6277__delegate;
    return G__6277;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__6279__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__6279 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__6279__delegate.call(this, a, b, c, d, more);
    };
    G__6279.cljs$lang$maxFixedArity = 4;
    G__6279.cljs$lang$applyTo = function(arglist__6280) {
      var a = cljs.core.first(arglist__6280);
      arglist__6280 = cljs.core.next(arglist__6280);
      var b = cljs.core.first(arglist__6280);
      arglist__6280 = cljs.core.next(arglist__6280);
      var c = cljs.core.first(arglist__6280);
      arglist__6280 = cljs.core.next(arglist__6280);
      var d = cljs.core.first(arglist__6280);
      var more = cljs.core.rest(arglist__6280);
      return G__6279__delegate(a, b, c, d, more);
    };
    G__6279.cljs$core$IFn$_invoke$arity$variadic = G__6279__delegate;
    return G__6279;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_.call(null, tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__6281__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__6282 = ntcoll;
          var G__6283 = cljs.core.first.call(null, vals);
          var G__6284 = cljs.core.next.call(null, vals);
          tcoll = G__6282;
          val = G__6283;
          vals = G__6284;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6281 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6281__delegate.call(this, tcoll, val, vals);
    };
    G__6281.cljs$lang$maxFixedArity = 2;
    G__6281.cljs$lang$applyTo = function(arglist__6285) {
      var tcoll = cljs.core.first(arglist__6285);
      arglist__6285 = cljs.core.next(arglist__6285);
      var val = cljs.core.first(arglist__6285);
      var vals = cljs.core.rest(arglist__6285);
      return G__6281__delegate(tcoll, val, vals);
    };
    G__6281.cljs$core$IFn$_invoke$arity$variadic = G__6281__delegate;
    return G__6281;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__6286__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_.call(null, tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__6287 = ntcoll;
          var G__6288 = cljs.core.first.call(null, kvs);
          var G__6289 = cljs.core.second.call(null, kvs);
          var G__6290 = cljs.core.nnext.call(null, kvs);
          tcoll = G__6287;
          key = G__6288;
          val = G__6289;
          kvs = G__6290;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6286 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6286__delegate.call(this, tcoll, key, val, kvs);
    };
    G__6286.cljs$lang$maxFixedArity = 3;
    G__6286.cljs$lang$applyTo = function(arglist__6291) {
      var tcoll = cljs.core.first(arglist__6291);
      arglist__6291 = cljs.core.next(arglist__6291);
      var key = cljs.core.first(arglist__6291);
      arglist__6291 = cljs.core.next(arglist__6291);
      var val = cljs.core.first(arglist__6291);
      var kvs = cljs.core.rest(arglist__6291);
      return G__6286__delegate(tcoll, key, val, kvs);
    };
    G__6286.cljs$core$IFn$_invoke$arity$variadic = G__6286__delegate;
    return G__6286;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_.call(null, tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__6292__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_.call(null, tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__6293 = ntcoll;
          var G__6294 = cljs.core.first.call(null, ks);
          var G__6295 = cljs.core.next.call(null, ks);
          tcoll = G__6293;
          key = G__6294;
          ks = G__6295;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6292 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6292__delegate.call(this, tcoll, key, ks);
    };
    G__6292.cljs$lang$maxFixedArity = 2;
    G__6292.cljs$lang$applyTo = function(arglist__6296) {
      var tcoll = cljs.core.first(arglist__6296);
      arglist__6296 = cljs.core.next(arglist__6296);
      var key = cljs.core.first(arglist__6296);
      var ks = cljs.core.rest(arglist__6296);
      return G__6292__delegate(tcoll, key, ks);
    };
    G__6292.cljs$core$IFn$_invoke$arity$variadic = G__6292__delegate;
    return G__6292;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_.call(null, tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__6297__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__6298 = ntcoll;
          var G__6299 = cljs.core.first.call(null, vals);
          var G__6300 = cljs.core.next.call(null, vals);
          tcoll = G__6298;
          val = G__6299;
          vals = G__6300;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6297 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6297__delegate.call(this, tcoll, val, vals);
    };
    G__6297.cljs$lang$maxFixedArity = 2;
    G__6297.cljs$lang$applyTo = function(arglist__6301) {
      var tcoll = cljs.core.first(arglist__6301);
      arglist__6301 = cljs.core.next(arglist__6301);
      var val = cljs.core.first(arglist__6301);
      var vals = cljs.core.rest(arglist__6301);
      return G__6297__delegate(tcoll, val, vals);
    };
    G__6297.cljs$core$IFn$_invoke$arity$variadic = G__6297__delegate;
    return G__6297;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a4373 = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4373);
      } else {
        return f.call(null, a4373);
      }
    } else {
      var b4374 = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4373, b4374);
        } else {
          return f.call(null, a4373, b4374);
        }
      } else {
        var c4375 = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4373, b4374, c4375);
          } else {
            return f.call(null, a4373, b4374, c4375);
          }
        } else {
          var d4376 = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4373, b4374, c4375, d4376);
            } else {
              return f.call(null, a4373, b4374, c4375, d4376);
            }
          } else {
            var e4377 = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4373, b4374, c4375, d4376, e4377);
              } else {
                return f.call(null, a4373, b4374, c4375, d4376, e4377);
              }
            } else {
              var f4378 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4373, b4374, c4375, d4376, e4377, f4378);
                } else {
                  return f.call(null, a4373, b4374, c4375, d4376, e4377, f4378);
                }
              } else {
                var g4379 = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4373, b4374, c4375, d4376, e4377, f4378, g4379);
                  } else {
                    return f.call(null, a4373, b4374, c4375, d4376, e4377, f4378, g4379);
                  }
                } else {
                  var h4380 = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380);
                    } else {
                      return f.call(null, a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380);
                    }
                  } else {
                    var i4381 = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381);
                      } else {
                        return f.call(null, a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381);
                      }
                    } else {
                      var j4382 = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382);
                        } else {
                          return f.call(null, a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382);
                        }
                      } else {
                        var k4383 = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383);
                          } else {
                            return f.call(null, a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383);
                          }
                        } else {
                          var l4384 = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384);
                            } else {
                              return f.call(null, a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384);
                            }
                          } else {
                            var m4385 = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385);
                              } else {
                                return f.call(null, a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385);
                              }
                            } else {
                              var n4386 = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385, n4386);
                                } else {
                                  return f.call(null, a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385, n4386);
                                }
                              } else {
                                var o4387 = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385, n4386, o4387);
                                  } else {
                                    return f.call(null, a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385, n4386, o4387);
                                  }
                                } else {
                                  var p4388 = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385, n4386, o4387, p4388);
                                    } else {
                                      return f.call(null, a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385, n4386, o4387, p4388);
                                    }
                                  } else {
                                    var q4389 = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385, n4386, o4387, p4388, q4389);
                                      } else {
                                        return f.call(null, a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385, n4386, o4387, p4388, q4389);
                                      }
                                    } else {
                                      var r4390 = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385, n4386, o4387, p4388, q4389, r4390);
                                        } else {
                                          return f.call(null, a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385, n4386, o4387, p4388, q4389, r4390);
                                        }
                                      } else {
                                        var s4391 = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385, n4386, o4387, p4388, q4389, r4390, s4391);
                                          } else {
                                            return f.call(null, a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385, n4386, o4387, p4388, q4389, r4390, s4391);
                                          }
                                        } else {
                                          var t4392 = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385, n4386, o4387, p4388, q4389, r4390, s4391, t4392);
                                            } else {
                                              return f.call(null, a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385, n4386, o4387, p4388, q4389, r4390, s4391, t4392);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__6302__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__6302 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__6302__delegate.call(this, f, a, b, c, d, args);
    };
    G__6302.cljs$lang$maxFixedArity = 5;
    G__6302.cljs$lang$applyTo = function(arglist__6303) {
      var f = cljs.core.first(arglist__6303);
      arglist__6303 = cljs.core.next(arglist__6303);
      var a = cljs.core.first(arglist__6303);
      arglist__6303 = cljs.core.next(arglist__6303);
      var b = cljs.core.first(arglist__6303);
      arglist__6303 = cljs.core.next(arglist__6303);
      var c = cljs.core.first(arglist__6303);
      arglist__6303 = cljs.core.next(arglist__6303);
      var d = cljs.core.first(arglist__6303);
      var args = cljs.core.rest(arglist__6303);
      return G__6302__delegate(f, a, b, c, d, args);
    };
    G__6302.cljs$core$IFn$_invoke$arity$variadic = G__6302__delegate;
    return G__6302;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__6304__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__6304 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__6304__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__6304.cljs$lang$maxFixedArity = 6;
    G__6304.cljs$lang$applyTo = function(arglist__6305) {
      var obj = cljs.core.first(arglist__6305);
      arglist__6305 = cljs.core.next(arglist__6305);
      var f = cljs.core.first(arglist__6305);
      arglist__6305 = cljs.core.next(arglist__6305);
      var a = cljs.core.first(arglist__6305);
      arglist__6305 = cljs.core.next(arglist__6305);
      var b = cljs.core.first(arglist__6305);
      arglist__6305 = cljs.core.next(arglist__6305);
      var c = cljs.core.first(arglist__6305);
      arglist__6305 = cljs.core.next(arglist__6305);
      var d = cljs.core.first(arglist__6305);
      var args = cljs.core.rest(arglist__6305);
      return G__6304__delegate(obj, f, a, b, c, d, args);
    };
    G__6304.cljs$core$IFn$_invoke$arity$variadic = G__6304__delegate;
    return G__6304;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__6306__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__6306 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6306__delegate.call(this, x, y, more);
    };
    G__6306.cljs$lang$maxFixedArity = 2;
    G__6306.cljs$lang$applyTo = function(arglist__6307) {
      var x = cljs.core.first(arglist__6307);
      arglist__6307 = cljs.core.next(arglist__6307);
      var y = cljs.core.first(arglist__6307);
      var more = cljs.core.rest(arglist__6307);
      return G__6306__delegate(x, y, more);
    };
    G__6306.cljs$core$IFn$_invoke$arity$variadic = G__6306__delegate;
    return G__6306;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__6308 = pred;
        var G__6309 = cljs.core.next.call(null, coll);
        pred = G__6308;
        coll = G__6309;
        continue;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return false;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__3481__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__3481__auto__)) {
        return or__3481__auto__;
      } else {
        var G__6310 = pred;
        var G__6311 = cljs.core.next.call(null, coll);
        pred = G__6310;
        coll = G__6311;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__6312 = null;
    var G__6312__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__6312__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__6312__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__6312__3 = function() {
      var G__6313__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__6313 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__6313__delegate.call(this, x, y, zs);
      };
      G__6313.cljs$lang$maxFixedArity = 2;
      G__6313.cljs$lang$applyTo = function(arglist__6314) {
        var x = cljs.core.first(arglist__6314);
        arglist__6314 = cljs.core.next(arglist__6314);
        var y = cljs.core.first(arglist__6314);
        var zs = cljs.core.rest(arglist__6314);
        return G__6313__delegate(x, y, zs);
      };
      G__6313.cljs$core$IFn$_invoke$arity$variadic = G__6313__delegate;
      return G__6313;
    }();
    G__6312 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__6312__0.call(this);
        case 1:
          return G__6312__1.call(this, x);
        case 2:
          return G__6312__2.call(this, x, y);
        default:
          return G__6312__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__6312.cljs$lang$maxFixedArity = 2;
    G__6312.cljs$lang$applyTo = G__6312__3.cljs$lang$applyTo;
    return G__6312;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__6315__delegate = function(args) {
      return x;
    };
    var G__6315 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__6315__delegate.call(this, args);
    };
    G__6315.cljs$lang$maxFixedArity = 0;
    G__6315.cljs$lang$applyTo = function(arglist__6316) {
      var args = cljs.core.seq(arglist__6316);
      return G__6315__delegate(args);
    };
    G__6315.cljs$core$IFn$_invoke$arity$variadic = G__6315__delegate;
    return G__6315;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__6317 = null;
      var G__6317__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__6317__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__6317__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__6317__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__6317__4 = function() {
        var G__6318__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__6318 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6318__delegate.call(this, x, y, z, args);
        };
        G__6318.cljs$lang$maxFixedArity = 3;
        G__6318.cljs$lang$applyTo = function(arglist__6319) {
          var x = cljs.core.first(arglist__6319);
          arglist__6319 = cljs.core.next(arglist__6319);
          var y = cljs.core.first(arglist__6319);
          arglist__6319 = cljs.core.next(arglist__6319);
          var z = cljs.core.first(arglist__6319);
          var args = cljs.core.rest(arglist__6319);
          return G__6318__delegate(x, y, z, args);
        };
        G__6318.cljs$core$IFn$_invoke$arity$variadic = G__6318__delegate;
        return G__6318;
      }();
      G__6317 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__6317__0.call(this);
          case 1:
            return G__6317__1.call(this, x);
          case 2:
            return G__6317__2.call(this, x, y);
          case 3:
            return G__6317__3.call(this, x, y, z);
          default:
            return G__6317__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6317.cljs$lang$maxFixedArity = 3;
      G__6317.cljs$lang$applyTo = G__6317__4.cljs$lang$applyTo;
      return G__6317;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__6320 = null;
      var G__6320__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__6320__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__6320__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__6320__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__6320__4 = function() {
        var G__6321__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__6321 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6321__delegate.call(this, x, y, z, args);
        };
        G__6321.cljs$lang$maxFixedArity = 3;
        G__6321.cljs$lang$applyTo = function(arglist__6322) {
          var x = cljs.core.first(arglist__6322);
          arglist__6322 = cljs.core.next(arglist__6322);
          var y = cljs.core.first(arglist__6322);
          arglist__6322 = cljs.core.next(arglist__6322);
          var z = cljs.core.first(arglist__6322);
          var args = cljs.core.rest(arglist__6322);
          return G__6321__delegate(x, y, z, args);
        };
        G__6321.cljs$core$IFn$_invoke$arity$variadic = G__6321__delegate;
        return G__6321;
      }();
      G__6320 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__6320__0.call(this);
          case 1:
            return G__6320__1.call(this, x);
          case 2:
            return G__6320__2.call(this, x, y);
          case 3:
            return G__6320__3.call(this, x, y, z);
          default:
            return G__6320__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6320.cljs$lang$maxFixedArity = 3;
      G__6320.cljs$lang$applyTo = G__6320__4.cljs$lang$applyTo;
      return G__6320;
    }();
  };
  var comp__4 = function() {
    var G__6323__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__6324__delegate = function(args) {
            var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
            var fs__$2 = cljs.core.next.call(null, fs__$1);
            while (true) {
              if (fs__$2) {
                var G__6325 = cljs.core.first.call(null, fs__$2).call(null, ret);
                var G__6326 = cljs.core.next.call(null, fs__$2);
                ret = G__6325;
                fs__$2 = G__6326;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__6324 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__6324__delegate.call(this, args);
          };
          G__6324.cljs$lang$maxFixedArity = 0;
          G__6324.cljs$lang$applyTo = function(arglist__6327) {
            var args = cljs.core.seq(arglist__6327);
            return G__6324__delegate(args);
          };
          G__6324.cljs$core$IFn$_invoke$arity$variadic = G__6324__delegate;
          return G__6324;
        }();
      }(fs__$1);
    };
    var G__6323 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6323__delegate.call(this, f1, f2, f3, fs);
    };
    G__6323.cljs$lang$maxFixedArity = 3;
    G__6323.cljs$lang$applyTo = function(arglist__6328) {
      var f1 = cljs.core.first(arglist__6328);
      arglist__6328 = cljs.core.next(arglist__6328);
      var f2 = cljs.core.first(arglist__6328);
      arglist__6328 = cljs.core.next(arglist__6328);
      var f3 = cljs.core.first(arglist__6328);
      var fs = cljs.core.rest(arglist__6328);
      return G__6323__delegate(f1, f2, f3, fs);
    };
    G__6323.cljs$core$IFn$_invoke$arity$variadic = G__6323__delegate;
    return G__6323;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__6329__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args);
      };
      var G__6329 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__6329__delegate.call(this, args);
      };
      G__6329.cljs$lang$maxFixedArity = 0;
      G__6329.cljs$lang$applyTo = function(arglist__6330) {
        var args = cljs.core.seq(arglist__6330);
        return G__6329__delegate(args);
      };
      G__6329.cljs$core$IFn$_invoke$arity$variadic = G__6329__delegate;
      return G__6329;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__6331__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args);
      };
      var G__6331 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__6331__delegate.call(this, args);
      };
      G__6331.cljs$lang$maxFixedArity = 0;
      G__6331.cljs$lang$applyTo = function(arglist__6332) {
        var args = cljs.core.seq(arglist__6332);
        return G__6331__delegate(args);
      };
      G__6331.cljs$core$IFn$_invoke$arity$variadic = G__6331__delegate;
      return G__6331;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__6333__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args);
      };
      var G__6333 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__6333__delegate.call(this, args);
      };
      G__6333.cljs$lang$maxFixedArity = 0;
      G__6333.cljs$lang$applyTo = function(arglist__6334) {
        var args = cljs.core.seq(arglist__6334);
        return G__6333__delegate(args);
      };
      G__6333.cljs$core$IFn$_invoke$arity$variadic = G__6333__delegate;
      return G__6333;
    }();
  };
  var partial__5 = function() {
    var G__6335__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__6336__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__6336 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__6336__delegate.call(this, args);
        };
        G__6336.cljs$lang$maxFixedArity = 0;
        G__6336.cljs$lang$applyTo = function(arglist__6337) {
          var args = cljs.core.seq(arglist__6337);
          return G__6336__delegate(args);
        };
        G__6336.cljs$core$IFn$_invoke$arity$variadic = G__6336__delegate;
        return G__6336;
      }();
    };
    var G__6335 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__6335__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__6335.cljs$lang$maxFixedArity = 4;
    G__6335.cljs$lang$applyTo = function(arglist__6338) {
      var f = cljs.core.first(arglist__6338);
      arglist__6338 = cljs.core.next(arglist__6338);
      var arg1 = cljs.core.first(arglist__6338);
      arglist__6338 = cljs.core.next(arglist__6338);
      var arg2 = cljs.core.first(arglist__6338);
      arglist__6338 = cljs.core.next(arglist__6338);
      var arg3 = cljs.core.first(arglist__6338);
      var more = cljs.core.rest(arglist__6338);
      return G__6335__delegate(f, arg1, arg2, arg3, more);
    };
    G__6335.cljs$core$IFn$_invoke$arity$variadic = G__6335__delegate;
    return G__6335;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__6339 = null;
      var G__6339__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__6339__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__6339__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__6339__4 = function() {
        var G__6340__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__6340 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6340__delegate.call(this, a, b, c, ds);
        };
        G__6340.cljs$lang$maxFixedArity = 3;
        G__6340.cljs$lang$applyTo = function(arglist__6341) {
          var a = cljs.core.first(arglist__6341);
          arglist__6341 = cljs.core.next(arglist__6341);
          var b = cljs.core.first(arglist__6341);
          arglist__6341 = cljs.core.next(arglist__6341);
          var c = cljs.core.first(arglist__6341);
          var ds = cljs.core.rest(arglist__6341);
          return G__6340__delegate(a, b, c, ds);
        };
        G__6340.cljs$core$IFn$_invoke$arity$variadic = G__6340__delegate;
        return G__6340;
      }();
      G__6339 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__6339__1.call(this, a);
          case 2:
            return G__6339__2.call(this, a, b);
          case 3:
            return G__6339__3.call(this, a, b, c);
          default:
            return G__6339__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6339.cljs$lang$maxFixedArity = 3;
      G__6339.cljs$lang$applyTo = G__6339__4.cljs$lang$applyTo;
      return G__6339;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__6342 = null;
      var G__6342__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__6342__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__6342__4 = function() {
        var G__6343__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__6343 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6343__delegate.call(this, a, b, c, ds);
        };
        G__6343.cljs$lang$maxFixedArity = 3;
        G__6343.cljs$lang$applyTo = function(arglist__6344) {
          var a = cljs.core.first(arglist__6344);
          arglist__6344 = cljs.core.next(arglist__6344);
          var b = cljs.core.first(arglist__6344);
          arglist__6344 = cljs.core.next(arglist__6344);
          var c = cljs.core.first(arglist__6344);
          var ds = cljs.core.rest(arglist__6344);
          return G__6343__delegate(a, b, c, ds);
        };
        G__6343.cljs$core$IFn$_invoke$arity$variadic = G__6343__delegate;
        return G__6343;
      }();
      G__6342 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__6342__2.call(this, a, b);
          case 3:
            return G__6342__3.call(this, a, b, c);
          default:
            return G__6342__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6342.cljs$lang$maxFixedArity = 3;
      G__6342.cljs$lang$applyTo = G__6342__4.cljs$lang$applyTo;
      return G__6342;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__6345 = null;
      var G__6345__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__6345__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__6345__4 = function() {
        var G__6346__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__6346 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6346__delegate.call(this, a, b, c, ds);
        };
        G__6346.cljs$lang$maxFixedArity = 3;
        G__6346.cljs$lang$applyTo = function(arglist__6347) {
          var a = cljs.core.first(arglist__6347);
          arglist__6347 = cljs.core.next(arglist__6347);
          var b = cljs.core.first(arglist__6347);
          arglist__6347 = cljs.core.next(arglist__6347);
          var c = cljs.core.first(arglist__6347);
          var ds = cljs.core.rest(arglist__6347);
          return G__6346__delegate(a, b, c, ds);
        };
        G__6346.cljs$core$IFn$_invoke$arity$variadic = G__6346__delegate;
        return G__6346;
      }();
      G__6345 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__6345__2.call(this, a, b);
          case 3:
            return G__6345__3.call(this, a, b, c);
          default:
            return G__6345__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6345.cljs$lang$maxFixedArity = 3;
      G__6345.cljs$lang$applyTo = G__6345__4.cljs$lang$applyTo;
      return G__6345;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4329__auto___6348 = size;
          var i_6349 = 0;
          while (true) {
            if (i_6349 < n__4329__auto___6348) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_6349, cljs.core._nth.call(null, c, i_6349)));
              var G__6350 = i_6349 + 1;
              i_6349 = G__6350;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4329__auto___6351 = size;
        var i_6352 = 0;
        while (true) {
          if (i_6352 < n__4329__auto___6351) {
            var x_6353 = f.call(null, cljs.core._nth.call(null, c, i_6352));
            if (x_6353 == null) {
            } else {
              cljs.core.chunk_append.call(null, b, x_6353);
            }
            var G__6354 = i_6352 + 1;
            i_6352 = G__6354;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
      } else {
        var x = f.call(null, cljs.core.first.call(null, s));
        if (x == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s));
        } else {
          return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4329__auto___6355 = size;
          var i_6356 = 0;
          while (true) {
            if (i_6356 < n__4329__auto___6355) {
              var x_6357 = f.call(null, idx + i_6356, cljs.core._nth.call(null, c, i_6356));
              if (x_6357 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_6357);
              }
              var G__6358 = i_6356 + 1;
              i_6356 = G__6358;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, idx, cljs.core.first.call(null, s));
          if (x == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi.call(null, 0, coll);
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3469__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3469__auto__)) {
            return p.call(null, y);
          } else {
            return and__3469__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3469__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3469__auto__)) {
            var and__3469__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__3469__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__3469__auto____$1;
            }
          } else {
            return and__3469__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__6365__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__6365 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6365__delegate.call(this, x, y, z, args);
        };
        G__6365.cljs$lang$maxFixedArity = 3;
        G__6365.cljs$lang$applyTo = function(arglist__6366) {
          var x = cljs.core.first(arglist__6366);
          arglist__6366 = cljs.core.next(arglist__6366);
          var y = cljs.core.first(arglist__6366);
          arglist__6366 = cljs.core.next(arglist__6366);
          var z = cljs.core.first(arglist__6366);
          var args = cljs.core.rest(arglist__6366);
          return G__6365__delegate(x, y, z, args);
        };
        G__6365.cljs$core$IFn$_invoke$arity$variadic = G__6365__delegate;
        return G__6365;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3469__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3469__auto__)) {
            return p2.call(null, x);
          } else {
            return and__3469__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3469__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3469__auto__)) {
            var and__3469__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3469__auto____$1)) {
              var and__3469__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__3469__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__3469__auto____$2;
              }
            } else {
              return and__3469__auto____$1;
            }
          } else {
            return and__3469__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3469__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3469__auto__)) {
            var and__3469__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3469__auto____$1)) {
              var and__3469__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__3469__auto____$2)) {
                var and__3469__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__3469__auto____$3)) {
                  var and__3469__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3469__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__3469__auto____$4;
                  }
                } else {
                  return and__3469__auto____$3;
                }
              } else {
                return and__3469__auto____$2;
              }
            } else {
              return and__3469__auto____$1;
            }
          } else {
            return and__3469__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__6367__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__6359_SHARP_) {
            var and__3469__auto__ = p1.call(null, p1__6359_SHARP_);
            if (cljs.core.truth_(and__3469__auto__)) {
              return p2.call(null, p1__6359_SHARP_);
            } else {
              return and__3469__auto__;
            }
          }, args));
        };
        var G__6367 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6367__delegate.call(this, x, y, z, args);
        };
        G__6367.cljs$lang$maxFixedArity = 3;
        G__6367.cljs$lang$applyTo = function(arglist__6368) {
          var x = cljs.core.first(arglist__6368);
          arglist__6368 = cljs.core.next(arglist__6368);
          var y = cljs.core.first(arglist__6368);
          arglist__6368 = cljs.core.next(arglist__6368);
          var z = cljs.core.first(arglist__6368);
          var args = cljs.core.rest(arglist__6368);
          return G__6367__delegate(x, y, z, args);
        };
        G__6367.cljs$core$IFn$_invoke$arity$variadic = G__6367__delegate;
        return G__6367;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3469__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3469__auto__)) {
            var and__3469__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3469__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__3469__auto____$1;
            }
          } else {
            return and__3469__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3469__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3469__auto__)) {
            var and__3469__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3469__auto____$1)) {
              var and__3469__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3469__auto____$2)) {
                var and__3469__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3469__auto____$3)) {
                  var and__3469__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3469__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__3469__auto____$4;
                  }
                } else {
                  return and__3469__auto____$3;
                }
              } else {
                return and__3469__auto____$2;
              }
            } else {
              return and__3469__auto____$1;
            }
          } else {
            return and__3469__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3469__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3469__auto__)) {
            var and__3469__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3469__auto____$1)) {
              var and__3469__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3469__auto____$2)) {
                var and__3469__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3469__auto____$3)) {
                  var and__3469__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3469__auto____$4)) {
                    var and__3469__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__3469__auto____$5)) {
                      var and__3469__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__3469__auto____$6)) {
                        var and__3469__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__3469__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__3469__auto____$7;
                        }
                      } else {
                        return and__3469__auto____$6;
                      }
                    } else {
                      return and__3469__auto____$5;
                    }
                  } else {
                    return and__3469__auto____$4;
                  }
                } else {
                  return and__3469__auto____$3;
                }
              } else {
                return and__3469__auto____$2;
              }
            } else {
              return and__3469__auto____$1;
            }
          } else {
            return and__3469__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__6369__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__6360_SHARP_) {
            var and__3469__auto__ = p1.call(null, p1__6360_SHARP_);
            if (cljs.core.truth_(and__3469__auto__)) {
              var and__3469__auto____$1 = p2.call(null, p1__6360_SHARP_);
              if (cljs.core.truth_(and__3469__auto____$1)) {
                return p3.call(null, p1__6360_SHARP_);
              } else {
                return and__3469__auto____$1;
              }
            } else {
              return and__3469__auto__;
            }
          }, args));
        };
        var G__6369 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6369__delegate.call(this, x, y, z, args);
        };
        G__6369.cljs$lang$maxFixedArity = 3;
        G__6369.cljs$lang$applyTo = function(arglist__6370) {
          var x = cljs.core.first(arglist__6370);
          arglist__6370 = cljs.core.next(arglist__6370);
          var y = cljs.core.first(arglist__6370);
          arglist__6370 = cljs.core.next(arglist__6370);
          var z = cljs.core.first(arglist__6370);
          var args = cljs.core.rest(arglist__6370);
          return G__6369__delegate(x, y, z, args);
        };
        G__6369.cljs$core$IFn$_invoke$arity$variadic = G__6369__delegate;
        return G__6369;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__6371__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__6361_SHARP_) {
                return p1__6361_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__6362_SHARP_) {
                var and__3469__auto__ = p1__6362_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3469__auto__)) {
                  return p1__6362_SHARP_.call(null, y);
                } else {
                  return and__3469__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__6363_SHARP_) {
                var and__3469__auto__ = p1__6363_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3469__auto__)) {
                  var and__3469__auto____$1 = p1__6363_SHARP_.call(null, y);
                  if (cljs.core.truth_(and__3469__auto____$1)) {
                    return p1__6363_SHARP_.call(null, z);
                  } else {
                    return and__3469__auto____$1;
                  }
                } else {
                  return and__3469__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__6372__delegate = function(x, y, z, args) {
              return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(ps__$1) {
                return function(p1__6364_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__6364_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__6372 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__6372__delegate.call(this, x, y, z, args);
            };
            G__6372.cljs$lang$maxFixedArity = 3;
            G__6372.cljs$lang$applyTo = function(arglist__6373) {
              var x = cljs.core.first(arglist__6373);
              arglist__6373 = cljs.core.next(arglist__6373);
              var y = cljs.core.first(arglist__6373);
              arglist__6373 = cljs.core.next(arglist__6373);
              var z = cljs.core.first(arglist__6373);
              var args = cljs.core.rest(arglist__6373);
              return G__6372__delegate(x, y, z, args);
            };
            G__6372.cljs$core$IFn$_invoke$arity$variadic = G__6372__delegate;
            return G__6372;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__6371 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6371__delegate.call(this, p1, p2, p3, ps);
    };
    G__6371.cljs$lang$maxFixedArity = 3;
    G__6371.cljs$lang$applyTo = function(arglist__6374) {
      var p1 = cljs.core.first(arglist__6374);
      arglist__6374 = cljs.core.next(arglist__6374);
      var p2 = cljs.core.first(arglist__6374);
      arglist__6374 = cljs.core.next(arglist__6374);
      var p3 = cljs.core.first(arglist__6374);
      var ps = cljs.core.rest(arglist__6374);
      return G__6371__delegate(p1, p2, p3, ps);
    };
    G__6371.cljs$core$IFn$_invoke$arity$variadic = G__6371__delegate;
    return G__6371;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3481__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3481__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__3481__auto____$1)) {
            return or__3481__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__6381__delegate = function(x, y, z, args) {
          var or__3481__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__3481__auto__)) {
            return or__3481__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__6381 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6381__delegate.call(this, x, y, z, args);
        };
        G__6381.cljs$lang$maxFixedArity = 3;
        G__6381.cljs$lang$applyTo = function(arglist__6382) {
          var x = cljs.core.first(arglist__6382);
          arglist__6382 = cljs.core.next(arglist__6382);
          var y = cljs.core.first(arglist__6382);
          arglist__6382 = cljs.core.next(arglist__6382);
          var z = cljs.core.first(arglist__6382);
          var args = cljs.core.rest(arglist__6382);
          return G__6381__delegate(x, y, z, args);
        };
        G__6381.cljs$core$IFn$_invoke$arity$variadic = G__6381__delegate;
        return G__6381;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3481__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3481__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3481__auto____$1)) {
            return or__3481__auto____$1;
          } else {
            var or__3481__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__3481__auto____$2)) {
              return or__3481__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3481__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3481__auto____$1)) {
            return or__3481__auto____$1;
          } else {
            var or__3481__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__3481__auto____$2)) {
              return or__3481__auto____$2;
            } else {
              var or__3481__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__3481__auto____$3)) {
                return or__3481__auto____$3;
              } else {
                var or__3481__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3481__auto____$4)) {
                  return or__3481__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__6383__delegate = function(x, y, z, args) {
          var or__3481__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__3481__auto__)) {
            return or__3481__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3481__auto__) {
              return function(p1__6375_SHARP_) {
                var or__3481__auto____$1 = p1.call(null, p1__6375_SHARP_);
                if (cljs.core.truth_(or__3481__auto____$1)) {
                  return or__3481__auto____$1;
                } else {
                  return p2.call(null, p1__6375_SHARP_);
                }
              };
            }(or__3481__auto__), args);
          }
        };
        var G__6383 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6383__delegate.call(this, x, y, z, args);
        };
        G__6383.cljs$lang$maxFixedArity = 3;
        G__6383.cljs$lang$applyTo = function(arglist__6384) {
          var x = cljs.core.first(arglist__6384);
          arglist__6384 = cljs.core.next(arglist__6384);
          var y = cljs.core.first(arglist__6384);
          arglist__6384 = cljs.core.next(arglist__6384);
          var z = cljs.core.first(arglist__6384);
          var args = cljs.core.rest(arglist__6384);
          return G__6383__delegate(x, y, z, args);
        };
        G__6383.cljs$core$IFn$_invoke$arity$variadic = G__6383__delegate;
        return G__6383;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3481__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3481__auto____$1)) {
            return or__3481__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3481__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3481__auto____$1)) {
            return or__3481__auto____$1;
          } else {
            var or__3481__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3481__auto____$2)) {
              return or__3481__auto____$2;
            } else {
              var or__3481__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3481__auto____$3)) {
                return or__3481__auto____$3;
              } else {
                var or__3481__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3481__auto____$4)) {
                  return or__3481__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3481__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3481__auto____$1)) {
            return or__3481__auto____$1;
          } else {
            var or__3481__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3481__auto____$2)) {
              return or__3481__auto____$2;
            } else {
              var or__3481__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3481__auto____$3)) {
                return or__3481__auto____$3;
              } else {
                var or__3481__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3481__auto____$4)) {
                  return or__3481__auto____$4;
                } else {
                  var or__3481__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__3481__auto____$5)) {
                    return or__3481__auto____$5;
                  } else {
                    var or__3481__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__3481__auto____$6)) {
                      return or__3481__auto____$6;
                    } else {
                      var or__3481__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__3481__auto____$7)) {
                        return or__3481__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__6385__delegate = function(x, y, z, args) {
          var or__3481__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__3481__auto__)) {
            return or__3481__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3481__auto__) {
              return function(p1__6376_SHARP_) {
                var or__3481__auto____$1 = p1.call(null, p1__6376_SHARP_);
                if (cljs.core.truth_(or__3481__auto____$1)) {
                  return or__3481__auto____$1;
                } else {
                  var or__3481__auto____$2 = p2.call(null, p1__6376_SHARP_);
                  if (cljs.core.truth_(or__3481__auto____$2)) {
                    return or__3481__auto____$2;
                  } else {
                    return p3.call(null, p1__6376_SHARP_);
                  }
                }
              };
            }(or__3481__auto__), args);
          }
        };
        var G__6385 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6385__delegate.call(this, x, y, z, args);
        };
        G__6385.cljs$lang$maxFixedArity = 3;
        G__6385.cljs$lang$applyTo = function(arglist__6386) {
          var x = cljs.core.first(arglist__6386);
          arglist__6386 = cljs.core.next(arglist__6386);
          var y = cljs.core.first(arglist__6386);
          arglist__6386 = cljs.core.next(arglist__6386);
          var z = cljs.core.first(arglist__6386);
          var args = cljs.core.rest(arglist__6386);
          return G__6385__delegate(x, y, z, args);
        };
        G__6385.cljs$core$IFn$_invoke$arity$variadic = G__6385__delegate;
        return G__6385;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__6387__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__6377_SHARP_) {
                return p1__6377_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__6378_SHARP_) {
                var or__3481__auto__ = p1__6378_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3481__auto__)) {
                  return or__3481__auto__;
                } else {
                  return p1__6378_SHARP_.call(null, y);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__6379_SHARP_) {
                var or__3481__auto__ = p1__6379_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3481__auto__)) {
                  return or__3481__auto__;
                } else {
                  var or__3481__auto____$1 = p1__6379_SHARP_.call(null, y);
                  if (cljs.core.truth_(or__3481__auto____$1)) {
                    return or__3481__auto____$1;
                  } else {
                    return p1__6379_SHARP_.call(null, z);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__6388__delegate = function(x, y, z, args) {
              var or__3481__auto__ = spn.call(null, x, y, z);
              if (cljs.core.truth_(or__3481__auto__)) {
                return or__3481__auto__;
              } else {
                return cljs.core.some.call(null, function(or__3481__auto__, ps__$1) {
                  return function(p1__6380_SHARP_) {
                    return cljs.core.some.call(null, p1__6380_SHARP_, args);
                  };
                }(or__3481__auto__, ps__$1), ps__$1);
              }
            };
            var G__6388 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__6388__delegate.call(this, x, y, z, args);
            };
            G__6388.cljs$lang$maxFixedArity = 3;
            G__6388.cljs$lang$applyTo = function(arglist__6389) {
              var x = cljs.core.first(arglist__6389);
              arglist__6389 = cljs.core.next(arglist__6389);
              var y = cljs.core.first(arglist__6389);
              arglist__6389 = cljs.core.next(arglist__6389);
              var z = cljs.core.first(arglist__6389);
              var args = cljs.core.rest(arglist__6389);
              return G__6388__delegate(x, y, z, args);
            };
            G__6388.cljs$core$IFn$_invoke$arity$variadic = G__6388__delegate;
            return G__6388;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__6387 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6387__delegate.call(this, p1, p2, p3, ps);
    };
    G__6387.cljs$lang$maxFixedArity = 3;
    G__6387.cljs$lang$applyTo = function(arglist__6390) {
      var p1 = cljs.core.first(arglist__6390);
      arglist__6390 = cljs.core.next(arglist__6390);
      var p2 = cljs.core.first(arglist__6390);
      arglist__6390 = cljs.core.next(arglist__6390);
      var p3 = cljs.core.first(arglist__6390);
      var ps = cljs.core.rest(arglist__6390);
      return G__6387__delegate(p1, p2, p3, ps);
    };
    G__6387.cljs$core$IFn$_invoke$arity$variadic = G__6387__delegate;
    return G__6387;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4329__auto___6392 = size;
          var i_6393 = 0;
          while (true) {
            if (i_6393 < n__4329__auto___6392) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_6393)));
              var G__6394 = i_6393 + 1;
              i_6393 = G__6394;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && (s2 && s3)) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__6395__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(step) {
        return function(p1__6391_SHARP_) {
          return cljs.core.apply.call(null, f, p1__6391_SHARP_);
        };
      }(step), step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)));
    };
    var G__6395 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__6395__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__6395.cljs$lang$maxFixedArity = 4;
    G__6395.cljs$lang$applyTo = function(arglist__6396) {
      var f = cljs.core.first(arglist__6396);
      arglist__6396 = cljs.core.next(arglist__6396);
      var c1 = cljs.core.first(arglist__6396);
      arglist__6396 = cljs.core.next(arglist__6396);
      var c2 = cljs.core.first(arglist__6396);
      arglist__6396 = cljs.core.next(arglist__6396);
      var c3 = cljs.core.first(arglist__6396);
      var colls = cljs.core.rest(arglist__6396);
      return G__6395__delegate(f, c1, c2, c3, colls);
    };
    G__6395.cljs$core$IFn$_invoke$arity$variadic = G__6395__delegate;
    return G__6395;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if (n__$1 > 0 && s) {
        var G__6397 = n__$1 - 1;
        var G__6398 = cljs.core.rest.call(null, s);
        n__$1 = G__6397;
        coll__$1 = G__6398;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step.call(null, n, coll);
    };
  }(step), null, null);
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__6399 = cljs.core.next.call(null, s);
      var G__6400 = cljs.core.next.call(null, lead);
      s = G__6399;
      lead = G__6400;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if (cljs.core.truth_(function() {
        var and__3469__auto__ = s;
        if (and__3469__auto__) {
          return pred__$1.call(null, cljs.core.first.call(null, s));
        } else {
          return and__3469__auto__;
        }
      }())) {
        var G__6401 = pred__$1;
        var G__6402 = cljs.core.rest.call(null, s);
        pred__$1 = G__6401;
        coll__$1 = G__6402;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step.call(null, pred, coll);
    };
  }(step), null, null);
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__6403__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__6403 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6403__delegate.call(this, c1, c2, colls);
    };
    G__6403.cljs$lang$maxFixedArity = 2;
    G__6403.cljs$lang$applyTo = function(arglist__6404) {
      var c1 = cljs.core.first(arglist__6404);
      arglist__6404 = cljs.core.next(arglist__6404);
      var c2 = cljs.core.first(arglist__6404);
      var colls = cljs.core.rest(arglist__6404);
      return G__6403__delegate(c1, c2, colls);
    };
    G__6403.cljs$core$IFn$_invoke$arity$variadic = G__6403__delegate;
    return G__6403;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll));
  };
  var mapcat__3 = function() {
    var G__6405__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls));
    };
    var G__6405 = function(f, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6405__delegate.call(this, f, coll, colls);
    };
    G__6405.cljs$lang$maxFixedArity = 2;
    G__6405.cljs$lang$applyTo = function(arglist__6406) {
      var f = cljs.core.first(arglist__6406);
      arglist__6406 = cljs.core.next(arglist__6406);
      var coll = cljs.core.first(arglist__6406);
      var colls = cljs.core.rest(arglist__6406);
      return G__6405__delegate(f, coll, colls);
    };
    G__6405.cljs$core$IFn$_invoke$arity$variadic = G__6405__delegate;
    return G__6405;
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4329__auto___6407 = size;
        var i_6408 = 0;
        while (true) {
          if (i_6408 < n__4329__auto___6407) {
            if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_6408)))) {
              cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_6408));
            } else {
            }
            var G__6409 = i_6408 + 1;
            i_6408 = G__6409;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
      } else {
        var f = cljs.core.first.call(null, s);
        var r = cljs.core.rest.call(null, s);
        if (cljs.core.truth_(pred.call(null, f))) {
          return cljs.core.cons.call(null, f, filter.call(null, pred, r));
        } else {
          return filter.call(null, pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__6410_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__6410_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function into(to, from) {
  if (!(to == null)) {
    if (function() {
      var G__6412 = to;
      if (G__6412) {
        var bit__4124__auto__ = G__6412.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4124__auto__ || G__6412.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from));
    } else {
      return cljs.core.reduce.call(null, cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__6413__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls));
    };
    var G__6413 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__6413__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__6413.cljs$lang$maxFixedArity = 4;
    G__6413.cljs$lang$applyTo = function(arglist__6414) {
      var f = cljs.core.first(arglist__6414);
      arglist__6414 = cljs.core.next(arglist__6414);
      var c1 = cljs.core.first(arglist__6414);
      arglist__6414 = cljs.core.next(arglist__6414);
      var c2 = cljs.core.first(arglist__6414);
      arglist__6414 = cljs.core.next(arglist__6414);
      var c3 = cljs.core.first(arglist__6414);
      var colls = cljs.core.rest(arglist__6414);
      return G__6413__delegate(f, c1, c2, c3, colls);
    };
    G__6413.cljs$core$IFn$_invoke$arity$variadic = G__6413__delegate;
    return G__6413;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__6416 = m__$1;
          if (G__6416) {
            var bit__4131__auto__ = G__6416.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4131__auto__ || G__6416.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__6416.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__6416);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__6416);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__6417 = sentinel;
            var G__6418 = m__$2;
            var G__6419 = cljs.core.next.call(null, ks__$1);
            sentinel = G__6417;
            m__$1 = G__6418;
            ks__$1 = G__6419;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__6420, v) {
  var vec__6422 = p__6420;
  var k = cljs.core.nth.call(null, vec__6422, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__6422, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__6423, f) {
    var vec__6433 = p__6423;
    var k = cljs.core.nth.call(null, vec__6433, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__6433, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__6424, f, a) {
    var vec__6434 = p__6424;
    var k = cljs.core.nth.call(null, vec__6434, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__6434, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__6425, f, a, b) {
    var vec__6435 = p__6425;
    var k = cljs.core.nth.call(null, vec__6435, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__6435, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__6426, f, a, b, c) {
    var vec__6436 = p__6426;
    var k = cljs.core.nth.call(null, vec__6436, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__6436, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__6438__delegate = function(m, p__6427, f, a, b, c, args) {
      var vec__6437 = p__6427;
      var k = cljs.core.nth.call(null, vec__6437, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__6437, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__6438 = function(m, p__6427, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__6438__delegate.call(this, m, p__6427, f, a, b, c, args);
    };
    G__6438.cljs$lang$maxFixedArity = 6;
    G__6438.cljs$lang$applyTo = function(arglist__6439) {
      var m = cljs.core.first(arglist__6439);
      arglist__6439 = cljs.core.next(arglist__6439);
      var p__6427 = cljs.core.first(arglist__6439);
      arglist__6439 = cljs.core.next(arglist__6439);
      var f = cljs.core.first(arglist__6439);
      arglist__6439 = cljs.core.next(arglist__6439);
      var a = cljs.core.first(arglist__6439);
      arglist__6439 = cljs.core.next(arglist__6439);
      var b = cljs.core.first(arglist__6439);
      arglist__6439 = cljs.core.next(arglist__6439);
      var c = cljs.core.first(arglist__6439);
      var args = cljs.core.rest(arglist__6439);
      return G__6438__delegate(m, p__6427, f, a, b, c, args);
    };
    G__6438.cljs$core$IFn$_invoke$arity$variadic = G__6438__delegate;
    return G__6438;
  }();
  update_in = function(m, p__6427, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__6427, f);
      case 4:
        return update_in__4.call(this, m, p__6427, f, a);
      case 5:
        return update_in__5.call(this, m, p__6427, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__6427, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__6427, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4051__auto__, writer__4052__auto__, opts__4053__auto__) {
  return cljs.core._write.call(null, writer__4052__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__6440 = ll - 5;
      var G__6441 = r;
      ll = G__6440;
      ret = G__6441;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__6442 = cljs.core.pv_aget.call(null, node, 0);
      var G__6443 = level - 5;
      node = G__6442;
      level = G__6443;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off.call(null, pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__6444 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
        var G__6445 = level - 5;
        node = G__6444;
        level = G__6445;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for.call(null, pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var ret = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret, subidx, null);
        return ret;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/PersistentVector");
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var step_init = [0, init];
  var i = 0;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while (true) {
          if (j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2;
            } else {
              var G__6447 = j + 1;
              var G__6448 = init__$2;
              j = G__6447;
              init__$1 = G__6448;
              continue;
            }
          } else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1);
      } else {
        var G__6449 = i + step_init[0];
        i = G__6449;
        continue;
      }
    } else {
      return step_init[1];
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for.call(null, coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= n) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, val);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_tail = cljs.core.unchecked_array_for.call(null, coll__$1, self__.cnt - 2);
          var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
          } else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f, start);
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.chunked_seq.call(null, coll__$1, cljs.core.first_array_for_longvec.call(null, coll__$1), 0, 0);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4329__auto___6450 = len;
    var i_6451 = 0;
    while (true) {
      if (i_6451 < n__4329__auto___6450) {
        new_tail[i_6451] = self__.tail[i_6451];
        var G__6452 = i_6451 + 1;
        i_6451 = G__6452;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__6453 = null;
  var G__6453__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__6453__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__6453 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6453__2.call(this, self__, k);
      case 3:
        return G__6453__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6453;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args6446) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6446)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__6454 = i + 1;
        var G__6455 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__6454;
        out = G__6455;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray.call(null, args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__6456) {
    var args = cljs.core.seq(arglist__6456);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/Subvec");
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3788__auto__ = self__.end;
    var y__3789__auto__ = v_pos + 1;
    return x__3788__auto__ > y__3789__auto__ ? x__3788__auto__ : y__3789__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq.call(null, i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__6458 = null;
  var G__6458__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__6458__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__6458 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6458__2.call(this, self__, k);
      case 3:
        return G__6458__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6458;
}();
cljs.core.Subvec.prototype.apply = function(self__, args6457) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6457)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__6459 = meta;
      var G__6460 = v.v;
      var G__6461 = v.start + start;
      var G__6462 = v.start + end;
      var G__6463 = __hash;
      meta = G__6459;
      v = G__6460;
      start = G__6461;
      end = G__6462;
      __hash = G__6463;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || (end < 0 || (start > c || end > c))) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj6467 = {};
    return obj6467;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        cljs.core.pv_aset.call(null, node__$1, subidx, null);
        return node__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off.call(null, tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__6468 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
        var G__6469 = level - 5;
        node = G__6468;
        level = G__6469;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/TransientVector");
};
cljs.core.TransientVector.prototype.call = function() {
  var G__6471 = null;
  var G__6471__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__6471__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__6471 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6471__2.call(this, self__, k);
      case 3:
        return G__6471__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6471;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args6470) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6470)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset.call(null, node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
        } else {
          return null;
        }
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var new_tail = cljs.core.unchecked_editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
              if (!(nr == null)) {
                return nr;
              } else {
                return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
              }
            }();
            if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
              var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            } else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            }
          } else {
            return null;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/PersistentQueue");
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__3481__auto__ = self__.front;
    if (cljs.core.truth_(or__3481__auto__)) {
      return or__3481__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3481__auto__ = self__.rear;
      if (cljs.core.truth_(or__3481__auto__)) {
        return or__3481__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/NeverEquiv");
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__6472 = i + incr;
        i = G__6472;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__6473 = i + 1;
      var G__6474 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__6473;
      out = G__6474;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj6478 = {};
    return obj6478;
  }();
  var l = ks.length;
  var i_6479 = 0;
  while (true) {
    if (i_6479 < l) {
      var k_6480 = ks[i_6479];
      new_obj[k_6480] = obj[k_6480];
      var G__6481 = i_6479 + 1;
      i_6479 = G__6481;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/ObjMap");
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__6484 = cljs.core.rest.call(null, keys__$1);
        var G__6485 = init__$2;
        keys__$1 = G__6484;
        init__$1 = G__6485;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(coll__$1) {
      return function(p1__6482_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__6482_SHARP_, self__.strobj[p1__6482_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__6486 = null;
  var G__6486__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__6486__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__6486 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6486__2.call(this, self__, k);
      case 3:
        return G__6486__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6486;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args6483) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6483)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj6488 = {};
  return obj6488;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__6489 = i + 2;
          i = G__6489;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__6490 = i + 2;
          i = G__6490;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__6491 = i + 2;
          i = G__6491;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__6492 = i + 2;
          i = G__6492;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__6493 = i + 2;
          i = G__6493;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_6494 = 0;
  while (true) {
    if (i_6494 < l) {
      narr[i_6494] = arr[i_6494];
      var G__6495 = i_6494 + 1;
      i_6494 = G__6495;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__6500 = i + 2;
        var G__6501 = init__$2;
        i = G__6500;
        init__$1 = G__6501;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj6498 = {};
    return obj6498;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__6502 = s + 2;
            var G__6503 = d;
            s = G__6502;
            d = G__6503;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__6504 = s + 2;
              var G__6505 = d + 2;
              s = G__6504;
              d = G__6505;
              continue;
            } else {
              return null;
            }
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var arr__$1 = function() {
          var G__6499 = cljs.core.aclone.call(null, self__.arr);
          G__6499[idx + 1] = v;
          return G__6499;
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__6506 = null;
  var G__6506__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__6506__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__6506 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6506__2.call(this, self__, k);
      case 3:
        return G__6506__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6506;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args6496) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6496)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__6507 = i + 2;
        var G__6508 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__6507;
        ret = G__6508;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__6509_6511 = self__.arr;
      G__6509_6511.pop();
      G__6509_6511.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__6510 = o;
      if (G__6510) {
        var bit__4131__auto__ = G__6510.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4131__auto__ || G__6510.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__6510.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__6510);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__6510);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__6512 = cljs.core.next.call(null, es);
          var G__6513 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__6512;
          tcoll__$2 = G__6513;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__6514 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__6515 = i + 2;
      out = G__6514;
      i = G__6515;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4051__auto__, writer__4052__auto__, opts__4053__auto__) {
  return cljs.core._write.call(null, writer__4052__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core._EQ_.call(null, key, other);
      } else {
        return null;
      }
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__6518 = cljs.core.aclone.call(null, arr);
    G__6518[i] = a;
    return G__6518;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__6519 = cljs.core.aclone.call(null, arr);
    G__6519[i] = a;
    G__6519[j] = b;
    return G__6519;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__6520 = i + 2;
        var G__6521 = init__$2;
        i = G__6520;
        init__$1 = G__6521;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return inode.edit_and_remove_pair(edit__$1, bit, idx);
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_6522 = 0;
        var j_6523 = 0;
        while (true) {
          if (i_6522 < 32) {
            if ((self__.bitmap >>> i_6522 & 1) === 0) {
              var G__6524 = i_6522 + 1;
              var G__6525 = j_6523;
              i_6522 = G__6524;
              j_6523 = G__6525;
              continue;
            } else {
              nodes[i_6522] = !(self__.arr[j_6523] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_6523]), self__.arr[j_6523], self__.arr[j_6523 + 1], added_leaf_QMARK_) : self__.arr[j_6523 + 1];
              var G__6526 = i_6522 + 1;
              var G__6527 = j_6523 + 2;
              i_6522 = G__6526;
              j_6523 = G__6527;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable;
        } else {
          return null;
        }
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_6528 = 0;
      var j_6529 = 0;
      while (true) {
        if (i_6528 < 32) {
          if ((self__.bitmap >>> i_6528 & 1) === 0) {
            var G__6530 = i_6528 + 1;
            var G__6531 = j_6529;
            i_6528 = G__6530;
            j_6529 = G__6531;
            continue;
          } else {
            nodes[i_6528] = !(self__.arr[j_6529] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_6529]), self__.arr[j_6529], self__.arr[j_6529 + 1], added_leaf_QMARK_) : self__.arr[j_6529 + 1];
            var G__6532 = i_6528 + 1;
            var G__6533 = j_6529 + 2;
            i_6528 = G__6532;
            j_6529 = G__6533;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__6534 = i + 1;
        var G__6535 = j + 2;
        var G__6536 = bitmap | 1 << i;
        i = G__6534;
        j = G__6535;
        bitmap = G__6536;
        continue;
      } else {
        var G__6537 = i + 1;
        var G__6538 = j;
        var G__6539 = bitmap;
        i = G__6537;
        j = G__6538;
        bitmap = G__6539;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/ArrayNode");
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__6540 = i + 1;
          var G__6541 = init__$2;
          i = G__6540;
          init__$1 = G__6541;
          continue;
        }
      } else {
        var G__6542 = i + 1;
        var G__6543 = init__$1;
        i = G__6542;
        init__$1 = G__6543;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        } else {
          return null;
        }
      }
    }
  } else {
    return inode;
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__6544 = i + 2;
        i = G__6544;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/NodeSeq");
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__6545 = j + 2;
                j = G__6545;
                continue;
              }
            } else {
              var G__6546 = j + 2;
              j = G__6546;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__6547 = j + 1;
              j = G__6547;
              continue;
            }
          } else {
            var G__6548 = j + 1;
            j = G__6548;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return init__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj6551 = {};
    return obj6551;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if (new_root === self__.root) {
          return coll__$1;
        } else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__6552 = null;
  var G__6552__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__6552__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__6552 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6552__2.call(this, self__, k);
      case 3:
        return G__6552__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6552;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args6549) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6549)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__6553 = i + 1;
      var G__6554 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__6553;
      out = G__6554;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/TransientHashMap");
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__6555 = o;
      if (G__6555) {
        var bit__4131__auto__ = G__6555.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4131__auto__ || G__6555.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__6555.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__6555);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__6555);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__6556 = cljs.core.next.call(null, es);
          var G__6557 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__6556;
          tcoll__$1 = G__6557;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__6558 = ascending_QMARK_ ? t.left : t.right;
      var G__6559 = cljs.core.conj.call(null, stack__$1, t);
      t = G__6558;
      stack__$1 = G__6559;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, ins, right, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, left, ins, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/BlackNode");
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__6561 = null;
  var G__6561__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__6561__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__6561 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6561__2.call(this, self__, k);
      case 3:
        return G__6561__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6561;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args6560) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6560)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/RedNode");
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__6563 = null;
  var G__6563__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__6563__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__6563 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6563__2.call(this, self__, k);
      case 3:
        return G__6563__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6563;
}();
cljs.core.RedNode.prototype.apply = function(self__, args6562) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6562)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
          if (!(ins == null)) {
            return tree.add_right(ins);
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var app = tree_map_append.call(null, left.right, right.left);
            if (app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
            } else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
            }
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var del = tree_map_remove.call(null, comp, tree.right, k, found);
          if (!(del == null) || !(found[0] == null)) {
            if (tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
            } else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
            }
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__6565 = t.left;
          t = G__6565;
          continue;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var G__6566 = t.right;
            t = G__6566;
            continue;
          } else {
            return null;
          }
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__6567 = null;
  var G__6567__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__6567__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__6567 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6567__2.call(this, self__, k);
      case 3:
        return G__6567__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6567;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args6564) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6564)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__6568 = cljs.core.conj.call(null, stack, t);
              var G__6569 = t.left;
              stack = G__6568;
              t = G__6569;
              continue;
            } else {
              var G__6570 = stack;
              var G__6571 = t.right;
              stack = G__6570;
              t = G__6571;
              continue;
            }
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              if (c > 0) {
                var G__6572 = cljs.core.conj.call(null, stack, t);
                var G__6573 = t.right;
                stack = G__6572;
                t = G__6573;
                continue;
              } else {
                var G__6574 = stack;
                var G__6575 = t.left;
                stack = G__6574;
                t = G__6575;
                continue;
              }
            } else {
              return null;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__6576 = cljs.core.nnext.call(null, in$);
        var G__6577 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__6576;
        out = G__6577;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__6578) {
    var keyvals = cljs.core.seq(arglist__6578);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__6579) {
    var keyvals = cljs.core.seq(arglist__6579);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj6583 = {};
      return obj6583;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__6584 = cljs.core.nnext.call(null, kvs);
        kvs = G__6584;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject.call(null, ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__6585) {
    var keyvals = cljs.core.seq(arglist__6585);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__6586 = cljs.core.nnext.call(null, in$);
        var G__6587 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__6586;
        out = G__6587;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__6588) {
    var keyvals = cljs.core.seq(arglist__6588);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__6589 = cljs.core.nnext.call(null, in$);
        var G__6590 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__6589;
        out = G__6590;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__6591) {
    var comparator = cljs.core.first(arglist__6591);
    var keyvals = cljs.core.rest(arglist__6591);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/KeySeq");
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__6592 = self__.mseq;
    if (G__6592) {
      var bit__4131__auto__ = G__6592.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4131__auto__ || G__6592.cljs$core$INext$) {
        return true;
      } else {
        if (!G__6592.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6592);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6592);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__6593 = self__.mseq;
    if (G__6593) {
      var bit__4131__auto__ = G__6593.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4131__auto__ || G__6593.cljs$core$INext$) {
        return true;
      } else {
        if (!G__6593.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6593);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6593);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/ValSeq");
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__6594 = self__.mseq;
    if (G__6594) {
      var bit__4131__auto__ = G__6594.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4131__auto__ || G__6594.cljs$core$INext$) {
        return true;
      } else {
        if (!G__6594.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6594);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6594);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__6595 = self__.mseq;
    if (G__6595) {
      var bit__4131__auto__ = G__6595.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4131__auto__ || G__6595.cljs$core$INext$) {
        return true;
      } else {
        if (!G__6595.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6595);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6595);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__6596_SHARP_, p2__6597_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3481__auto__ = p1__6596_SHARP_;
          if (cljs.core.truth_(or__3481__auto__)) {
            return or__3481__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__6597_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__6598) {
    var maps = cljs.core.seq(arglist__6598);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3481__auto__ = m1;
            if (cljs.core.truth_(or__3481__auto__)) {
              return or__3481__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__6599) {
    var f = cljs.core.first(arglist__6599);
    var maps = cljs.core.rest(arglist__6599);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789));
      var G__6600 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__6601 = cljs.core.next.call(null, keys);
      ret = G__6600;
      keys = G__6601;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && (cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__6602_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__6602_SHARP_);
    };
  }(coll__$1), other));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__6604 = null;
  var G__6604__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__6604__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__6604 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6604__2.call(this, self__, k);
      case 3:
        return G__6604__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6604;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args6603) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6603)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__6605 = i + 1;
        var G__6606 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__6605;
        out = G__6606;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__6607 = i + 1;
        var G__6608 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__6607;
        out = G__6608;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/TransientHashSet");
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__6610 = null;
  var G__6610__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__6610__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__6610 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6610__2.call(this, self__, k);
      case 3:
        return G__6610__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6610;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args6609) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6609)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && (cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__6611_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__6611_SHARP_);
    };
  }(coll__$1), other));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__6613 = null;
  var G__6613__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__6613__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__6613 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6613__2.call(this, self__, k);
      case 3:
        return G__6613__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6613;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args6612) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6612)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4323__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4323__auto__.length) {
        var G__6614 = i + 1;
        var G__6615 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__6614;
        res = G__6615;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var in$__$1 = in$;
        var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
        while (true) {
          if (!(in$__$1 == null)) {
            var G__6616 = cljs.core._next.call(null, in$__$1);
            var G__6617 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
            in$__$1 = G__6616;
            out = G__6617;
            continue;
          } else {
            return cljs.core._persistent_BANG_.call(null, out);
          }
          break;
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__6618__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__6618 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__6618__delegate.call(this, keys);
    };
    G__6618.cljs$lang$maxFixedArity = 0;
    G__6618.cljs$lang$applyTo = function(arglist__6619) {
      var keys = cljs.core.seq(arglist__6619);
      return G__6618__delegate(keys);
    };
    G__6618.cljs$core$IFn$_invoke$arity$variadic = G__6618__delegate;
    return G__6618;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__6620) {
    var keys = cljs.core.seq(arglist__6620);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__6621) {
    var comparator = cljs.core.first(arglist__6621);
    var keys = cljs.core.rest(arglist__6621);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function replace(smap, coll) {
  if (cljs.core.vector_QMARK_.call(null, coll)) {
    var n = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(n) {
      return function(v, i) {
        var temp__4124__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
  } else {
    return cljs.core.map.call(null, function(p1__6622_SHARP_) {
      var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__6622_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.second.call(null, e);
      } else {
        return p1__6622_SHARP_;
      }
    }, coll);
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__6629, seen__$1) {
        while (true) {
          var vec__6630 = p__6629;
          var f = cljs.core.nth.call(null, vec__6630, 0, null);
          var xs__$1 = vec__6630;
          var temp__4126__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4126__auto__) {
            var s = temp__4126__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__6631 = cljs.core.rest.call(null, s);
              var G__6632 = seen__$1;
              p__6629 = G__6631;
              seen__$1 = G__6632;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__6633 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__6634 = cljs.core.next.call(null, s__$1);
      ret = G__6633;
      s__$1 = G__6634;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__6636 = x;
    if (G__6636) {
      var bit__4124__auto__ = G__6636.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4124__auto__ || G__6636.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__6637 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__6638 = cljs.core.next.call(null, ks);
      var G__6639 = cljs.core.next.call(null, vs);
      map = G__6637;
      ks = G__6638;
      vs = G__6639;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__6642__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__6640_SHARP_, p2__6641_SHARP_) {
        return max_key.call(null, k, p1__6640_SHARP_, p2__6641_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__6642 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6642__delegate.call(this, k, x, y, more);
    };
    G__6642.cljs$lang$maxFixedArity = 3;
    G__6642.cljs$lang$applyTo = function(arglist__6643) {
      var k = cljs.core.first(arglist__6643);
      arglist__6643 = cljs.core.next(arglist__6643);
      var x = cljs.core.first(arglist__6643);
      arglist__6643 = cljs.core.next(arglist__6643);
      var y = cljs.core.first(arglist__6643);
      var more = cljs.core.rest(arglist__6643);
      return G__6642__delegate(k, x, y, more);
    };
    G__6642.cljs$core$IFn$_invoke$arity$variadic = G__6642__delegate;
    return G__6642;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__6646__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__6644_SHARP_, p2__6645_SHARP_) {
        return min_key.call(null, k, p1__6644_SHARP_, p2__6645_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__6646 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6646__delegate.call(this, k, x, y, more);
    };
    G__6646.cljs$lang$maxFixedArity = 3;
    G__6646.cljs$lang$applyTo = function(arglist__6647) {
      var k = cljs.core.first(arglist__6647);
      arglist__6647 = cljs.core.next(arglist__6647);
      var x = cljs.core.first(arglist__6647);
      arglist__6647 = cljs.core.next(arglist__6647);
      var y = cljs.core.first(arglist__6647);
      var more = cljs.core.rest(arglist__6647);
      return G__6646__delegate(k, x, y, more);
    };
    G__6646.cljs$core$IFn$_invoke$arity$variadic = G__6646__delegate;
    return G__6646;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__6650 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__6650, 0, null);
        var s = vec__6650;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__6651 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__6651, 0, null);
      var s = vec__6651;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__6654 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__6654, 0, null);
        var s = vec__6654;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__6655 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__6655, 0, null);
      var s = vec__6655;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/Range");
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil((self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_coll.call(null, rng__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f, s);
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      var fst = cljs.core.first.call(null, s);
      var fv = f.call(null, fst);
      var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv, s, temp__4126__auto__) {
        return function(p1__6656_SHARP_) {
          return cljs.core._EQ_.call(null, fv, f.call(null, p1__6656_SHARP_));
        };
      }(fst, fv, s, temp__4126__auto__), cljs.core.next.call(null, s)));
      return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__6667 = null;
      var G__6667__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__6667__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__6667__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__6667__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__6667__4 = function() {
        var G__6668__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__6668 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6668__delegate.call(this, x, y, z, args);
        };
        G__6668.cljs$lang$maxFixedArity = 3;
        G__6668.cljs$lang$applyTo = function(arglist__6669) {
          var x = cljs.core.first(arglist__6669);
          arglist__6669 = cljs.core.next(arglist__6669);
          var y = cljs.core.first(arglist__6669);
          arglist__6669 = cljs.core.next(arglist__6669);
          var z = cljs.core.first(arglist__6669);
          var args = cljs.core.rest(arglist__6669);
          return G__6668__delegate(x, y, z, args);
        };
        G__6668.cljs$core$IFn$_invoke$arity$variadic = G__6668__delegate;
        return G__6668;
      }();
      G__6667 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__6667__0.call(this);
          case 1:
            return G__6667__1.call(this, x);
          case 2:
            return G__6667__2.call(this, x, y);
          case 3:
            return G__6667__3.call(this, x, y, z);
          default:
            return G__6667__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6667.cljs$lang$maxFixedArity = 3;
      G__6667.cljs$lang$applyTo = G__6667__4.cljs$lang$applyTo;
      return G__6667;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__6670 = null;
      var G__6670__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__6670__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__6670__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__6670__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__6670__4 = function() {
        var G__6671__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__6671 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6671__delegate.call(this, x, y, z, args);
        };
        G__6671.cljs$lang$maxFixedArity = 3;
        G__6671.cljs$lang$applyTo = function(arglist__6672) {
          var x = cljs.core.first(arglist__6672);
          arglist__6672 = cljs.core.next(arglist__6672);
          var y = cljs.core.first(arglist__6672);
          arglist__6672 = cljs.core.next(arglist__6672);
          var z = cljs.core.first(arglist__6672);
          var args = cljs.core.rest(arglist__6672);
          return G__6671__delegate(x, y, z, args);
        };
        G__6671.cljs$core$IFn$_invoke$arity$variadic = G__6671__delegate;
        return G__6671;
      }();
      G__6670 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__6670__0.call(this);
          case 1:
            return G__6670__1.call(this, x);
          case 2:
            return G__6670__2.call(this, x, y);
          case 3:
            return G__6670__3.call(this, x, y, z);
          default:
            return G__6670__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6670.cljs$lang$maxFixedArity = 3;
      G__6670.cljs$lang$applyTo = G__6670__4.cljs$lang$applyTo;
      return G__6670;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__6673 = null;
      var G__6673__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__6673__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__6673__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__6673__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__6673__4 = function() {
        var G__6674__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__6674 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6674__delegate.call(this, x, y, z, args);
        };
        G__6674.cljs$lang$maxFixedArity = 3;
        G__6674.cljs$lang$applyTo = function(arglist__6675) {
          var x = cljs.core.first(arglist__6675);
          arglist__6675 = cljs.core.next(arglist__6675);
          var y = cljs.core.first(arglist__6675);
          arglist__6675 = cljs.core.next(arglist__6675);
          var z = cljs.core.first(arglist__6675);
          var args = cljs.core.rest(arglist__6675);
          return G__6674__delegate(x, y, z, args);
        };
        G__6674.cljs$core$IFn$_invoke$arity$variadic = G__6674__delegate;
        return G__6674;
      }();
      G__6673 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__6673__0.call(this);
          case 1:
            return G__6673__1.call(this, x);
          case 2:
            return G__6673__2.call(this, x, y);
          case 3:
            return G__6673__3.call(this, x, y, z);
          default:
            return G__6673__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6673.cljs$lang$maxFixedArity = 3;
      G__6673.cljs$lang$applyTo = G__6673__4.cljs$lang$applyTo;
      return G__6673;
    }();
  };
  var juxt__4 = function() {
    var G__6676__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__6677 = null;
          var G__6677__0 = function() {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__6657_SHARP_, p2__6658_SHARP_) {
                return cljs.core.conj.call(null, p1__6657_SHARP_, p2__6658_SHARP_.call(null));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__6677__1 = function(x) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__6659_SHARP_, p2__6660_SHARP_) {
                return cljs.core.conj.call(null, p1__6659_SHARP_, p2__6660_SHARP_.call(null, x));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__6677__2 = function(x, y) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__6661_SHARP_, p2__6662_SHARP_) {
                return cljs.core.conj.call(null, p1__6661_SHARP_, p2__6662_SHARP_.call(null, x, y));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__6677__3 = function(x, y, z) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__6663_SHARP_, p2__6664_SHARP_) {
                return cljs.core.conj.call(null, p1__6663_SHARP_, p2__6664_SHARP_.call(null, x, y, z));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__6677__4 = function() {
            var G__6678__delegate = function(x, y, z, args) {
              return cljs.core.reduce.call(null, function(fs__$1) {
                return function(p1__6665_SHARP_, p2__6666_SHARP_) {
                  return cljs.core.conj.call(null, p1__6665_SHARP_, cljs.core.apply.call(null, p2__6666_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__6678 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__6678__delegate.call(this, x, y, z, args);
            };
            G__6678.cljs$lang$maxFixedArity = 3;
            G__6678.cljs$lang$applyTo = function(arglist__6679) {
              var x = cljs.core.first(arglist__6679);
              arglist__6679 = cljs.core.next(arglist__6679);
              var y = cljs.core.first(arglist__6679);
              arglist__6679 = cljs.core.next(arglist__6679);
              var z = cljs.core.first(arglist__6679);
              var args = cljs.core.rest(arglist__6679);
              return G__6678__delegate(x, y, z, args);
            };
            G__6678.cljs$core$IFn$_invoke$arity$variadic = G__6678__delegate;
            return G__6678;
          }();
          G__6677 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__6677__0.call(this);
              case 1:
                return G__6677__1.call(this, x);
              case 2:
                return G__6677__2.call(this, x, y);
              case 3:
                return G__6677__3.call(this, x, y, z);
              default:
                return G__6677__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__6677.cljs$lang$maxFixedArity = 3;
          G__6677.cljs$lang$applyTo = G__6677__4.cljs$lang$applyTo;
          return G__6677;
        }();
      }(fs__$1);
    };
    var G__6676 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6676__delegate.call(this, f, g, h, fs);
    };
    G__6676.cljs$lang$maxFixedArity = 3;
    G__6676.cljs$lang$applyTo = function(arglist__6680) {
      var f = cljs.core.first(arglist__6680);
      arglist__6680 = cljs.core.next(arglist__6680);
      var g = cljs.core.first(arglist__6680);
      arglist__6680 = cljs.core.next(arglist__6680);
      var h = cljs.core.first(arglist__6680);
      var fs = cljs.core.rest(arglist__6680);
      return G__6676__delegate(f, g, h, fs);
    };
    G__6676.cljs$core$IFn$_invoke$arity$variadic = G__6676__delegate;
    return G__6676;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__6681 = cljs.core.next.call(null, coll);
        coll = G__6681;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__6682 = n - 1;
        var G__6683 = cljs.core.next.call(null, coll);
        n = G__6682;
        coll = G__6683;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
    if (cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches);
    } else {
      return cljs.core.vec.call(null, matches);
    }
  } else {
    return null;
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if (matches == null) {
    return null;
  } else {
    if (cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches);
    } else {
      return cljs.core.vec.call(null, matches);
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__6685 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__6685, 0, null);
  var flags = cljs.core.nth.call(null, vec__6685, 1, null);
  var pattern = cljs.core.nth.call(null, vec__6685, 2, null);
  return new RegExp(pattern, flags);
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_6687 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_6688__$1 = cljs.core.next.call(null, coll);
      var n_6689 = (new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts);
      while (true) {
        if (coll_6688__$1 && (n_6689 == null || !(n_6689 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_6688__$1), writer, opts);
          var G__6690 = cljs.core.next.call(null, coll_6688__$1);
          var G__6691 = n_6689 - 1;
          coll_6688__$1 = G__6690;
          n_6689 = G__6691;
          continue;
        } else {
        }
        break;
      }
      if (cljs.core.truth_((new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts))) {
        cljs.core._write.call(null, writer, sep);
        print_one.call(null, "...", writer, opts);
      } else {
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_6687;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__6696 = cljs.core.seq.call(null, ss);
    var chunk__6697 = null;
    var count__6698 = 0;
    var i__6699 = 0;
    while (true) {
      if (i__6699 < count__6698) {
        var s = cljs.core._nth.call(null, chunk__6697, i__6699);
        cljs.core._write.call(null, writer, s);
        var G__6700 = seq__6696;
        var G__6701 = chunk__6697;
        var G__6702 = count__6698;
        var G__6703 = i__6699 + 1;
        seq__6696 = G__6700;
        chunk__6697 = G__6701;
        count__6698 = G__6702;
        i__6699 = G__6703;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__6696);
        if (temp__4126__auto__) {
          var seq__6696__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__6696__$1)) {
            var c__4229__auto__ = cljs.core.chunk_first.call(null, seq__6696__$1);
            var G__6704 = cljs.core.chunk_rest.call(null, seq__6696__$1);
            var G__6705 = c__4229__auto__;
            var G__6706 = cljs.core.count.call(null, c__4229__auto__);
            var G__6707 = 0;
            seq__6696 = G__6704;
            chunk__6697 = G__6705;
            count__6698 = G__6706;
            i__6699 = G__6707;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__6696__$1);
            cljs.core._write.call(null, writer, s);
            var G__6708 = cljs.core.next.call(null, seq__6696__$1);
            var G__6709 = null;
            var G__6710 = 0;
            var G__6711 = 0;
            seq__6696 = G__6708;
            chunk__6697 = G__6709;
            count__6698 = G__6710;
            i__6699 = G__6711;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__6712) {
    var writer = cljs.core.first(arglist__6712);
    var ss = cljs.core.rest(arglist__6712);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj6714 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj6714;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        if (cljs.core.truth_(function() {
          var and__3469__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
          if (cljs.core.truth_(and__3469__auto__)) {
            var and__3469__auto____$1 = function() {
              var G__6720 = obj;
              if (G__6720) {
                var bit__4131__auto__ = G__6720.cljs$lang$protocol_mask$partition0$ & 131072;
                if (bit__4131__auto__ || G__6720.cljs$core$IMeta$) {
                  return true;
                } else {
                  if (!G__6720.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__6720);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__6720);
              }
            }();
            if (and__3469__auto____$1) {
              return cljs.core.meta.call(null, obj);
            } else {
              return and__3469__auto____$1;
            }
          } else {
            return and__3469__auto__;
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ");
        } else {
        }
        if (obj == null) {
          return cljs.core._write.call(null, writer, "nil");
        } else {
          if (obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
          } else {
            if (function() {
              var G__6721 = obj;
              if (G__6721) {
                var bit__4124__auto__ = G__6721.cljs$lang$protocol_mask$partition0$ & 2147483648;
                if (bit__4124__auto__ || G__6721.cljs$core$IPrintWithWriter$) {
                  return true;
                } else {
                  return false;
                }
              } else {
                return false;
              }
            }()) {
              return cljs.core._pr_writer.call(null, obj, writer, opts);
            } else {
              if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
                return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""));
              } else {
                if (cljs.core.object_QMARK_.call(null, obj)) {
                  cljs.core._write.call(null, writer, "#js ");
                  return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                  }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
                } else {
                  if (obj instanceof Array) {
                    return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                  } else {
                    if (goog.isString(obj)) {
                      if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 4441712502)).cljs$core$IFn$_invoke$arity$1(opts))) {
                        return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                      } else {
                        return cljs.core._write.call(null, writer, obj);
                      }
                    } else {
                      if (cljs.core.fn_QMARK_.call(null, obj)) {
                        return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                      } else {
                        if (obj instanceof Date) {
                          var normalize = function(n, len) {
                            var ns = [cljs.core.str(n)].join("");
                            while (true) {
                              if (cljs.core.count.call(null, ns) < len) {
                                var G__6723 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                                ns = G__6723;
                                continue;
                              } else {
                                return ns;
                              }
                              break;
                            }
                          };
                          return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                        } else {
                          if (cljs.core.regexp_QMARK_.call(null, obj)) {
                            return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                          } else {
                            if (function() {
                              var G__6722 = obj;
                              if (G__6722) {
                                var bit__4131__auto__ = G__6722.cljs$lang$protocol_mask$partition0$ & 2147483648;
                                if (bit__4131__auto__ || G__6722.cljs$core$IPrintWithWriter$) {
                                  return true;
                                } else {
                                  if (!G__6722.cljs$lang$protocol_mask$partition0$) {
                                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__6722);
                                  } else {
                                    return false;
                                  }
                                }
                              } else {
                                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__6722);
                              }
                            }()) {
                              return cljs.core._pr_writer.call(null, obj, writer, opts);
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__6728 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__6729 = null;
  var count__6730 = 0;
  var i__6731 = 0;
  while (true) {
    if (i__6731 < count__6730) {
      var obj = cljs.core._nth.call(null, chunk__6729, i__6731);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__6732 = seq__6728;
      var G__6733 = chunk__6729;
      var G__6734 = count__6730;
      var G__6735 = i__6731 + 1;
      seq__6728 = G__6732;
      chunk__6729 = G__6733;
      count__6730 = G__6734;
      i__6731 = G__6735;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__6728);
      if (temp__4126__auto__) {
        var seq__6728__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6728__$1)) {
          var c__4229__auto__ = cljs.core.chunk_first.call(null, seq__6728__$1);
          var G__6736 = cljs.core.chunk_rest.call(null, seq__6728__$1);
          var G__6737 = c__4229__auto__;
          var G__6738 = cljs.core.count.call(null, c__4229__auto__);
          var G__6739 = 0;
          seq__6728 = G__6736;
          chunk__6729 = G__6737;
          count__6730 = G__6738;
          i__6731 = G__6739;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__6728__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__6740 = cljs.core.next.call(null, seq__6728__$1);
          var G__6741 = null;
          var G__6742 = 0;
          var G__6743 = 0;
          seq__6728 = G__6740;
          chunk__6729 = G__6741;
          count__6730 = G__6742;
          i__6731 = G__6743;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__6744) {
    var objs = cljs.core.seq(arglist__6744);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__6745) {
    var objs = cljs.core.seq(arglist__6745);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__6746) {
    var objs = cljs.core.seq(arglist__6746);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__6747) {
    var objs = cljs.core.seq(arglist__6747);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__6748) {
    var objs = cljs.core.seq(arglist__6748);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__6749) {
    var objs = cljs.core.seq(arglist__6749);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__6750) {
    var objs = cljs.core.seq(arglist__6750);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__6751) {
    var objs = cljs.core.seq(arglist__6751);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.IAtom = function() {
  var obj6753 = {};
  return obj6753;
}();
cljs.core.IReset = function() {
  var obj6755 = {};
  return obj6755;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3469__auto__ = o;
    if (and__3469__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4108__auto__ = o == null ? null : o;
    return function() {
      var or__3481__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj6757 = {};
  return obj6757;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3469__auto__ = o;
      if (and__3469__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4108__auto__ = o == null ? null : o;
      return function() {
        var or__3481__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3469__auto__ = o;
      if (and__3469__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4108__auto__ = o == null ? null : o;
      return function() {
        var or__3481__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3469__auto__ = o;
      if (and__3469__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4108__auto__ = o == null ? null : o;
      return function() {
        var or__3481__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3469__auto__ = o;
      if (and__3469__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4108__auto__ = o == null ? null : o;
      return function() {
        var or__3481__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/Atom");
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__6758 = cljs.core.seq.call(null, self__.watches);
  var chunk__6759 = null;
  var count__6760 = 0;
  var i__6761 = 0;
  while (true) {
    if (i__6761 < count__6760) {
      var vec__6762 = cljs.core._nth.call(null, chunk__6759, i__6761);
      var key = cljs.core.nth.call(null, vec__6762, 0, null);
      var f = cljs.core.nth.call(null, vec__6762, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__6764 = seq__6758;
      var G__6765 = chunk__6759;
      var G__6766 = count__6760;
      var G__6767 = i__6761 + 1;
      seq__6758 = G__6764;
      chunk__6759 = G__6765;
      count__6760 = G__6766;
      i__6761 = G__6767;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__6758);
      if (temp__4126__auto__) {
        var seq__6758__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6758__$1)) {
          var c__4229__auto__ = cljs.core.chunk_first.call(null, seq__6758__$1);
          var G__6768 = cljs.core.chunk_rest.call(null, seq__6758__$1);
          var G__6769 = c__4229__auto__;
          var G__6770 = cljs.core.count.call(null, c__4229__auto__);
          var G__6771 = 0;
          seq__6758 = G__6768;
          chunk__6759 = G__6769;
          count__6760 = G__6770;
          i__6761 = G__6771;
          continue;
        } else {
          var vec__6763 = cljs.core.first.call(null, seq__6758__$1);
          var key = cljs.core.nth.call(null, vec__6763, 0, null);
          var f = cljs.core.nth.call(null, vec__6763, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__6772 = cljs.core.next.call(null, seq__6758__$1);
          var G__6773 = null;
          var G__6774 = 0;
          var G__6775 = 0;
          seq__6758 = G__6772;
          chunk__6759 = G__6773;
          count__6760 = G__6774;
          i__6761 = G__6775;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__6779__delegate = function(x, p__6776) {
      var map__6778 = p__6776;
      var map__6778__$1 = cljs.core.seq_QMARK_.call(null, map__6778) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6778) : map__6778;
      var validator = cljs.core.get.call(null, map__6778__$1, new cljs.core.Keyword(null, "validator", "validator", 4199087812));
      var meta = cljs.core.get.call(null, map__6778__$1, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__6779 = function(x, var_args) {
      var p__6776 = null;
      if (arguments.length > 1) {
        p__6776 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__6779__delegate.call(this, x, p__6776);
    };
    G__6779.cljs$lang$maxFixedArity = 1;
    G__6779.cljs$lang$applyTo = function(arglist__6780) {
      var x = cljs.core.first(arglist__6780);
      var p__6776 = cljs.core.rest(arglist__6780);
      return G__6779__delegate(x, p__6776);
    };
    G__6779.cljs$core$IFn$_invoke$arity$variadic = G__6779__delegate;
    return G__6779;
  }();
  atom = function(x, var_args) {
    var p__6776 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.call(null, new_value))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1233162959, null), new cljs.core.Symbol(null, "new-value", "new-value", 972165309, null))))].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches.call(null, a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_.call(null, a, new_value);
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__6781__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.call(null, a, f, x, y, more);
      }
    };
    var G__6781 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__6781__delegate.call(this, a, f, x, y, more);
    };
    G__6781.cljs$lang$maxFixedArity = 4;
    G__6781.cljs$lang$applyTo = function(arglist__6782) {
      var a = cljs.core.first(arglist__6782);
      arglist__6782 = cljs.core.next(arglist__6782);
      var f = cljs.core.first(arglist__6782);
      arglist__6782 = cljs.core.next(arglist__6782);
      var x = cljs.core.first(arglist__6782);
      arglist__6782 = cljs.core.next(arglist__6782);
      var y = cljs.core.first(arglist__6782);
      var more = cljs.core.rest(arglist__6782);
      return G__6781__delegate(a, f, x, y, more);
    };
    G__6781.cljs$core$IFn$_invoke$arity$variadic = G__6781__delegate;
    return G__6781;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__6783) {
    var iref = cljs.core.first(arglist__6783);
    arglist__6783 = cljs.core.next(arglist__6783);
    var f = cljs.core.first(arglist__6783);
    var args = cljs.core.rest(arglist__6783);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/Delay");
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return(new cljs.core.Keyword(null, "done", "done", 1016993524)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state));
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return(new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, self__.state, function(___$1) {
    return function(p__6784) {
      var map__6785 = p__6784;
      var map__6785__$1 = cljs.core.seq_QMARK_.call(null, map__6785) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6785) : map__6785;
      var curr_state = map__6785__$1;
      var done = cljs.core.get.call(null, map__6785__$1, new cljs.core.Keyword(null, "done", "done", 1016993524));
      if (cljs.core.truth_(done)) {
        return curr_state;
      } else {
        return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "done", "done", 1016993524), true, new cljs.core.Keyword(null, "value", "value", 1125876963), self__.f.call(null)], null);
      }
    };
  }(___$1)));
};
cljs.core.__GT_Delay = function __GT_Delay(state, f) {
  return new cljs.core.Delay(state, f);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.IEncodeJS = function() {
  var obj6787 = {};
  return obj6787;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3469__auto__ = x;
    if (and__3469__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4108__auto__ = x == null ? null : x;
    return function() {
      var or__3481__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3469__auto__ = x;
    if (and__3469__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4108__auto__ = x == null ? null : x;
    return function() {
      var or__3481__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__6789 = k;
    if (G__6789) {
      var bit__4131__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3481__auto__ = bit__4131__auto__;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return G__6789.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__6789.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__6789);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__6789);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || (typeof k === "number" || (k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol))) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__6803 = x;
      if (G__6803) {
        var bit__4131__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3481__auto__ = bit__4131__auto__;
          if (cljs.core.truth_(or__3481__auto__)) {
            return or__3481__auto__;
          } else {
            return G__6803.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__6803.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__6803);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__6803);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj6805 = {};
              return obj6805;
            }();
            var seq__6806_6816 = cljs.core.seq.call(null, x);
            var chunk__6807_6817 = null;
            var count__6808_6818 = 0;
            var i__6809_6819 = 0;
            while (true) {
              if (i__6809_6819 < count__6808_6818) {
                var vec__6810_6820 = cljs.core._nth.call(null, chunk__6807_6817, i__6809_6819);
                var k_6821 = cljs.core.nth.call(null, vec__6810_6820, 0, null);
                var v_6822 = cljs.core.nth.call(null, vec__6810_6820, 1, null);
                m[cljs.core.key__GT_js.call(null, k_6821)] = clj__GT_js.call(null, v_6822);
                var G__6823 = seq__6806_6816;
                var G__6824 = chunk__6807_6817;
                var G__6825 = count__6808_6818;
                var G__6826 = i__6809_6819 + 1;
                seq__6806_6816 = G__6823;
                chunk__6807_6817 = G__6824;
                count__6808_6818 = G__6825;
                i__6809_6819 = G__6826;
                continue;
              } else {
                var temp__4126__auto___6827 = cljs.core.seq.call(null, seq__6806_6816);
                if (temp__4126__auto___6827) {
                  var seq__6806_6828__$1 = temp__4126__auto___6827;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__6806_6828__$1)) {
                    var c__4229__auto___6829 = cljs.core.chunk_first.call(null, seq__6806_6828__$1);
                    var G__6830 = cljs.core.chunk_rest.call(null, seq__6806_6828__$1);
                    var G__6831 = c__4229__auto___6829;
                    var G__6832 = cljs.core.count.call(null, c__4229__auto___6829);
                    var G__6833 = 0;
                    seq__6806_6816 = G__6830;
                    chunk__6807_6817 = G__6831;
                    count__6808_6818 = G__6832;
                    i__6809_6819 = G__6833;
                    continue;
                  } else {
                    var vec__6811_6834 = cljs.core.first.call(null, seq__6806_6828__$1);
                    var k_6835 = cljs.core.nth.call(null, vec__6811_6834, 0, null);
                    var v_6836 = cljs.core.nth.call(null, vec__6811_6834, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_6835)] = clj__GT_js.call(null, v_6836);
                    var G__6837 = cljs.core.next.call(null, seq__6806_6828__$1);
                    var G__6838 = null;
                    var G__6839 = 0;
                    var G__6840 = 0;
                    seq__6806_6816 = G__6837;
                    chunk__6807_6817 = G__6838;
                    count__6808_6818 = G__6839;
                    i__6809_6819 = G__6840;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__6812_6841 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__6813_6842 = null;
              var count__6814_6843 = 0;
              var i__6815_6844 = 0;
              while (true) {
                if (i__6815_6844 < count__6814_6843) {
                  var x_6845__$1 = cljs.core._nth.call(null, chunk__6813_6842, i__6815_6844);
                  arr.push(x_6845__$1);
                  var G__6846 = seq__6812_6841;
                  var G__6847 = chunk__6813_6842;
                  var G__6848 = count__6814_6843;
                  var G__6849 = i__6815_6844 + 1;
                  seq__6812_6841 = G__6846;
                  chunk__6813_6842 = G__6847;
                  count__6814_6843 = G__6848;
                  i__6815_6844 = G__6849;
                  continue;
                } else {
                  var temp__4126__auto___6850 = cljs.core.seq.call(null, seq__6812_6841);
                  if (temp__4126__auto___6850) {
                    var seq__6812_6851__$1 = temp__4126__auto___6850;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__6812_6851__$1)) {
                      var c__4229__auto___6852 = cljs.core.chunk_first.call(null, seq__6812_6851__$1);
                      var G__6853 = cljs.core.chunk_rest.call(null, seq__6812_6851__$1);
                      var G__6854 = c__4229__auto___6852;
                      var G__6855 = cljs.core.count.call(null, c__4229__auto___6852);
                      var G__6856 = 0;
                      seq__6812_6841 = G__6853;
                      chunk__6813_6842 = G__6854;
                      count__6814_6843 = G__6855;
                      i__6815_6844 = G__6856;
                      continue;
                    } else {
                      var x_6857__$1 = cljs.core.first.call(null, seq__6812_6851__$1);
                      arr.push(x_6857__$1);
                      var G__6858 = cljs.core.next.call(null, seq__6812_6851__$1);
                      var G__6859 = null;
                      var G__6860 = 0;
                      var G__6861 = 0;
                      seq__6812_6841 = G__6858;
                      chunk__6813_6842 = G__6859;
                      count__6814_6843 = G__6860;
                      i__6815_6844 = G__6861;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return x;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj6863 = {};
  return obj6863;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3469__auto__ = x;
    if (and__3469__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4108__auto__ = x == null ? null : x;
    return function() {
      var or__3481__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__6884__delegate = function(x, opts) {
      if (function() {
        var G__6874 = x;
        if (G__6874) {
          var bit__4131__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3481__auto__ = bit__4131__auto__;
            if (cljs.core.truth_(or__3481__auto__)) {
              return or__3481__auto__;
            } else {
              return G__6874.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__6874.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__6874);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__6874);
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq.call(null, opts)) {
          var map__6875 = opts;
          var map__6875__$1 = cljs.core.seq_QMARK_.call(null, map__6875) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6875) : map__6875;
          var keywordize_keys = cljs.core.get.call(null, map__6875__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__6875, map__6875__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if (cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                  } else {
                    if (cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4198__auto__ = function(map__6875, map__6875__$1, keywordize_keys, keyfn) {
                          return function iter__6880(s__6881) {
                            return new cljs.core.LazySeq(null, function(map__6875, map__6875__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__6881__$1 = s__6881;
                                while (true) {
                                  var temp__4126__auto__ = cljs.core.seq.call(null, s__6881__$1);
                                  if (temp__4126__auto__) {
                                    var s__6881__$2 = temp__4126__auto__;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__6881__$2)) {
                                      var c__4196__auto__ = cljs.core.chunk_first.call(null, s__6881__$2);
                                      var size__4197__auto__ = cljs.core.count.call(null, c__4196__auto__);
                                      var b__6883 = cljs.core.chunk_buffer.call(null, size__4197__auto__);
                                      if (function() {
                                        var i__6882 = 0;
                                        while (true) {
                                          if (i__6882 < size__4197__auto__) {
                                            var k = cljs.core._nth.call(null, c__4196__auto__, i__6882);
                                            cljs.core.chunk_append.call(null, b__6883, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                            var G__6885 = i__6882 + 1;
                                            i__6882 = G__6885;
                                            continue;
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__6883), iter__6880.call(null, cljs.core.chunk_rest.call(null, s__6881__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__6883), null);
                                      }
                                    } else {
                                      var k = cljs.core.first.call(null, s__6881__$2);
                                      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__6880.call(null, cljs.core.rest.call(null, s__6881__$2)));
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(map__6875, map__6875__$1, keywordize_keys, keyfn), null, null);
                          };
                        }(map__6875, map__6875__$1, keywordize_keys, keyfn);
                        return iter__4198__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                      }());
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        return x__$1;
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            };
          }(map__6875, map__6875__$1, keywordize_keys, keyfn);
          return f.call(null, x);
        } else {
          return null;
        }
      }
    };
    var G__6884 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__6884__delegate.call(this, x, opts);
    };
    G__6884.cljs$lang$maxFixedArity = 1;
    G__6884.cljs$lang$applyTo = function(arglist__6886) {
      var x = cljs.core.first(arglist__6886);
      var opts = cljs.core.rest(arglist__6886);
      return G__6884__delegate(x, opts);
    };
    G__6884.cljs$core$IFn$_invoke$arity$variadic = G__6884__delegate;
    return G__6884;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function() {
      var G__6887__delegate = function(args) {
        var temp__4124__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var v = temp__4124__auto__;
          return v;
        } else {
          var ret = cljs.core.apply.call(null, f, args);
          cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
          return ret;
        }
      };
      var G__6887 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__6887__delegate.call(this, args);
      };
      G__6887.cljs$lang$maxFixedArity = 0;
      G__6887.cljs$lang$applyTo = function(arglist__6888) {
        var args = cljs.core.seq(arglist__6888);
        return G__6887__delegate(args);
      };
      G__6887.cljs$core$IFn$_invoke$arity$variadic = G__6887__delegate;
      return G__6887;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__6889 = ret;
        f = G__6889;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__6890__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__6890 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__6890__delegate.call(this, f, args);
    };
    G__6890.cljs$lang$maxFixedArity = 1;
    G__6890.cljs$lang$applyTo = function(arglist__6891) {
      var f = cljs.core.first(arglist__6891);
      var args = cljs.core.rest(arglist__6891);
      return G__6890__delegate(f, args);
    };
    G__6890.cljs$core$IFn$_invoke$arity$variadic = G__6890__delegate;
    return G__6890;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, coll);
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 768214664), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__6892) {
    var f = cljs.core.first(arglist__6892);
    var args = cljs.core.rest(arglist__6892);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3481__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__3481__auto__) {
      return or__3481__auto__;
    } else {
      var or__3481__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3481__auto____$1) {
        return or__3481__auto____$1;
      } else {
        var and__3469__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__3469__auto__) {
          var and__3469__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__3469__auto____$1) {
            var and__3469__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__3469__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__6893 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__6894 = i + 1;
                  ret = G__6893;
                  i = G__6894;
                  continue;
                }
                break;
              }
            } else {
              return and__3469__auto____$2;
            }
          } else {
            return and__3469__auto____$1;
          }
        } else {
          return and__3469__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", -388313324, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.call(null, tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", -1637144189, null), new cljs.core.Symbol(null, "tag", "tag", -1640416941, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3481__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 768214664), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3481__auto__)) {
      return or__3481__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__6895_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__6895_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__6895_SHARP_), cljs.core.second.call(null, p1__6895_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__6896_SHARP_, p2__6897_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.derive, p1__6896_SHARP_, p2__6897_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3481__auto__ = cljs.core.truth_(function() {
    var and__3469__auto__ = xprefs;
    if (cljs.core.truth_(and__3469__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__3469__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3481__auto__)) {
    return or__3481__auto__;
  } else {
    var or__3481__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__6898 = cljs.core.rest.call(null, ps);
          ps = G__6898;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3481__auto____$1)) {
      return or__3481__auto____$1;
    } else {
      var or__3481__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__6899 = cljs.core.rest.call(null, ps);
            ps = G__6899;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3481__auto____$2)) {
        return or__3481__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3481__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__3481__auto__)) {
    return or__3481__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__6902) {
    var vec__6903 = p__6902;
    var k = cljs.core.nth.call(null, vec__6903, 0, null);
    var _ = cljs.core.nth.call(null, vec__6903, 1, null);
    var e = vec__6903;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3481__auto__ = be == null;
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj6905 = {};
  return obj6905;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3469__auto__ = mf;
    if (and__3469__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4108__auto__ = mf == null ? null : mf;
    return function() {
      var or__3481__auto__ = cljs.core._reset[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._reset["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3469__auto__ = mf;
    if (and__3469__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4108__auto__ = mf == null ? null : mf;
    return function() {
      var or__3481__auto__ = cljs.core._add_method[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._add_method["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3469__auto__ = mf;
    if (and__3469__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4108__auto__ = mf == null ? null : mf;
    return function() {
      var or__3481__auto__ = cljs.core._remove_method[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._remove_method["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3469__auto__ = mf;
    if (and__3469__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4108__auto__ = mf == null ? null : mf;
    return function() {
      var or__3481__auto__ = cljs.core._prefer_method[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3469__auto__ = mf;
    if (and__3469__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4108__auto__ = mf == null ? null : mf;
    return function() {
      var or__3481__auto__ = cljs.core._get_method[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._get_method["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3469__auto__ = mf;
    if (and__3469__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4108__auto__ = mf == null ? null : mf;
    return function() {
      var or__3481__auto__ = cljs.core._methods[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._methods["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3469__auto__ = mf;
    if (and__3469__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4108__auto__ = mf == null ? null : mf;
    return function() {
      var or__3481__auto__ = cljs.core._prefers[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._prefers["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if (function() {
    var and__3469__auto__ = mf;
    if (and__3469__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args);
  } else {
    var x__4108__auto__ = mf == null ? null : mf;
    return function() {
      var or__3481__auto__ = cljs.core._dispatch[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._dispatch["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args);
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, name, dispatch_fn, args) {
  var dispatch_val = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
  }
  return cljs.core.apply.call(null, target_fn, args);
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 256;
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/MultiFn");
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.do_dispatch.call(null, mf__$1, self__.name, self__.dispatch_fn, args);
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__6906__delegate = function(_, args) {
    var self = this;
    return cljs.core._dispatch.call(null, self, args);
  };
  var G__6906 = function(_, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return G__6906__delegate.call(this, _, args);
  };
  G__6906.cljs$lang$maxFixedArity = 1;
  G__6906.cljs$lang$applyTo = function(arglist__6907) {
    var _ = cljs.core.first(arglist__6907);
    var args = cljs.core.rest(arglist__6907);
    return G__6906__delegate(_, args);
  };
  G__6906.cljs$core$IFn$_invoke$arity$variadic = G__6906__delegate;
  return G__6906;
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self = this;
  return cljs.core._dispatch.call(null, self, args);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/UUID");
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4051__auto__, writer__4052__auto__, opts__4053__auto__) {
  return cljs.core._write.call(null, writer__4052__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return 0;
        } else {
          return null;
        }
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -1640531489, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", 774272013, null), null, new cljs.core.Symbol(null, "try", "try", -1640416396, null), null, new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), null, new cljs.core.Symbol(null, "do", "do", -1640528316, null), null, new cljs.core.Symbol(null, 
  "letfn*", "letfn*", 1548249632, null), null, new cljs.core.Symbol(null, "if", "if", -1640528170, null), null, new cljs.core.Symbol(null, "new", "new", -1640422567, null), null, new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), null, new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), null, new cljs.core.Symbol(null, "js*", "js*", -1640426054, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, 
  null), null, new cljs.core.Symbol(null, "recur", "recur", -1532142362, null), null, new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), null, new cljs.core.Symbol(null, ".", ".", -1640531481, null), null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), null, new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), null, new cljs.core.Symbol(null, "def", "def", -1640432194, null), null], null), null), x);
};
goog.provide("wishare.wishlist");
goog.require("cljs.core");
goog.provide("quiescent");
goog.require("cljs.core");
quiescent.js_props = function js_props(obj) {
  if (cljs.core.map_QMARK_.call(null, obj)) {
    var o = function() {
      var obj10487 = {};
      return obj10487;
    }();
    var seq__10488_10494 = cljs.core.seq.call(null, obj);
    var chunk__10489_10495 = null;
    var count__10490_10496 = 0;
    var i__10491_10497 = 0;
    while (true) {
      if (i__10491_10497 < count__10490_10496) {
        var vec__10492_10498 = cljs.core._nth.call(null, chunk__10489_10495, i__10491_10497);
        var k_10499 = cljs.core.nth.call(null, vec__10492_10498, 0, null);
        var v_10500 = cljs.core.nth.call(null, vec__10492_10498, 1, null);
        o[cljs.core.name.call(null, k_10499)] = js_props.call(null, v_10500);
        var G__10501 = seq__10488_10494;
        var G__10502 = chunk__10489_10495;
        var G__10503 = count__10490_10496;
        var G__10504 = i__10491_10497 + 1;
        seq__10488_10494 = G__10501;
        chunk__10489_10495 = G__10502;
        count__10490_10496 = G__10503;
        i__10491_10497 = G__10504;
        continue;
      } else {
        var temp__4126__auto___10505 = cljs.core.seq.call(null, seq__10488_10494);
        if (temp__4126__auto___10505) {
          var seq__10488_10506__$1 = temp__4126__auto___10505;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__10488_10506__$1)) {
            var c__4229__auto___10507 = cljs.core.chunk_first.call(null, seq__10488_10506__$1);
            var G__10508 = cljs.core.chunk_rest.call(null, seq__10488_10506__$1);
            var G__10509 = c__4229__auto___10507;
            var G__10510 = cljs.core.count.call(null, c__4229__auto___10507);
            var G__10511 = 0;
            seq__10488_10494 = G__10508;
            chunk__10489_10495 = G__10509;
            count__10490_10496 = G__10510;
            i__10491_10497 = G__10511;
            continue;
          } else {
            var vec__10493_10512 = cljs.core.first.call(null, seq__10488_10506__$1);
            var k_10513 = cljs.core.nth.call(null, vec__10493_10512, 0, null);
            var v_10514 = cljs.core.nth.call(null, vec__10493_10512, 1, null);
            o[cljs.core.name.call(null, k_10513)] = js_props.call(null, v_10514);
            var G__10515 = cljs.core.next.call(null, seq__10488_10506__$1);
            var G__10516 = null;
            var G__10517 = 0;
            var G__10518 = 0;
            seq__10488_10494 = G__10515;
            chunk__10489_10495 = G__10516;
            count__10490_10496 = G__10517;
            i__10491_10497 = G__10518;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return o;
  } else {
    return obj;
  }
};
quiescent._STAR_component_STAR_ = null;
quiescent.component = function component(renderer) {
  var react_component = React.createClass({"render":function() {
    var this$ = this;
    var _STAR_component_STAR_10520 = quiescent._STAR_component_STAR_;
    try {
      quiescent._STAR_component_STAR_ = this$;
      return cljs.core.apply.call(null, renderer, this$.props["value"], this$.props["statics"]);
    } finally {
      quiescent._STAR_component_STAR_ = _STAR_component_STAR_10520;
    }
  }, "shouldComponentUpdate":function(next_props, _) {
    var this$ = this;
    return cljs.core.not_EQ_.call(null, this$.props["value"], next_props["value"]);
  }});
  return function(react_component) {
    return function() {
      var G__10521__delegate = function(value, static_args) {
        return react_component.call(null, {"statics":static_args, "value":value});
      };
      var G__10521 = function(value, var_args) {
        var static_args = null;
        if (arguments.length > 1) {
          static_args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
        }
        return G__10521__delegate.call(this, value, static_args);
      };
      G__10521.cljs$lang$maxFixedArity = 1;
      G__10521.cljs$lang$applyTo = function(arglist__10522) {
        var value = cljs.core.first(arglist__10522);
        var static_args = cljs.core.rest(arglist__10522);
        return G__10521__delegate(value, static_args);
      };
      G__10521.cljs$core$IFn$_invoke$arity$variadic = G__10521__delegate;
      return G__10521;
    }();
  }(react_component);
};
quiescent.WrapperComponent = React.createClass({"componentWillUnmount":function() {
  var this$ = this;
  var temp__4126__auto__ = this$.props["onWillUnmount"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    var _STAR_component_STAR_10527 = quiescent._STAR_component_STAR_;
    try {
      quiescent._STAR_component_STAR_ = this$;
      return f.call(null);
    } finally {
      quiescent._STAR_component_STAR_ = _STAR_component_STAR_10527;
    }
  } else {
    return null;
  }
}, "componentWillUpdate":function(_, ___$1) {
  var this$ = this;
  var temp__4126__auto__ = this$.props["onWillUpdate"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    var _STAR_component_STAR_10526 = quiescent._STAR_component_STAR_;
    try {
      quiescent._STAR_component_STAR_ = this$;
      return f.call(null);
    } finally {
      quiescent._STAR_component_STAR_ = _STAR_component_STAR_10526;
    }
  } else {
    return null;
  }
}, "componentWillMount":function() {
  var this$ = this;
  var temp__4126__auto__ = this$.props["onWillMount"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    var _STAR_component_STAR_10525 = quiescent._STAR_component_STAR_;
    try {
      quiescent._STAR_component_STAR_ = this$;
      return f.call(null);
    } finally {
      quiescent._STAR_component_STAR_ = _STAR_component_STAR_10525;
    }
  } else {
    return null;
  }
}, "componentDidMount":function() {
  var this$ = this;
  var temp__4126__auto__ = this$.props["onMount"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    var _STAR_component_STAR_10524 = quiescent._STAR_component_STAR_;
    try {
      quiescent._STAR_component_STAR_ = this$;
      return f.call(null, this$.getDOMNode());
    } finally {
      quiescent._STAR_component_STAR_ = _STAR_component_STAR_10524;
    }
  } else {
    return null;
  }
}, "componentDidUpdate":function(prev_props, prev_state) {
  var this$ = this;
  var temp__4126__auto__ = this$.props["onUpdate"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    var _STAR_component_STAR_10523 = quiescent._STAR_component_STAR_;
    try {
      quiescent._STAR_component_STAR_ = this$;
      return f.call(null, this$.getDOMNode());
    } finally {
      quiescent._STAR_component_STAR_ = _STAR_component_STAR_10523;
    }
  } else {
    return null;
  }
}, "render":function() {
  var this$ = this;
  return this$.props["wrappee"];
}});
quiescent.wrapper = function() {
  var wrapper__delegate = function(child, kvs) {
    var props = quiescent.js_props.call(null, cljs.core.apply.call(null, cljs.core.array_map, new cljs.core.Keyword(null, "wrappee", "wrappee", 2609412088), child, kvs));
    var temp__4126__auto___10528 = child.props["key"];
    if (cljs.core.truth_(temp__4126__auto___10528)) {
      var key_10529 = temp__4126__auto___10528;
      props["key"] = key_10529;
    } else {
    }
    return quiescent.WrapperComponent.call(null, props);
  };
  var wrapper = function(child, var_args) {
    var kvs = null;
    if (arguments.length > 1) {
      kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return wrapper__delegate.call(this, child, kvs);
  };
  wrapper.cljs$lang$maxFixedArity = 1;
  wrapper.cljs$lang$applyTo = function(arglist__10530) {
    var child = cljs.core.first(arglist__10530);
    var kvs = cljs.core.rest(arglist__10530);
    return wrapper__delegate(child, kvs);
  };
  wrapper.cljs$core$IFn$_invoke$arity$variadic = wrapper__delegate;
  return wrapper;
}();
quiescent.on_update = function on_update(child, f) {
  return quiescent.wrapper.call(null, child, new cljs.core.Keyword(null, "onUpdate", "onUpdate", 2573468410), f);
};
quiescent.on_mount = function on_mount(child, f) {
  return quiescent.wrapper.call(null, child, new cljs.core.Keyword(null, "onMount", "onMount", 3966305516), f);
};
quiescent.on_render = function on_render(child, f) {
  return quiescent.wrapper.call(null, child, new cljs.core.Keyword(null, "onMount", "onMount", 3966305516), f, new cljs.core.Keyword(null, "onUpdate", "onUpdate", 2573468410), f);
};
quiescent.on_will_mount = function on_will_mount(child, f) {
  return quiescent.wrapper.call(null, child, new cljs.core.Keyword(null, "onWillMount", "onWillMount", 3483492282), f);
};
quiescent.on_will_update = function on_will_update(child, f) {
  return quiescent.wrapper.call(null, child, new cljs.core.Keyword(null, "onWillUpdate", "onWillUpdate", 4786127340), f);
};
quiescent.on_will_render = function on_will_render(child, f) {
  return quiescent.wrapper.call(null, child, new cljs.core.Keyword(null, "onWillMount", "onWillMount", 3483492282), f, new cljs.core.Keyword(null, "onWillUpdate", "onWillUpdate", 4786127340), f);
};
quiescent.on_will_unmount = function on_will_unmount(child, f) {
  return quiescent.wrapper.call(null, child, new cljs.core.Keyword(null, "onWillUnmount", "onWillUnmount", 1940175105), f);
};
quiescent.render = function render(component, node) {
  return React.renderComponent(component, node);
};
goog.provide("quiescent.dom");
goog.require("cljs.core");
goog.require("quiescent");
goog.require("quiescent");
quiescent.dom.a = function() {
  var a__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__6912_7860 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__6913_7861 = null;
    var count__6914_7862 = 0;
    var i__6915_7863 = 0;
    while (true) {
      if (i__6915_7863 < count__6914_7862) {
        var arg__4902__auto___7864 = cljs.core._nth.call(null, chunk__6913_7861, i__6915_7863);
        a__4901__auto__.push(arg__4902__auto___7864);
        var G__7865 = seq__6912_7860;
        var G__7866 = chunk__6913_7861;
        var G__7867 = count__6914_7862;
        var G__7868 = i__6915_7863 + 1;
        seq__6912_7860 = G__7865;
        chunk__6913_7861 = G__7866;
        count__6914_7862 = G__7867;
        i__6915_7863 = G__7868;
        continue;
      } else {
        var temp__4126__auto___7869 = cljs.core.seq.call(null, seq__6912_7860);
        if (temp__4126__auto___7869) {
          var seq__6912_7870__$1 = temp__4126__auto___7869;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__6912_7870__$1)) {
            var c__4229__auto___7871 = cljs.core.chunk_first.call(null, seq__6912_7870__$1);
            var G__7872 = cljs.core.chunk_rest.call(null, seq__6912_7870__$1);
            var G__7873 = c__4229__auto___7871;
            var G__7874 = cljs.core.count.call(null, c__4229__auto___7871);
            var G__7875 = 0;
            seq__6912_7860 = G__7872;
            chunk__6913_7861 = G__7873;
            count__6914_7862 = G__7874;
            i__6915_7863 = G__7875;
            continue;
          } else {
            var arg__4902__auto___7876 = cljs.core.first.call(null, seq__6912_7870__$1);
            a__4901__auto__.push(arg__4902__auto___7876);
            var G__7877 = cljs.core.next.call(null, seq__6912_7870__$1);
            var G__7878 = null;
            var G__7879 = 0;
            var G__7880 = 0;
            seq__6912_7860 = G__7877;
            chunk__6913_7861 = G__7878;
            count__6914_7862 = G__7879;
            i__6915_7863 = G__7880;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.a.apply(null, a__4901__auto__);
  };
  var a = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return a__delegate.call(this, args__4900__auto__);
  };
  a.cljs$lang$maxFixedArity = 0;
  a.cljs$lang$applyTo = function(arglist__7881) {
    var args__4900__auto__ = cljs.core.seq(arglist__7881);
    return a__delegate(args__4900__auto__);
  };
  a.cljs$core$IFn$_invoke$arity$variadic = a__delegate;
  return a;
}();
quiescent.dom.abbr = function() {
  var abbr__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__6920_7882 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__6921_7883 = null;
    var count__6922_7884 = 0;
    var i__6923_7885 = 0;
    while (true) {
      if (i__6923_7885 < count__6922_7884) {
        var arg__4902__auto___7886 = cljs.core._nth.call(null, chunk__6921_7883, i__6923_7885);
        a__4901__auto__.push(arg__4902__auto___7886);
        var G__7887 = seq__6920_7882;
        var G__7888 = chunk__6921_7883;
        var G__7889 = count__6922_7884;
        var G__7890 = i__6923_7885 + 1;
        seq__6920_7882 = G__7887;
        chunk__6921_7883 = G__7888;
        count__6922_7884 = G__7889;
        i__6923_7885 = G__7890;
        continue;
      } else {
        var temp__4126__auto___7891 = cljs.core.seq.call(null, seq__6920_7882);
        if (temp__4126__auto___7891) {
          var seq__6920_7892__$1 = temp__4126__auto___7891;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__6920_7892__$1)) {
            var c__4229__auto___7893 = cljs.core.chunk_first.call(null, seq__6920_7892__$1);
            var G__7894 = cljs.core.chunk_rest.call(null, seq__6920_7892__$1);
            var G__7895 = c__4229__auto___7893;
            var G__7896 = cljs.core.count.call(null, c__4229__auto___7893);
            var G__7897 = 0;
            seq__6920_7882 = G__7894;
            chunk__6921_7883 = G__7895;
            count__6922_7884 = G__7896;
            i__6923_7885 = G__7897;
            continue;
          } else {
            var arg__4902__auto___7898 = cljs.core.first.call(null, seq__6920_7892__$1);
            a__4901__auto__.push(arg__4902__auto___7898);
            var G__7899 = cljs.core.next.call(null, seq__6920_7892__$1);
            var G__7900 = null;
            var G__7901 = 0;
            var G__7902 = 0;
            seq__6920_7882 = G__7899;
            chunk__6921_7883 = G__7900;
            count__6922_7884 = G__7901;
            i__6923_7885 = G__7902;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.abbr.apply(null, a__4901__auto__);
  };
  var abbr = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return abbr__delegate.call(this, args__4900__auto__);
  };
  abbr.cljs$lang$maxFixedArity = 0;
  abbr.cljs$lang$applyTo = function(arglist__7903) {
    var args__4900__auto__ = cljs.core.seq(arglist__7903);
    return abbr__delegate(args__4900__auto__);
  };
  abbr.cljs$core$IFn$_invoke$arity$variadic = abbr__delegate;
  return abbr;
}();
quiescent.dom.address = function() {
  var address__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__6928_7904 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__6929_7905 = null;
    var count__6930_7906 = 0;
    var i__6931_7907 = 0;
    while (true) {
      if (i__6931_7907 < count__6930_7906) {
        var arg__4902__auto___7908 = cljs.core._nth.call(null, chunk__6929_7905, i__6931_7907);
        a__4901__auto__.push(arg__4902__auto___7908);
        var G__7909 = seq__6928_7904;
        var G__7910 = chunk__6929_7905;
        var G__7911 = count__6930_7906;
        var G__7912 = i__6931_7907 + 1;
        seq__6928_7904 = G__7909;
        chunk__6929_7905 = G__7910;
        count__6930_7906 = G__7911;
        i__6931_7907 = G__7912;
        continue;
      } else {
        var temp__4126__auto___7913 = cljs.core.seq.call(null, seq__6928_7904);
        if (temp__4126__auto___7913) {
          var seq__6928_7914__$1 = temp__4126__auto___7913;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__6928_7914__$1)) {
            var c__4229__auto___7915 = cljs.core.chunk_first.call(null, seq__6928_7914__$1);
            var G__7916 = cljs.core.chunk_rest.call(null, seq__6928_7914__$1);
            var G__7917 = c__4229__auto___7915;
            var G__7918 = cljs.core.count.call(null, c__4229__auto___7915);
            var G__7919 = 0;
            seq__6928_7904 = G__7916;
            chunk__6929_7905 = G__7917;
            count__6930_7906 = G__7918;
            i__6931_7907 = G__7919;
            continue;
          } else {
            var arg__4902__auto___7920 = cljs.core.first.call(null, seq__6928_7914__$1);
            a__4901__auto__.push(arg__4902__auto___7920);
            var G__7921 = cljs.core.next.call(null, seq__6928_7914__$1);
            var G__7922 = null;
            var G__7923 = 0;
            var G__7924 = 0;
            seq__6928_7904 = G__7921;
            chunk__6929_7905 = G__7922;
            count__6930_7906 = G__7923;
            i__6931_7907 = G__7924;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.address.apply(null, a__4901__auto__);
  };
  var address = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return address__delegate.call(this, args__4900__auto__);
  };
  address.cljs$lang$maxFixedArity = 0;
  address.cljs$lang$applyTo = function(arglist__7925) {
    var args__4900__auto__ = cljs.core.seq(arglist__7925);
    return address__delegate(args__4900__auto__);
  };
  address.cljs$core$IFn$_invoke$arity$variadic = address__delegate;
  return address;
}();
quiescent.dom.area = function() {
  var area__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__6936_7926 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__6937_7927 = null;
    var count__6938_7928 = 0;
    var i__6939_7929 = 0;
    while (true) {
      if (i__6939_7929 < count__6938_7928) {
        var arg__4902__auto___7930 = cljs.core._nth.call(null, chunk__6937_7927, i__6939_7929);
        a__4901__auto__.push(arg__4902__auto___7930);
        var G__7931 = seq__6936_7926;
        var G__7932 = chunk__6937_7927;
        var G__7933 = count__6938_7928;
        var G__7934 = i__6939_7929 + 1;
        seq__6936_7926 = G__7931;
        chunk__6937_7927 = G__7932;
        count__6938_7928 = G__7933;
        i__6939_7929 = G__7934;
        continue;
      } else {
        var temp__4126__auto___7935 = cljs.core.seq.call(null, seq__6936_7926);
        if (temp__4126__auto___7935) {
          var seq__6936_7936__$1 = temp__4126__auto___7935;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__6936_7936__$1)) {
            var c__4229__auto___7937 = cljs.core.chunk_first.call(null, seq__6936_7936__$1);
            var G__7938 = cljs.core.chunk_rest.call(null, seq__6936_7936__$1);
            var G__7939 = c__4229__auto___7937;
            var G__7940 = cljs.core.count.call(null, c__4229__auto___7937);
            var G__7941 = 0;
            seq__6936_7926 = G__7938;
            chunk__6937_7927 = G__7939;
            count__6938_7928 = G__7940;
            i__6939_7929 = G__7941;
            continue;
          } else {
            var arg__4902__auto___7942 = cljs.core.first.call(null, seq__6936_7936__$1);
            a__4901__auto__.push(arg__4902__auto___7942);
            var G__7943 = cljs.core.next.call(null, seq__6936_7936__$1);
            var G__7944 = null;
            var G__7945 = 0;
            var G__7946 = 0;
            seq__6936_7926 = G__7943;
            chunk__6937_7927 = G__7944;
            count__6938_7928 = G__7945;
            i__6939_7929 = G__7946;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.area.apply(null, a__4901__auto__);
  };
  var area = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return area__delegate.call(this, args__4900__auto__);
  };
  area.cljs$lang$maxFixedArity = 0;
  area.cljs$lang$applyTo = function(arglist__7947) {
    var args__4900__auto__ = cljs.core.seq(arglist__7947);
    return area__delegate(args__4900__auto__);
  };
  area.cljs$core$IFn$_invoke$arity$variadic = area__delegate;
  return area;
}();
quiescent.dom.article = function() {
  var article__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__6944_7948 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__6945_7949 = null;
    var count__6946_7950 = 0;
    var i__6947_7951 = 0;
    while (true) {
      if (i__6947_7951 < count__6946_7950) {
        var arg__4902__auto___7952 = cljs.core._nth.call(null, chunk__6945_7949, i__6947_7951);
        a__4901__auto__.push(arg__4902__auto___7952);
        var G__7953 = seq__6944_7948;
        var G__7954 = chunk__6945_7949;
        var G__7955 = count__6946_7950;
        var G__7956 = i__6947_7951 + 1;
        seq__6944_7948 = G__7953;
        chunk__6945_7949 = G__7954;
        count__6946_7950 = G__7955;
        i__6947_7951 = G__7956;
        continue;
      } else {
        var temp__4126__auto___7957 = cljs.core.seq.call(null, seq__6944_7948);
        if (temp__4126__auto___7957) {
          var seq__6944_7958__$1 = temp__4126__auto___7957;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__6944_7958__$1)) {
            var c__4229__auto___7959 = cljs.core.chunk_first.call(null, seq__6944_7958__$1);
            var G__7960 = cljs.core.chunk_rest.call(null, seq__6944_7958__$1);
            var G__7961 = c__4229__auto___7959;
            var G__7962 = cljs.core.count.call(null, c__4229__auto___7959);
            var G__7963 = 0;
            seq__6944_7948 = G__7960;
            chunk__6945_7949 = G__7961;
            count__6946_7950 = G__7962;
            i__6947_7951 = G__7963;
            continue;
          } else {
            var arg__4902__auto___7964 = cljs.core.first.call(null, seq__6944_7958__$1);
            a__4901__auto__.push(arg__4902__auto___7964);
            var G__7965 = cljs.core.next.call(null, seq__6944_7958__$1);
            var G__7966 = null;
            var G__7967 = 0;
            var G__7968 = 0;
            seq__6944_7948 = G__7965;
            chunk__6945_7949 = G__7966;
            count__6946_7950 = G__7967;
            i__6947_7951 = G__7968;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.article.apply(null, a__4901__auto__);
  };
  var article = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return article__delegate.call(this, args__4900__auto__);
  };
  article.cljs$lang$maxFixedArity = 0;
  article.cljs$lang$applyTo = function(arglist__7969) {
    var args__4900__auto__ = cljs.core.seq(arglist__7969);
    return article__delegate(args__4900__auto__);
  };
  article.cljs$core$IFn$_invoke$arity$variadic = article__delegate;
  return article;
}();
quiescent.dom.aside = function() {
  var aside__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__6952_7970 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__6953_7971 = null;
    var count__6954_7972 = 0;
    var i__6955_7973 = 0;
    while (true) {
      if (i__6955_7973 < count__6954_7972) {
        var arg__4902__auto___7974 = cljs.core._nth.call(null, chunk__6953_7971, i__6955_7973);
        a__4901__auto__.push(arg__4902__auto___7974);
        var G__7975 = seq__6952_7970;
        var G__7976 = chunk__6953_7971;
        var G__7977 = count__6954_7972;
        var G__7978 = i__6955_7973 + 1;
        seq__6952_7970 = G__7975;
        chunk__6953_7971 = G__7976;
        count__6954_7972 = G__7977;
        i__6955_7973 = G__7978;
        continue;
      } else {
        var temp__4126__auto___7979 = cljs.core.seq.call(null, seq__6952_7970);
        if (temp__4126__auto___7979) {
          var seq__6952_7980__$1 = temp__4126__auto___7979;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__6952_7980__$1)) {
            var c__4229__auto___7981 = cljs.core.chunk_first.call(null, seq__6952_7980__$1);
            var G__7982 = cljs.core.chunk_rest.call(null, seq__6952_7980__$1);
            var G__7983 = c__4229__auto___7981;
            var G__7984 = cljs.core.count.call(null, c__4229__auto___7981);
            var G__7985 = 0;
            seq__6952_7970 = G__7982;
            chunk__6953_7971 = G__7983;
            count__6954_7972 = G__7984;
            i__6955_7973 = G__7985;
            continue;
          } else {
            var arg__4902__auto___7986 = cljs.core.first.call(null, seq__6952_7980__$1);
            a__4901__auto__.push(arg__4902__auto___7986);
            var G__7987 = cljs.core.next.call(null, seq__6952_7980__$1);
            var G__7988 = null;
            var G__7989 = 0;
            var G__7990 = 0;
            seq__6952_7970 = G__7987;
            chunk__6953_7971 = G__7988;
            count__6954_7972 = G__7989;
            i__6955_7973 = G__7990;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.aside.apply(null, a__4901__auto__);
  };
  var aside = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return aside__delegate.call(this, args__4900__auto__);
  };
  aside.cljs$lang$maxFixedArity = 0;
  aside.cljs$lang$applyTo = function(arglist__7991) {
    var args__4900__auto__ = cljs.core.seq(arglist__7991);
    return aside__delegate(args__4900__auto__);
  };
  aside.cljs$core$IFn$_invoke$arity$variadic = aside__delegate;
  return aside;
}();
quiescent.dom.audio = function() {
  var audio__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__6960_7992 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__6961_7993 = null;
    var count__6962_7994 = 0;
    var i__6963_7995 = 0;
    while (true) {
      if (i__6963_7995 < count__6962_7994) {
        var arg__4902__auto___7996 = cljs.core._nth.call(null, chunk__6961_7993, i__6963_7995);
        a__4901__auto__.push(arg__4902__auto___7996);
        var G__7997 = seq__6960_7992;
        var G__7998 = chunk__6961_7993;
        var G__7999 = count__6962_7994;
        var G__8000 = i__6963_7995 + 1;
        seq__6960_7992 = G__7997;
        chunk__6961_7993 = G__7998;
        count__6962_7994 = G__7999;
        i__6963_7995 = G__8000;
        continue;
      } else {
        var temp__4126__auto___8001 = cljs.core.seq.call(null, seq__6960_7992);
        if (temp__4126__auto___8001) {
          var seq__6960_8002__$1 = temp__4126__auto___8001;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__6960_8002__$1)) {
            var c__4229__auto___8003 = cljs.core.chunk_first.call(null, seq__6960_8002__$1);
            var G__8004 = cljs.core.chunk_rest.call(null, seq__6960_8002__$1);
            var G__8005 = c__4229__auto___8003;
            var G__8006 = cljs.core.count.call(null, c__4229__auto___8003);
            var G__8007 = 0;
            seq__6960_7992 = G__8004;
            chunk__6961_7993 = G__8005;
            count__6962_7994 = G__8006;
            i__6963_7995 = G__8007;
            continue;
          } else {
            var arg__4902__auto___8008 = cljs.core.first.call(null, seq__6960_8002__$1);
            a__4901__auto__.push(arg__4902__auto___8008);
            var G__8009 = cljs.core.next.call(null, seq__6960_8002__$1);
            var G__8010 = null;
            var G__8011 = 0;
            var G__8012 = 0;
            seq__6960_7992 = G__8009;
            chunk__6961_7993 = G__8010;
            count__6962_7994 = G__8011;
            i__6963_7995 = G__8012;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.audio.apply(null, a__4901__auto__);
  };
  var audio = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return audio__delegate.call(this, args__4900__auto__);
  };
  audio.cljs$lang$maxFixedArity = 0;
  audio.cljs$lang$applyTo = function(arglist__8013) {
    var args__4900__auto__ = cljs.core.seq(arglist__8013);
    return audio__delegate(args__4900__auto__);
  };
  audio.cljs$core$IFn$_invoke$arity$variadic = audio__delegate;
  return audio;
}();
quiescent.dom.b = function() {
  var b__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__6968_8014 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__6969_8015 = null;
    var count__6970_8016 = 0;
    var i__6971_8017 = 0;
    while (true) {
      if (i__6971_8017 < count__6970_8016) {
        var arg__4902__auto___8018 = cljs.core._nth.call(null, chunk__6969_8015, i__6971_8017);
        a__4901__auto__.push(arg__4902__auto___8018);
        var G__8019 = seq__6968_8014;
        var G__8020 = chunk__6969_8015;
        var G__8021 = count__6970_8016;
        var G__8022 = i__6971_8017 + 1;
        seq__6968_8014 = G__8019;
        chunk__6969_8015 = G__8020;
        count__6970_8016 = G__8021;
        i__6971_8017 = G__8022;
        continue;
      } else {
        var temp__4126__auto___8023 = cljs.core.seq.call(null, seq__6968_8014);
        if (temp__4126__auto___8023) {
          var seq__6968_8024__$1 = temp__4126__auto___8023;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__6968_8024__$1)) {
            var c__4229__auto___8025 = cljs.core.chunk_first.call(null, seq__6968_8024__$1);
            var G__8026 = cljs.core.chunk_rest.call(null, seq__6968_8024__$1);
            var G__8027 = c__4229__auto___8025;
            var G__8028 = cljs.core.count.call(null, c__4229__auto___8025);
            var G__8029 = 0;
            seq__6968_8014 = G__8026;
            chunk__6969_8015 = G__8027;
            count__6970_8016 = G__8028;
            i__6971_8017 = G__8029;
            continue;
          } else {
            var arg__4902__auto___8030 = cljs.core.first.call(null, seq__6968_8024__$1);
            a__4901__auto__.push(arg__4902__auto___8030);
            var G__8031 = cljs.core.next.call(null, seq__6968_8024__$1);
            var G__8032 = null;
            var G__8033 = 0;
            var G__8034 = 0;
            seq__6968_8014 = G__8031;
            chunk__6969_8015 = G__8032;
            count__6970_8016 = G__8033;
            i__6971_8017 = G__8034;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.b.apply(null, a__4901__auto__);
  };
  var b = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return b__delegate.call(this, args__4900__auto__);
  };
  b.cljs$lang$maxFixedArity = 0;
  b.cljs$lang$applyTo = function(arglist__8035) {
    var args__4900__auto__ = cljs.core.seq(arglist__8035);
    return b__delegate(args__4900__auto__);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = b__delegate;
  return b;
}();
quiescent.dom.base = function() {
  var base__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__6976_8036 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__6977_8037 = null;
    var count__6978_8038 = 0;
    var i__6979_8039 = 0;
    while (true) {
      if (i__6979_8039 < count__6978_8038) {
        var arg__4902__auto___8040 = cljs.core._nth.call(null, chunk__6977_8037, i__6979_8039);
        a__4901__auto__.push(arg__4902__auto___8040);
        var G__8041 = seq__6976_8036;
        var G__8042 = chunk__6977_8037;
        var G__8043 = count__6978_8038;
        var G__8044 = i__6979_8039 + 1;
        seq__6976_8036 = G__8041;
        chunk__6977_8037 = G__8042;
        count__6978_8038 = G__8043;
        i__6979_8039 = G__8044;
        continue;
      } else {
        var temp__4126__auto___8045 = cljs.core.seq.call(null, seq__6976_8036);
        if (temp__4126__auto___8045) {
          var seq__6976_8046__$1 = temp__4126__auto___8045;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__6976_8046__$1)) {
            var c__4229__auto___8047 = cljs.core.chunk_first.call(null, seq__6976_8046__$1);
            var G__8048 = cljs.core.chunk_rest.call(null, seq__6976_8046__$1);
            var G__8049 = c__4229__auto___8047;
            var G__8050 = cljs.core.count.call(null, c__4229__auto___8047);
            var G__8051 = 0;
            seq__6976_8036 = G__8048;
            chunk__6977_8037 = G__8049;
            count__6978_8038 = G__8050;
            i__6979_8039 = G__8051;
            continue;
          } else {
            var arg__4902__auto___8052 = cljs.core.first.call(null, seq__6976_8046__$1);
            a__4901__auto__.push(arg__4902__auto___8052);
            var G__8053 = cljs.core.next.call(null, seq__6976_8046__$1);
            var G__8054 = null;
            var G__8055 = 0;
            var G__8056 = 0;
            seq__6976_8036 = G__8053;
            chunk__6977_8037 = G__8054;
            count__6978_8038 = G__8055;
            i__6979_8039 = G__8056;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.base.apply(null, a__4901__auto__);
  };
  var base = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return base__delegate.call(this, args__4900__auto__);
  };
  base.cljs$lang$maxFixedArity = 0;
  base.cljs$lang$applyTo = function(arglist__8057) {
    var args__4900__auto__ = cljs.core.seq(arglist__8057);
    return base__delegate(args__4900__auto__);
  };
  base.cljs$core$IFn$_invoke$arity$variadic = base__delegate;
  return base;
}();
quiescent.dom.bdi = function() {
  var bdi__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__6984_8058 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__6985_8059 = null;
    var count__6986_8060 = 0;
    var i__6987_8061 = 0;
    while (true) {
      if (i__6987_8061 < count__6986_8060) {
        var arg__4902__auto___8062 = cljs.core._nth.call(null, chunk__6985_8059, i__6987_8061);
        a__4901__auto__.push(arg__4902__auto___8062);
        var G__8063 = seq__6984_8058;
        var G__8064 = chunk__6985_8059;
        var G__8065 = count__6986_8060;
        var G__8066 = i__6987_8061 + 1;
        seq__6984_8058 = G__8063;
        chunk__6985_8059 = G__8064;
        count__6986_8060 = G__8065;
        i__6987_8061 = G__8066;
        continue;
      } else {
        var temp__4126__auto___8067 = cljs.core.seq.call(null, seq__6984_8058);
        if (temp__4126__auto___8067) {
          var seq__6984_8068__$1 = temp__4126__auto___8067;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__6984_8068__$1)) {
            var c__4229__auto___8069 = cljs.core.chunk_first.call(null, seq__6984_8068__$1);
            var G__8070 = cljs.core.chunk_rest.call(null, seq__6984_8068__$1);
            var G__8071 = c__4229__auto___8069;
            var G__8072 = cljs.core.count.call(null, c__4229__auto___8069);
            var G__8073 = 0;
            seq__6984_8058 = G__8070;
            chunk__6985_8059 = G__8071;
            count__6986_8060 = G__8072;
            i__6987_8061 = G__8073;
            continue;
          } else {
            var arg__4902__auto___8074 = cljs.core.first.call(null, seq__6984_8068__$1);
            a__4901__auto__.push(arg__4902__auto___8074);
            var G__8075 = cljs.core.next.call(null, seq__6984_8068__$1);
            var G__8076 = null;
            var G__8077 = 0;
            var G__8078 = 0;
            seq__6984_8058 = G__8075;
            chunk__6985_8059 = G__8076;
            count__6986_8060 = G__8077;
            i__6987_8061 = G__8078;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.bdi.apply(null, a__4901__auto__);
  };
  var bdi = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return bdi__delegate.call(this, args__4900__auto__);
  };
  bdi.cljs$lang$maxFixedArity = 0;
  bdi.cljs$lang$applyTo = function(arglist__8079) {
    var args__4900__auto__ = cljs.core.seq(arglist__8079);
    return bdi__delegate(args__4900__auto__);
  };
  bdi.cljs$core$IFn$_invoke$arity$variadic = bdi__delegate;
  return bdi;
}();
quiescent.dom.bdo = function() {
  var bdo__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__6992_8080 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__6993_8081 = null;
    var count__6994_8082 = 0;
    var i__6995_8083 = 0;
    while (true) {
      if (i__6995_8083 < count__6994_8082) {
        var arg__4902__auto___8084 = cljs.core._nth.call(null, chunk__6993_8081, i__6995_8083);
        a__4901__auto__.push(arg__4902__auto___8084);
        var G__8085 = seq__6992_8080;
        var G__8086 = chunk__6993_8081;
        var G__8087 = count__6994_8082;
        var G__8088 = i__6995_8083 + 1;
        seq__6992_8080 = G__8085;
        chunk__6993_8081 = G__8086;
        count__6994_8082 = G__8087;
        i__6995_8083 = G__8088;
        continue;
      } else {
        var temp__4126__auto___8089 = cljs.core.seq.call(null, seq__6992_8080);
        if (temp__4126__auto___8089) {
          var seq__6992_8090__$1 = temp__4126__auto___8089;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__6992_8090__$1)) {
            var c__4229__auto___8091 = cljs.core.chunk_first.call(null, seq__6992_8090__$1);
            var G__8092 = cljs.core.chunk_rest.call(null, seq__6992_8090__$1);
            var G__8093 = c__4229__auto___8091;
            var G__8094 = cljs.core.count.call(null, c__4229__auto___8091);
            var G__8095 = 0;
            seq__6992_8080 = G__8092;
            chunk__6993_8081 = G__8093;
            count__6994_8082 = G__8094;
            i__6995_8083 = G__8095;
            continue;
          } else {
            var arg__4902__auto___8096 = cljs.core.first.call(null, seq__6992_8090__$1);
            a__4901__auto__.push(arg__4902__auto___8096);
            var G__8097 = cljs.core.next.call(null, seq__6992_8090__$1);
            var G__8098 = null;
            var G__8099 = 0;
            var G__8100 = 0;
            seq__6992_8080 = G__8097;
            chunk__6993_8081 = G__8098;
            count__6994_8082 = G__8099;
            i__6995_8083 = G__8100;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.bdo.apply(null, a__4901__auto__);
  };
  var bdo = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return bdo__delegate.call(this, args__4900__auto__);
  };
  bdo.cljs$lang$maxFixedArity = 0;
  bdo.cljs$lang$applyTo = function(arglist__8101) {
    var args__4900__auto__ = cljs.core.seq(arglist__8101);
    return bdo__delegate(args__4900__auto__);
  };
  bdo.cljs$core$IFn$_invoke$arity$variadic = bdo__delegate;
  return bdo;
}();
quiescent.dom.big = function() {
  var big__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7000_8102 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7001_8103 = null;
    var count__7002_8104 = 0;
    var i__7003_8105 = 0;
    while (true) {
      if (i__7003_8105 < count__7002_8104) {
        var arg__4902__auto___8106 = cljs.core._nth.call(null, chunk__7001_8103, i__7003_8105);
        a__4901__auto__.push(arg__4902__auto___8106);
        var G__8107 = seq__7000_8102;
        var G__8108 = chunk__7001_8103;
        var G__8109 = count__7002_8104;
        var G__8110 = i__7003_8105 + 1;
        seq__7000_8102 = G__8107;
        chunk__7001_8103 = G__8108;
        count__7002_8104 = G__8109;
        i__7003_8105 = G__8110;
        continue;
      } else {
        var temp__4126__auto___8111 = cljs.core.seq.call(null, seq__7000_8102);
        if (temp__4126__auto___8111) {
          var seq__7000_8112__$1 = temp__4126__auto___8111;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7000_8112__$1)) {
            var c__4229__auto___8113 = cljs.core.chunk_first.call(null, seq__7000_8112__$1);
            var G__8114 = cljs.core.chunk_rest.call(null, seq__7000_8112__$1);
            var G__8115 = c__4229__auto___8113;
            var G__8116 = cljs.core.count.call(null, c__4229__auto___8113);
            var G__8117 = 0;
            seq__7000_8102 = G__8114;
            chunk__7001_8103 = G__8115;
            count__7002_8104 = G__8116;
            i__7003_8105 = G__8117;
            continue;
          } else {
            var arg__4902__auto___8118 = cljs.core.first.call(null, seq__7000_8112__$1);
            a__4901__auto__.push(arg__4902__auto___8118);
            var G__8119 = cljs.core.next.call(null, seq__7000_8112__$1);
            var G__8120 = null;
            var G__8121 = 0;
            var G__8122 = 0;
            seq__7000_8102 = G__8119;
            chunk__7001_8103 = G__8120;
            count__7002_8104 = G__8121;
            i__7003_8105 = G__8122;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.big.apply(null, a__4901__auto__);
  };
  var big = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return big__delegate.call(this, args__4900__auto__);
  };
  big.cljs$lang$maxFixedArity = 0;
  big.cljs$lang$applyTo = function(arglist__8123) {
    var args__4900__auto__ = cljs.core.seq(arglist__8123);
    return big__delegate(args__4900__auto__);
  };
  big.cljs$core$IFn$_invoke$arity$variadic = big__delegate;
  return big;
}();
quiescent.dom.blockquote = function() {
  var blockquote__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7008_8124 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7009_8125 = null;
    var count__7010_8126 = 0;
    var i__7011_8127 = 0;
    while (true) {
      if (i__7011_8127 < count__7010_8126) {
        var arg__4902__auto___8128 = cljs.core._nth.call(null, chunk__7009_8125, i__7011_8127);
        a__4901__auto__.push(arg__4902__auto___8128);
        var G__8129 = seq__7008_8124;
        var G__8130 = chunk__7009_8125;
        var G__8131 = count__7010_8126;
        var G__8132 = i__7011_8127 + 1;
        seq__7008_8124 = G__8129;
        chunk__7009_8125 = G__8130;
        count__7010_8126 = G__8131;
        i__7011_8127 = G__8132;
        continue;
      } else {
        var temp__4126__auto___8133 = cljs.core.seq.call(null, seq__7008_8124);
        if (temp__4126__auto___8133) {
          var seq__7008_8134__$1 = temp__4126__auto___8133;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7008_8134__$1)) {
            var c__4229__auto___8135 = cljs.core.chunk_first.call(null, seq__7008_8134__$1);
            var G__8136 = cljs.core.chunk_rest.call(null, seq__7008_8134__$1);
            var G__8137 = c__4229__auto___8135;
            var G__8138 = cljs.core.count.call(null, c__4229__auto___8135);
            var G__8139 = 0;
            seq__7008_8124 = G__8136;
            chunk__7009_8125 = G__8137;
            count__7010_8126 = G__8138;
            i__7011_8127 = G__8139;
            continue;
          } else {
            var arg__4902__auto___8140 = cljs.core.first.call(null, seq__7008_8134__$1);
            a__4901__auto__.push(arg__4902__auto___8140);
            var G__8141 = cljs.core.next.call(null, seq__7008_8134__$1);
            var G__8142 = null;
            var G__8143 = 0;
            var G__8144 = 0;
            seq__7008_8124 = G__8141;
            chunk__7009_8125 = G__8142;
            count__7010_8126 = G__8143;
            i__7011_8127 = G__8144;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.blockquote.apply(null, a__4901__auto__);
  };
  var blockquote = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return blockquote__delegate.call(this, args__4900__auto__);
  };
  blockquote.cljs$lang$maxFixedArity = 0;
  blockquote.cljs$lang$applyTo = function(arglist__8145) {
    var args__4900__auto__ = cljs.core.seq(arglist__8145);
    return blockquote__delegate(args__4900__auto__);
  };
  blockquote.cljs$core$IFn$_invoke$arity$variadic = blockquote__delegate;
  return blockquote;
}();
quiescent.dom.body = function() {
  var body__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7016_8146 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7017_8147 = null;
    var count__7018_8148 = 0;
    var i__7019_8149 = 0;
    while (true) {
      if (i__7019_8149 < count__7018_8148) {
        var arg__4902__auto___8150 = cljs.core._nth.call(null, chunk__7017_8147, i__7019_8149);
        a__4901__auto__.push(arg__4902__auto___8150);
        var G__8151 = seq__7016_8146;
        var G__8152 = chunk__7017_8147;
        var G__8153 = count__7018_8148;
        var G__8154 = i__7019_8149 + 1;
        seq__7016_8146 = G__8151;
        chunk__7017_8147 = G__8152;
        count__7018_8148 = G__8153;
        i__7019_8149 = G__8154;
        continue;
      } else {
        var temp__4126__auto___8155 = cljs.core.seq.call(null, seq__7016_8146);
        if (temp__4126__auto___8155) {
          var seq__7016_8156__$1 = temp__4126__auto___8155;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7016_8156__$1)) {
            var c__4229__auto___8157 = cljs.core.chunk_first.call(null, seq__7016_8156__$1);
            var G__8158 = cljs.core.chunk_rest.call(null, seq__7016_8156__$1);
            var G__8159 = c__4229__auto___8157;
            var G__8160 = cljs.core.count.call(null, c__4229__auto___8157);
            var G__8161 = 0;
            seq__7016_8146 = G__8158;
            chunk__7017_8147 = G__8159;
            count__7018_8148 = G__8160;
            i__7019_8149 = G__8161;
            continue;
          } else {
            var arg__4902__auto___8162 = cljs.core.first.call(null, seq__7016_8156__$1);
            a__4901__auto__.push(arg__4902__auto___8162);
            var G__8163 = cljs.core.next.call(null, seq__7016_8156__$1);
            var G__8164 = null;
            var G__8165 = 0;
            var G__8166 = 0;
            seq__7016_8146 = G__8163;
            chunk__7017_8147 = G__8164;
            count__7018_8148 = G__8165;
            i__7019_8149 = G__8166;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.body.apply(null, a__4901__auto__);
  };
  var body = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return body__delegate.call(this, args__4900__auto__);
  };
  body.cljs$lang$maxFixedArity = 0;
  body.cljs$lang$applyTo = function(arglist__8167) {
    var args__4900__auto__ = cljs.core.seq(arglist__8167);
    return body__delegate(args__4900__auto__);
  };
  body.cljs$core$IFn$_invoke$arity$variadic = body__delegate;
  return body;
}();
quiescent.dom.br = function() {
  var br__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7024_8168 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7025_8169 = null;
    var count__7026_8170 = 0;
    var i__7027_8171 = 0;
    while (true) {
      if (i__7027_8171 < count__7026_8170) {
        var arg__4902__auto___8172 = cljs.core._nth.call(null, chunk__7025_8169, i__7027_8171);
        a__4901__auto__.push(arg__4902__auto___8172);
        var G__8173 = seq__7024_8168;
        var G__8174 = chunk__7025_8169;
        var G__8175 = count__7026_8170;
        var G__8176 = i__7027_8171 + 1;
        seq__7024_8168 = G__8173;
        chunk__7025_8169 = G__8174;
        count__7026_8170 = G__8175;
        i__7027_8171 = G__8176;
        continue;
      } else {
        var temp__4126__auto___8177 = cljs.core.seq.call(null, seq__7024_8168);
        if (temp__4126__auto___8177) {
          var seq__7024_8178__$1 = temp__4126__auto___8177;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7024_8178__$1)) {
            var c__4229__auto___8179 = cljs.core.chunk_first.call(null, seq__7024_8178__$1);
            var G__8180 = cljs.core.chunk_rest.call(null, seq__7024_8178__$1);
            var G__8181 = c__4229__auto___8179;
            var G__8182 = cljs.core.count.call(null, c__4229__auto___8179);
            var G__8183 = 0;
            seq__7024_8168 = G__8180;
            chunk__7025_8169 = G__8181;
            count__7026_8170 = G__8182;
            i__7027_8171 = G__8183;
            continue;
          } else {
            var arg__4902__auto___8184 = cljs.core.first.call(null, seq__7024_8178__$1);
            a__4901__auto__.push(arg__4902__auto___8184);
            var G__8185 = cljs.core.next.call(null, seq__7024_8178__$1);
            var G__8186 = null;
            var G__8187 = 0;
            var G__8188 = 0;
            seq__7024_8168 = G__8185;
            chunk__7025_8169 = G__8186;
            count__7026_8170 = G__8187;
            i__7027_8171 = G__8188;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.br.apply(null, a__4901__auto__);
  };
  var br = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return br__delegate.call(this, args__4900__auto__);
  };
  br.cljs$lang$maxFixedArity = 0;
  br.cljs$lang$applyTo = function(arglist__8189) {
    var args__4900__auto__ = cljs.core.seq(arglist__8189);
    return br__delegate(args__4900__auto__);
  };
  br.cljs$core$IFn$_invoke$arity$variadic = br__delegate;
  return br;
}();
quiescent.dom.button = function() {
  var button__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7032_8190 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7033_8191 = null;
    var count__7034_8192 = 0;
    var i__7035_8193 = 0;
    while (true) {
      if (i__7035_8193 < count__7034_8192) {
        var arg__4902__auto___8194 = cljs.core._nth.call(null, chunk__7033_8191, i__7035_8193);
        a__4901__auto__.push(arg__4902__auto___8194);
        var G__8195 = seq__7032_8190;
        var G__8196 = chunk__7033_8191;
        var G__8197 = count__7034_8192;
        var G__8198 = i__7035_8193 + 1;
        seq__7032_8190 = G__8195;
        chunk__7033_8191 = G__8196;
        count__7034_8192 = G__8197;
        i__7035_8193 = G__8198;
        continue;
      } else {
        var temp__4126__auto___8199 = cljs.core.seq.call(null, seq__7032_8190);
        if (temp__4126__auto___8199) {
          var seq__7032_8200__$1 = temp__4126__auto___8199;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7032_8200__$1)) {
            var c__4229__auto___8201 = cljs.core.chunk_first.call(null, seq__7032_8200__$1);
            var G__8202 = cljs.core.chunk_rest.call(null, seq__7032_8200__$1);
            var G__8203 = c__4229__auto___8201;
            var G__8204 = cljs.core.count.call(null, c__4229__auto___8201);
            var G__8205 = 0;
            seq__7032_8190 = G__8202;
            chunk__7033_8191 = G__8203;
            count__7034_8192 = G__8204;
            i__7035_8193 = G__8205;
            continue;
          } else {
            var arg__4902__auto___8206 = cljs.core.first.call(null, seq__7032_8200__$1);
            a__4901__auto__.push(arg__4902__auto___8206);
            var G__8207 = cljs.core.next.call(null, seq__7032_8200__$1);
            var G__8208 = null;
            var G__8209 = 0;
            var G__8210 = 0;
            seq__7032_8190 = G__8207;
            chunk__7033_8191 = G__8208;
            count__7034_8192 = G__8209;
            i__7035_8193 = G__8210;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.button.apply(null, a__4901__auto__);
  };
  var button = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return button__delegate.call(this, args__4900__auto__);
  };
  button.cljs$lang$maxFixedArity = 0;
  button.cljs$lang$applyTo = function(arglist__8211) {
    var args__4900__auto__ = cljs.core.seq(arglist__8211);
    return button__delegate(args__4900__auto__);
  };
  button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
  return button;
}();
quiescent.dom.canvas = function() {
  var canvas__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7040_8212 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7041_8213 = null;
    var count__7042_8214 = 0;
    var i__7043_8215 = 0;
    while (true) {
      if (i__7043_8215 < count__7042_8214) {
        var arg__4902__auto___8216 = cljs.core._nth.call(null, chunk__7041_8213, i__7043_8215);
        a__4901__auto__.push(arg__4902__auto___8216);
        var G__8217 = seq__7040_8212;
        var G__8218 = chunk__7041_8213;
        var G__8219 = count__7042_8214;
        var G__8220 = i__7043_8215 + 1;
        seq__7040_8212 = G__8217;
        chunk__7041_8213 = G__8218;
        count__7042_8214 = G__8219;
        i__7043_8215 = G__8220;
        continue;
      } else {
        var temp__4126__auto___8221 = cljs.core.seq.call(null, seq__7040_8212);
        if (temp__4126__auto___8221) {
          var seq__7040_8222__$1 = temp__4126__auto___8221;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7040_8222__$1)) {
            var c__4229__auto___8223 = cljs.core.chunk_first.call(null, seq__7040_8222__$1);
            var G__8224 = cljs.core.chunk_rest.call(null, seq__7040_8222__$1);
            var G__8225 = c__4229__auto___8223;
            var G__8226 = cljs.core.count.call(null, c__4229__auto___8223);
            var G__8227 = 0;
            seq__7040_8212 = G__8224;
            chunk__7041_8213 = G__8225;
            count__7042_8214 = G__8226;
            i__7043_8215 = G__8227;
            continue;
          } else {
            var arg__4902__auto___8228 = cljs.core.first.call(null, seq__7040_8222__$1);
            a__4901__auto__.push(arg__4902__auto___8228);
            var G__8229 = cljs.core.next.call(null, seq__7040_8222__$1);
            var G__8230 = null;
            var G__8231 = 0;
            var G__8232 = 0;
            seq__7040_8212 = G__8229;
            chunk__7041_8213 = G__8230;
            count__7042_8214 = G__8231;
            i__7043_8215 = G__8232;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.canvas.apply(null, a__4901__auto__);
  };
  var canvas = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return canvas__delegate.call(this, args__4900__auto__);
  };
  canvas.cljs$lang$maxFixedArity = 0;
  canvas.cljs$lang$applyTo = function(arglist__8233) {
    var args__4900__auto__ = cljs.core.seq(arglist__8233);
    return canvas__delegate(args__4900__auto__);
  };
  canvas.cljs$core$IFn$_invoke$arity$variadic = canvas__delegate;
  return canvas;
}();
quiescent.dom.caption = function() {
  var caption__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7048_8234 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7049_8235 = null;
    var count__7050_8236 = 0;
    var i__7051_8237 = 0;
    while (true) {
      if (i__7051_8237 < count__7050_8236) {
        var arg__4902__auto___8238 = cljs.core._nth.call(null, chunk__7049_8235, i__7051_8237);
        a__4901__auto__.push(arg__4902__auto___8238);
        var G__8239 = seq__7048_8234;
        var G__8240 = chunk__7049_8235;
        var G__8241 = count__7050_8236;
        var G__8242 = i__7051_8237 + 1;
        seq__7048_8234 = G__8239;
        chunk__7049_8235 = G__8240;
        count__7050_8236 = G__8241;
        i__7051_8237 = G__8242;
        continue;
      } else {
        var temp__4126__auto___8243 = cljs.core.seq.call(null, seq__7048_8234);
        if (temp__4126__auto___8243) {
          var seq__7048_8244__$1 = temp__4126__auto___8243;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7048_8244__$1)) {
            var c__4229__auto___8245 = cljs.core.chunk_first.call(null, seq__7048_8244__$1);
            var G__8246 = cljs.core.chunk_rest.call(null, seq__7048_8244__$1);
            var G__8247 = c__4229__auto___8245;
            var G__8248 = cljs.core.count.call(null, c__4229__auto___8245);
            var G__8249 = 0;
            seq__7048_8234 = G__8246;
            chunk__7049_8235 = G__8247;
            count__7050_8236 = G__8248;
            i__7051_8237 = G__8249;
            continue;
          } else {
            var arg__4902__auto___8250 = cljs.core.first.call(null, seq__7048_8244__$1);
            a__4901__auto__.push(arg__4902__auto___8250);
            var G__8251 = cljs.core.next.call(null, seq__7048_8244__$1);
            var G__8252 = null;
            var G__8253 = 0;
            var G__8254 = 0;
            seq__7048_8234 = G__8251;
            chunk__7049_8235 = G__8252;
            count__7050_8236 = G__8253;
            i__7051_8237 = G__8254;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.caption.apply(null, a__4901__auto__);
  };
  var caption = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return caption__delegate.call(this, args__4900__auto__);
  };
  caption.cljs$lang$maxFixedArity = 0;
  caption.cljs$lang$applyTo = function(arglist__8255) {
    var args__4900__auto__ = cljs.core.seq(arglist__8255);
    return caption__delegate(args__4900__auto__);
  };
  caption.cljs$core$IFn$_invoke$arity$variadic = caption__delegate;
  return caption;
}();
quiescent.dom.cite = function() {
  var cite__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7056_8256 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7057_8257 = null;
    var count__7058_8258 = 0;
    var i__7059_8259 = 0;
    while (true) {
      if (i__7059_8259 < count__7058_8258) {
        var arg__4902__auto___8260 = cljs.core._nth.call(null, chunk__7057_8257, i__7059_8259);
        a__4901__auto__.push(arg__4902__auto___8260);
        var G__8261 = seq__7056_8256;
        var G__8262 = chunk__7057_8257;
        var G__8263 = count__7058_8258;
        var G__8264 = i__7059_8259 + 1;
        seq__7056_8256 = G__8261;
        chunk__7057_8257 = G__8262;
        count__7058_8258 = G__8263;
        i__7059_8259 = G__8264;
        continue;
      } else {
        var temp__4126__auto___8265 = cljs.core.seq.call(null, seq__7056_8256);
        if (temp__4126__auto___8265) {
          var seq__7056_8266__$1 = temp__4126__auto___8265;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7056_8266__$1)) {
            var c__4229__auto___8267 = cljs.core.chunk_first.call(null, seq__7056_8266__$1);
            var G__8268 = cljs.core.chunk_rest.call(null, seq__7056_8266__$1);
            var G__8269 = c__4229__auto___8267;
            var G__8270 = cljs.core.count.call(null, c__4229__auto___8267);
            var G__8271 = 0;
            seq__7056_8256 = G__8268;
            chunk__7057_8257 = G__8269;
            count__7058_8258 = G__8270;
            i__7059_8259 = G__8271;
            continue;
          } else {
            var arg__4902__auto___8272 = cljs.core.first.call(null, seq__7056_8266__$1);
            a__4901__auto__.push(arg__4902__auto___8272);
            var G__8273 = cljs.core.next.call(null, seq__7056_8266__$1);
            var G__8274 = null;
            var G__8275 = 0;
            var G__8276 = 0;
            seq__7056_8256 = G__8273;
            chunk__7057_8257 = G__8274;
            count__7058_8258 = G__8275;
            i__7059_8259 = G__8276;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.cite.apply(null, a__4901__auto__);
  };
  var cite = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cite__delegate.call(this, args__4900__auto__);
  };
  cite.cljs$lang$maxFixedArity = 0;
  cite.cljs$lang$applyTo = function(arglist__8277) {
    var args__4900__auto__ = cljs.core.seq(arglist__8277);
    return cite__delegate(args__4900__auto__);
  };
  cite.cljs$core$IFn$_invoke$arity$variadic = cite__delegate;
  return cite;
}();
quiescent.dom.code = function() {
  var code__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7064_8278 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7065_8279 = null;
    var count__7066_8280 = 0;
    var i__7067_8281 = 0;
    while (true) {
      if (i__7067_8281 < count__7066_8280) {
        var arg__4902__auto___8282 = cljs.core._nth.call(null, chunk__7065_8279, i__7067_8281);
        a__4901__auto__.push(arg__4902__auto___8282);
        var G__8283 = seq__7064_8278;
        var G__8284 = chunk__7065_8279;
        var G__8285 = count__7066_8280;
        var G__8286 = i__7067_8281 + 1;
        seq__7064_8278 = G__8283;
        chunk__7065_8279 = G__8284;
        count__7066_8280 = G__8285;
        i__7067_8281 = G__8286;
        continue;
      } else {
        var temp__4126__auto___8287 = cljs.core.seq.call(null, seq__7064_8278);
        if (temp__4126__auto___8287) {
          var seq__7064_8288__$1 = temp__4126__auto___8287;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7064_8288__$1)) {
            var c__4229__auto___8289 = cljs.core.chunk_first.call(null, seq__7064_8288__$1);
            var G__8290 = cljs.core.chunk_rest.call(null, seq__7064_8288__$1);
            var G__8291 = c__4229__auto___8289;
            var G__8292 = cljs.core.count.call(null, c__4229__auto___8289);
            var G__8293 = 0;
            seq__7064_8278 = G__8290;
            chunk__7065_8279 = G__8291;
            count__7066_8280 = G__8292;
            i__7067_8281 = G__8293;
            continue;
          } else {
            var arg__4902__auto___8294 = cljs.core.first.call(null, seq__7064_8288__$1);
            a__4901__auto__.push(arg__4902__auto___8294);
            var G__8295 = cljs.core.next.call(null, seq__7064_8288__$1);
            var G__8296 = null;
            var G__8297 = 0;
            var G__8298 = 0;
            seq__7064_8278 = G__8295;
            chunk__7065_8279 = G__8296;
            count__7066_8280 = G__8297;
            i__7067_8281 = G__8298;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.code.apply(null, a__4901__auto__);
  };
  var code = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return code__delegate.call(this, args__4900__auto__);
  };
  code.cljs$lang$maxFixedArity = 0;
  code.cljs$lang$applyTo = function(arglist__8299) {
    var args__4900__auto__ = cljs.core.seq(arglist__8299);
    return code__delegate(args__4900__auto__);
  };
  code.cljs$core$IFn$_invoke$arity$variadic = code__delegate;
  return code;
}();
quiescent.dom.col = function() {
  var col__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7072_8300 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7073_8301 = null;
    var count__7074_8302 = 0;
    var i__7075_8303 = 0;
    while (true) {
      if (i__7075_8303 < count__7074_8302) {
        var arg__4902__auto___8304 = cljs.core._nth.call(null, chunk__7073_8301, i__7075_8303);
        a__4901__auto__.push(arg__4902__auto___8304);
        var G__8305 = seq__7072_8300;
        var G__8306 = chunk__7073_8301;
        var G__8307 = count__7074_8302;
        var G__8308 = i__7075_8303 + 1;
        seq__7072_8300 = G__8305;
        chunk__7073_8301 = G__8306;
        count__7074_8302 = G__8307;
        i__7075_8303 = G__8308;
        continue;
      } else {
        var temp__4126__auto___8309 = cljs.core.seq.call(null, seq__7072_8300);
        if (temp__4126__auto___8309) {
          var seq__7072_8310__$1 = temp__4126__auto___8309;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7072_8310__$1)) {
            var c__4229__auto___8311 = cljs.core.chunk_first.call(null, seq__7072_8310__$1);
            var G__8312 = cljs.core.chunk_rest.call(null, seq__7072_8310__$1);
            var G__8313 = c__4229__auto___8311;
            var G__8314 = cljs.core.count.call(null, c__4229__auto___8311);
            var G__8315 = 0;
            seq__7072_8300 = G__8312;
            chunk__7073_8301 = G__8313;
            count__7074_8302 = G__8314;
            i__7075_8303 = G__8315;
            continue;
          } else {
            var arg__4902__auto___8316 = cljs.core.first.call(null, seq__7072_8310__$1);
            a__4901__auto__.push(arg__4902__auto___8316);
            var G__8317 = cljs.core.next.call(null, seq__7072_8310__$1);
            var G__8318 = null;
            var G__8319 = 0;
            var G__8320 = 0;
            seq__7072_8300 = G__8317;
            chunk__7073_8301 = G__8318;
            count__7074_8302 = G__8319;
            i__7075_8303 = G__8320;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.col.apply(null, a__4901__auto__);
  };
  var col = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return col__delegate.call(this, args__4900__auto__);
  };
  col.cljs$lang$maxFixedArity = 0;
  col.cljs$lang$applyTo = function(arglist__8321) {
    var args__4900__auto__ = cljs.core.seq(arglist__8321);
    return col__delegate(args__4900__auto__);
  };
  col.cljs$core$IFn$_invoke$arity$variadic = col__delegate;
  return col;
}();
quiescent.dom.colgroup = function() {
  var colgroup__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7080_8322 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7081_8323 = null;
    var count__7082_8324 = 0;
    var i__7083_8325 = 0;
    while (true) {
      if (i__7083_8325 < count__7082_8324) {
        var arg__4902__auto___8326 = cljs.core._nth.call(null, chunk__7081_8323, i__7083_8325);
        a__4901__auto__.push(arg__4902__auto___8326);
        var G__8327 = seq__7080_8322;
        var G__8328 = chunk__7081_8323;
        var G__8329 = count__7082_8324;
        var G__8330 = i__7083_8325 + 1;
        seq__7080_8322 = G__8327;
        chunk__7081_8323 = G__8328;
        count__7082_8324 = G__8329;
        i__7083_8325 = G__8330;
        continue;
      } else {
        var temp__4126__auto___8331 = cljs.core.seq.call(null, seq__7080_8322);
        if (temp__4126__auto___8331) {
          var seq__7080_8332__$1 = temp__4126__auto___8331;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7080_8332__$1)) {
            var c__4229__auto___8333 = cljs.core.chunk_first.call(null, seq__7080_8332__$1);
            var G__8334 = cljs.core.chunk_rest.call(null, seq__7080_8332__$1);
            var G__8335 = c__4229__auto___8333;
            var G__8336 = cljs.core.count.call(null, c__4229__auto___8333);
            var G__8337 = 0;
            seq__7080_8322 = G__8334;
            chunk__7081_8323 = G__8335;
            count__7082_8324 = G__8336;
            i__7083_8325 = G__8337;
            continue;
          } else {
            var arg__4902__auto___8338 = cljs.core.first.call(null, seq__7080_8332__$1);
            a__4901__auto__.push(arg__4902__auto___8338);
            var G__8339 = cljs.core.next.call(null, seq__7080_8332__$1);
            var G__8340 = null;
            var G__8341 = 0;
            var G__8342 = 0;
            seq__7080_8322 = G__8339;
            chunk__7081_8323 = G__8340;
            count__7082_8324 = G__8341;
            i__7083_8325 = G__8342;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.colgroup.apply(null, a__4901__auto__);
  };
  var colgroup = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return colgroup__delegate.call(this, args__4900__auto__);
  };
  colgroup.cljs$lang$maxFixedArity = 0;
  colgroup.cljs$lang$applyTo = function(arglist__8343) {
    var args__4900__auto__ = cljs.core.seq(arglist__8343);
    return colgroup__delegate(args__4900__auto__);
  };
  colgroup.cljs$core$IFn$_invoke$arity$variadic = colgroup__delegate;
  return colgroup;
}();
quiescent.dom.data = function() {
  var data__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7088_8344 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7089_8345 = null;
    var count__7090_8346 = 0;
    var i__7091_8347 = 0;
    while (true) {
      if (i__7091_8347 < count__7090_8346) {
        var arg__4902__auto___8348 = cljs.core._nth.call(null, chunk__7089_8345, i__7091_8347);
        a__4901__auto__.push(arg__4902__auto___8348);
        var G__8349 = seq__7088_8344;
        var G__8350 = chunk__7089_8345;
        var G__8351 = count__7090_8346;
        var G__8352 = i__7091_8347 + 1;
        seq__7088_8344 = G__8349;
        chunk__7089_8345 = G__8350;
        count__7090_8346 = G__8351;
        i__7091_8347 = G__8352;
        continue;
      } else {
        var temp__4126__auto___8353 = cljs.core.seq.call(null, seq__7088_8344);
        if (temp__4126__auto___8353) {
          var seq__7088_8354__$1 = temp__4126__auto___8353;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7088_8354__$1)) {
            var c__4229__auto___8355 = cljs.core.chunk_first.call(null, seq__7088_8354__$1);
            var G__8356 = cljs.core.chunk_rest.call(null, seq__7088_8354__$1);
            var G__8357 = c__4229__auto___8355;
            var G__8358 = cljs.core.count.call(null, c__4229__auto___8355);
            var G__8359 = 0;
            seq__7088_8344 = G__8356;
            chunk__7089_8345 = G__8357;
            count__7090_8346 = G__8358;
            i__7091_8347 = G__8359;
            continue;
          } else {
            var arg__4902__auto___8360 = cljs.core.first.call(null, seq__7088_8354__$1);
            a__4901__auto__.push(arg__4902__auto___8360);
            var G__8361 = cljs.core.next.call(null, seq__7088_8354__$1);
            var G__8362 = null;
            var G__8363 = 0;
            var G__8364 = 0;
            seq__7088_8344 = G__8361;
            chunk__7089_8345 = G__8362;
            count__7090_8346 = G__8363;
            i__7091_8347 = G__8364;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.data.apply(null, a__4901__auto__);
  };
  var data = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return data__delegate.call(this, args__4900__auto__);
  };
  data.cljs$lang$maxFixedArity = 0;
  data.cljs$lang$applyTo = function(arglist__8365) {
    var args__4900__auto__ = cljs.core.seq(arglist__8365);
    return data__delegate(args__4900__auto__);
  };
  data.cljs$core$IFn$_invoke$arity$variadic = data__delegate;
  return data;
}();
quiescent.dom.datalist = function() {
  var datalist__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7096_8366 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7097_8367 = null;
    var count__7098_8368 = 0;
    var i__7099_8369 = 0;
    while (true) {
      if (i__7099_8369 < count__7098_8368) {
        var arg__4902__auto___8370 = cljs.core._nth.call(null, chunk__7097_8367, i__7099_8369);
        a__4901__auto__.push(arg__4902__auto___8370);
        var G__8371 = seq__7096_8366;
        var G__8372 = chunk__7097_8367;
        var G__8373 = count__7098_8368;
        var G__8374 = i__7099_8369 + 1;
        seq__7096_8366 = G__8371;
        chunk__7097_8367 = G__8372;
        count__7098_8368 = G__8373;
        i__7099_8369 = G__8374;
        continue;
      } else {
        var temp__4126__auto___8375 = cljs.core.seq.call(null, seq__7096_8366);
        if (temp__4126__auto___8375) {
          var seq__7096_8376__$1 = temp__4126__auto___8375;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7096_8376__$1)) {
            var c__4229__auto___8377 = cljs.core.chunk_first.call(null, seq__7096_8376__$1);
            var G__8378 = cljs.core.chunk_rest.call(null, seq__7096_8376__$1);
            var G__8379 = c__4229__auto___8377;
            var G__8380 = cljs.core.count.call(null, c__4229__auto___8377);
            var G__8381 = 0;
            seq__7096_8366 = G__8378;
            chunk__7097_8367 = G__8379;
            count__7098_8368 = G__8380;
            i__7099_8369 = G__8381;
            continue;
          } else {
            var arg__4902__auto___8382 = cljs.core.first.call(null, seq__7096_8376__$1);
            a__4901__auto__.push(arg__4902__auto___8382);
            var G__8383 = cljs.core.next.call(null, seq__7096_8376__$1);
            var G__8384 = null;
            var G__8385 = 0;
            var G__8386 = 0;
            seq__7096_8366 = G__8383;
            chunk__7097_8367 = G__8384;
            count__7098_8368 = G__8385;
            i__7099_8369 = G__8386;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.datalist.apply(null, a__4901__auto__);
  };
  var datalist = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return datalist__delegate.call(this, args__4900__auto__);
  };
  datalist.cljs$lang$maxFixedArity = 0;
  datalist.cljs$lang$applyTo = function(arglist__8387) {
    var args__4900__auto__ = cljs.core.seq(arglist__8387);
    return datalist__delegate(args__4900__auto__);
  };
  datalist.cljs$core$IFn$_invoke$arity$variadic = datalist__delegate;
  return datalist;
}();
quiescent.dom.dd = function() {
  var dd__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7104_8388 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7105_8389 = null;
    var count__7106_8390 = 0;
    var i__7107_8391 = 0;
    while (true) {
      if (i__7107_8391 < count__7106_8390) {
        var arg__4902__auto___8392 = cljs.core._nth.call(null, chunk__7105_8389, i__7107_8391);
        a__4901__auto__.push(arg__4902__auto___8392);
        var G__8393 = seq__7104_8388;
        var G__8394 = chunk__7105_8389;
        var G__8395 = count__7106_8390;
        var G__8396 = i__7107_8391 + 1;
        seq__7104_8388 = G__8393;
        chunk__7105_8389 = G__8394;
        count__7106_8390 = G__8395;
        i__7107_8391 = G__8396;
        continue;
      } else {
        var temp__4126__auto___8397 = cljs.core.seq.call(null, seq__7104_8388);
        if (temp__4126__auto___8397) {
          var seq__7104_8398__$1 = temp__4126__auto___8397;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7104_8398__$1)) {
            var c__4229__auto___8399 = cljs.core.chunk_first.call(null, seq__7104_8398__$1);
            var G__8400 = cljs.core.chunk_rest.call(null, seq__7104_8398__$1);
            var G__8401 = c__4229__auto___8399;
            var G__8402 = cljs.core.count.call(null, c__4229__auto___8399);
            var G__8403 = 0;
            seq__7104_8388 = G__8400;
            chunk__7105_8389 = G__8401;
            count__7106_8390 = G__8402;
            i__7107_8391 = G__8403;
            continue;
          } else {
            var arg__4902__auto___8404 = cljs.core.first.call(null, seq__7104_8398__$1);
            a__4901__auto__.push(arg__4902__auto___8404);
            var G__8405 = cljs.core.next.call(null, seq__7104_8398__$1);
            var G__8406 = null;
            var G__8407 = 0;
            var G__8408 = 0;
            seq__7104_8388 = G__8405;
            chunk__7105_8389 = G__8406;
            count__7106_8390 = G__8407;
            i__7107_8391 = G__8408;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.dd.apply(null, a__4901__auto__);
  };
  var dd = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return dd__delegate.call(this, args__4900__auto__);
  };
  dd.cljs$lang$maxFixedArity = 0;
  dd.cljs$lang$applyTo = function(arglist__8409) {
    var args__4900__auto__ = cljs.core.seq(arglist__8409);
    return dd__delegate(args__4900__auto__);
  };
  dd.cljs$core$IFn$_invoke$arity$variadic = dd__delegate;
  return dd;
}();
quiescent.dom.del = function() {
  var del__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7112_8410 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7113_8411 = null;
    var count__7114_8412 = 0;
    var i__7115_8413 = 0;
    while (true) {
      if (i__7115_8413 < count__7114_8412) {
        var arg__4902__auto___8414 = cljs.core._nth.call(null, chunk__7113_8411, i__7115_8413);
        a__4901__auto__.push(arg__4902__auto___8414);
        var G__8415 = seq__7112_8410;
        var G__8416 = chunk__7113_8411;
        var G__8417 = count__7114_8412;
        var G__8418 = i__7115_8413 + 1;
        seq__7112_8410 = G__8415;
        chunk__7113_8411 = G__8416;
        count__7114_8412 = G__8417;
        i__7115_8413 = G__8418;
        continue;
      } else {
        var temp__4126__auto___8419 = cljs.core.seq.call(null, seq__7112_8410);
        if (temp__4126__auto___8419) {
          var seq__7112_8420__$1 = temp__4126__auto___8419;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7112_8420__$1)) {
            var c__4229__auto___8421 = cljs.core.chunk_first.call(null, seq__7112_8420__$1);
            var G__8422 = cljs.core.chunk_rest.call(null, seq__7112_8420__$1);
            var G__8423 = c__4229__auto___8421;
            var G__8424 = cljs.core.count.call(null, c__4229__auto___8421);
            var G__8425 = 0;
            seq__7112_8410 = G__8422;
            chunk__7113_8411 = G__8423;
            count__7114_8412 = G__8424;
            i__7115_8413 = G__8425;
            continue;
          } else {
            var arg__4902__auto___8426 = cljs.core.first.call(null, seq__7112_8420__$1);
            a__4901__auto__.push(arg__4902__auto___8426);
            var G__8427 = cljs.core.next.call(null, seq__7112_8420__$1);
            var G__8428 = null;
            var G__8429 = 0;
            var G__8430 = 0;
            seq__7112_8410 = G__8427;
            chunk__7113_8411 = G__8428;
            count__7114_8412 = G__8429;
            i__7115_8413 = G__8430;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.del.apply(null, a__4901__auto__);
  };
  var del = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return del__delegate.call(this, args__4900__auto__);
  };
  del.cljs$lang$maxFixedArity = 0;
  del.cljs$lang$applyTo = function(arglist__8431) {
    var args__4900__auto__ = cljs.core.seq(arglist__8431);
    return del__delegate(args__4900__auto__);
  };
  del.cljs$core$IFn$_invoke$arity$variadic = del__delegate;
  return del;
}();
quiescent.dom.details = function() {
  var details__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7120_8432 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7121_8433 = null;
    var count__7122_8434 = 0;
    var i__7123_8435 = 0;
    while (true) {
      if (i__7123_8435 < count__7122_8434) {
        var arg__4902__auto___8436 = cljs.core._nth.call(null, chunk__7121_8433, i__7123_8435);
        a__4901__auto__.push(arg__4902__auto___8436);
        var G__8437 = seq__7120_8432;
        var G__8438 = chunk__7121_8433;
        var G__8439 = count__7122_8434;
        var G__8440 = i__7123_8435 + 1;
        seq__7120_8432 = G__8437;
        chunk__7121_8433 = G__8438;
        count__7122_8434 = G__8439;
        i__7123_8435 = G__8440;
        continue;
      } else {
        var temp__4126__auto___8441 = cljs.core.seq.call(null, seq__7120_8432);
        if (temp__4126__auto___8441) {
          var seq__7120_8442__$1 = temp__4126__auto___8441;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7120_8442__$1)) {
            var c__4229__auto___8443 = cljs.core.chunk_first.call(null, seq__7120_8442__$1);
            var G__8444 = cljs.core.chunk_rest.call(null, seq__7120_8442__$1);
            var G__8445 = c__4229__auto___8443;
            var G__8446 = cljs.core.count.call(null, c__4229__auto___8443);
            var G__8447 = 0;
            seq__7120_8432 = G__8444;
            chunk__7121_8433 = G__8445;
            count__7122_8434 = G__8446;
            i__7123_8435 = G__8447;
            continue;
          } else {
            var arg__4902__auto___8448 = cljs.core.first.call(null, seq__7120_8442__$1);
            a__4901__auto__.push(arg__4902__auto___8448);
            var G__8449 = cljs.core.next.call(null, seq__7120_8442__$1);
            var G__8450 = null;
            var G__8451 = 0;
            var G__8452 = 0;
            seq__7120_8432 = G__8449;
            chunk__7121_8433 = G__8450;
            count__7122_8434 = G__8451;
            i__7123_8435 = G__8452;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.details.apply(null, a__4901__auto__);
  };
  var details = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return details__delegate.call(this, args__4900__auto__);
  };
  details.cljs$lang$maxFixedArity = 0;
  details.cljs$lang$applyTo = function(arglist__8453) {
    var args__4900__auto__ = cljs.core.seq(arglist__8453);
    return details__delegate(args__4900__auto__);
  };
  details.cljs$core$IFn$_invoke$arity$variadic = details__delegate;
  return details;
}();
quiescent.dom.dfn = function() {
  var dfn__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7128_8454 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7129_8455 = null;
    var count__7130_8456 = 0;
    var i__7131_8457 = 0;
    while (true) {
      if (i__7131_8457 < count__7130_8456) {
        var arg__4902__auto___8458 = cljs.core._nth.call(null, chunk__7129_8455, i__7131_8457);
        a__4901__auto__.push(arg__4902__auto___8458);
        var G__8459 = seq__7128_8454;
        var G__8460 = chunk__7129_8455;
        var G__8461 = count__7130_8456;
        var G__8462 = i__7131_8457 + 1;
        seq__7128_8454 = G__8459;
        chunk__7129_8455 = G__8460;
        count__7130_8456 = G__8461;
        i__7131_8457 = G__8462;
        continue;
      } else {
        var temp__4126__auto___8463 = cljs.core.seq.call(null, seq__7128_8454);
        if (temp__4126__auto___8463) {
          var seq__7128_8464__$1 = temp__4126__auto___8463;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7128_8464__$1)) {
            var c__4229__auto___8465 = cljs.core.chunk_first.call(null, seq__7128_8464__$1);
            var G__8466 = cljs.core.chunk_rest.call(null, seq__7128_8464__$1);
            var G__8467 = c__4229__auto___8465;
            var G__8468 = cljs.core.count.call(null, c__4229__auto___8465);
            var G__8469 = 0;
            seq__7128_8454 = G__8466;
            chunk__7129_8455 = G__8467;
            count__7130_8456 = G__8468;
            i__7131_8457 = G__8469;
            continue;
          } else {
            var arg__4902__auto___8470 = cljs.core.first.call(null, seq__7128_8464__$1);
            a__4901__auto__.push(arg__4902__auto___8470);
            var G__8471 = cljs.core.next.call(null, seq__7128_8464__$1);
            var G__8472 = null;
            var G__8473 = 0;
            var G__8474 = 0;
            seq__7128_8454 = G__8471;
            chunk__7129_8455 = G__8472;
            count__7130_8456 = G__8473;
            i__7131_8457 = G__8474;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.dfn.apply(null, a__4901__auto__);
  };
  var dfn = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return dfn__delegate.call(this, args__4900__auto__);
  };
  dfn.cljs$lang$maxFixedArity = 0;
  dfn.cljs$lang$applyTo = function(arglist__8475) {
    var args__4900__auto__ = cljs.core.seq(arglist__8475);
    return dfn__delegate(args__4900__auto__);
  };
  dfn.cljs$core$IFn$_invoke$arity$variadic = dfn__delegate;
  return dfn;
}();
quiescent.dom.div = function() {
  var div__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7136_8476 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7137_8477 = null;
    var count__7138_8478 = 0;
    var i__7139_8479 = 0;
    while (true) {
      if (i__7139_8479 < count__7138_8478) {
        var arg__4902__auto___8480 = cljs.core._nth.call(null, chunk__7137_8477, i__7139_8479);
        a__4901__auto__.push(arg__4902__auto___8480);
        var G__8481 = seq__7136_8476;
        var G__8482 = chunk__7137_8477;
        var G__8483 = count__7138_8478;
        var G__8484 = i__7139_8479 + 1;
        seq__7136_8476 = G__8481;
        chunk__7137_8477 = G__8482;
        count__7138_8478 = G__8483;
        i__7139_8479 = G__8484;
        continue;
      } else {
        var temp__4126__auto___8485 = cljs.core.seq.call(null, seq__7136_8476);
        if (temp__4126__auto___8485) {
          var seq__7136_8486__$1 = temp__4126__auto___8485;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7136_8486__$1)) {
            var c__4229__auto___8487 = cljs.core.chunk_first.call(null, seq__7136_8486__$1);
            var G__8488 = cljs.core.chunk_rest.call(null, seq__7136_8486__$1);
            var G__8489 = c__4229__auto___8487;
            var G__8490 = cljs.core.count.call(null, c__4229__auto___8487);
            var G__8491 = 0;
            seq__7136_8476 = G__8488;
            chunk__7137_8477 = G__8489;
            count__7138_8478 = G__8490;
            i__7139_8479 = G__8491;
            continue;
          } else {
            var arg__4902__auto___8492 = cljs.core.first.call(null, seq__7136_8486__$1);
            a__4901__auto__.push(arg__4902__auto___8492);
            var G__8493 = cljs.core.next.call(null, seq__7136_8486__$1);
            var G__8494 = null;
            var G__8495 = 0;
            var G__8496 = 0;
            seq__7136_8476 = G__8493;
            chunk__7137_8477 = G__8494;
            count__7138_8478 = G__8495;
            i__7139_8479 = G__8496;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.div.apply(null, a__4901__auto__);
  };
  var div = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return div__delegate.call(this, args__4900__auto__);
  };
  div.cljs$lang$maxFixedArity = 0;
  div.cljs$lang$applyTo = function(arglist__8497) {
    var args__4900__auto__ = cljs.core.seq(arglist__8497);
    return div__delegate(args__4900__auto__);
  };
  div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
  return div;
}();
quiescent.dom.dl = function() {
  var dl__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7144_8498 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7145_8499 = null;
    var count__7146_8500 = 0;
    var i__7147_8501 = 0;
    while (true) {
      if (i__7147_8501 < count__7146_8500) {
        var arg__4902__auto___8502 = cljs.core._nth.call(null, chunk__7145_8499, i__7147_8501);
        a__4901__auto__.push(arg__4902__auto___8502);
        var G__8503 = seq__7144_8498;
        var G__8504 = chunk__7145_8499;
        var G__8505 = count__7146_8500;
        var G__8506 = i__7147_8501 + 1;
        seq__7144_8498 = G__8503;
        chunk__7145_8499 = G__8504;
        count__7146_8500 = G__8505;
        i__7147_8501 = G__8506;
        continue;
      } else {
        var temp__4126__auto___8507 = cljs.core.seq.call(null, seq__7144_8498);
        if (temp__4126__auto___8507) {
          var seq__7144_8508__$1 = temp__4126__auto___8507;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7144_8508__$1)) {
            var c__4229__auto___8509 = cljs.core.chunk_first.call(null, seq__7144_8508__$1);
            var G__8510 = cljs.core.chunk_rest.call(null, seq__7144_8508__$1);
            var G__8511 = c__4229__auto___8509;
            var G__8512 = cljs.core.count.call(null, c__4229__auto___8509);
            var G__8513 = 0;
            seq__7144_8498 = G__8510;
            chunk__7145_8499 = G__8511;
            count__7146_8500 = G__8512;
            i__7147_8501 = G__8513;
            continue;
          } else {
            var arg__4902__auto___8514 = cljs.core.first.call(null, seq__7144_8508__$1);
            a__4901__auto__.push(arg__4902__auto___8514);
            var G__8515 = cljs.core.next.call(null, seq__7144_8508__$1);
            var G__8516 = null;
            var G__8517 = 0;
            var G__8518 = 0;
            seq__7144_8498 = G__8515;
            chunk__7145_8499 = G__8516;
            count__7146_8500 = G__8517;
            i__7147_8501 = G__8518;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.dl.apply(null, a__4901__auto__);
  };
  var dl = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return dl__delegate.call(this, args__4900__auto__);
  };
  dl.cljs$lang$maxFixedArity = 0;
  dl.cljs$lang$applyTo = function(arglist__8519) {
    var args__4900__auto__ = cljs.core.seq(arglist__8519);
    return dl__delegate(args__4900__auto__);
  };
  dl.cljs$core$IFn$_invoke$arity$variadic = dl__delegate;
  return dl;
}();
quiescent.dom.dt = function() {
  var dt__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7152_8520 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7153_8521 = null;
    var count__7154_8522 = 0;
    var i__7155_8523 = 0;
    while (true) {
      if (i__7155_8523 < count__7154_8522) {
        var arg__4902__auto___8524 = cljs.core._nth.call(null, chunk__7153_8521, i__7155_8523);
        a__4901__auto__.push(arg__4902__auto___8524);
        var G__8525 = seq__7152_8520;
        var G__8526 = chunk__7153_8521;
        var G__8527 = count__7154_8522;
        var G__8528 = i__7155_8523 + 1;
        seq__7152_8520 = G__8525;
        chunk__7153_8521 = G__8526;
        count__7154_8522 = G__8527;
        i__7155_8523 = G__8528;
        continue;
      } else {
        var temp__4126__auto___8529 = cljs.core.seq.call(null, seq__7152_8520);
        if (temp__4126__auto___8529) {
          var seq__7152_8530__$1 = temp__4126__auto___8529;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7152_8530__$1)) {
            var c__4229__auto___8531 = cljs.core.chunk_first.call(null, seq__7152_8530__$1);
            var G__8532 = cljs.core.chunk_rest.call(null, seq__7152_8530__$1);
            var G__8533 = c__4229__auto___8531;
            var G__8534 = cljs.core.count.call(null, c__4229__auto___8531);
            var G__8535 = 0;
            seq__7152_8520 = G__8532;
            chunk__7153_8521 = G__8533;
            count__7154_8522 = G__8534;
            i__7155_8523 = G__8535;
            continue;
          } else {
            var arg__4902__auto___8536 = cljs.core.first.call(null, seq__7152_8530__$1);
            a__4901__auto__.push(arg__4902__auto___8536);
            var G__8537 = cljs.core.next.call(null, seq__7152_8530__$1);
            var G__8538 = null;
            var G__8539 = 0;
            var G__8540 = 0;
            seq__7152_8520 = G__8537;
            chunk__7153_8521 = G__8538;
            count__7154_8522 = G__8539;
            i__7155_8523 = G__8540;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.dt.apply(null, a__4901__auto__);
  };
  var dt = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return dt__delegate.call(this, args__4900__auto__);
  };
  dt.cljs$lang$maxFixedArity = 0;
  dt.cljs$lang$applyTo = function(arglist__8541) {
    var args__4900__auto__ = cljs.core.seq(arglist__8541);
    return dt__delegate(args__4900__auto__);
  };
  dt.cljs$core$IFn$_invoke$arity$variadic = dt__delegate;
  return dt;
}();
quiescent.dom.em = function() {
  var em__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7160_8542 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7161_8543 = null;
    var count__7162_8544 = 0;
    var i__7163_8545 = 0;
    while (true) {
      if (i__7163_8545 < count__7162_8544) {
        var arg__4902__auto___8546 = cljs.core._nth.call(null, chunk__7161_8543, i__7163_8545);
        a__4901__auto__.push(arg__4902__auto___8546);
        var G__8547 = seq__7160_8542;
        var G__8548 = chunk__7161_8543;
        var G__8549 = count__7162_8544;
        var G__8550 = i__7163_8545 + 1;
        seq__7160_8542 = G__8547;
        chunk__7161_8543 = G__8548;
        count__7162_8544 = G__8549;
        i__7163_8545 = G__8550;
        continue;
      } else {
        var temp__4126__auto___8551 = cljs.core.seq.call(null, seq__7160_8542);
        if (temp__4126__auto___8551) {
          var seq__7160_8552__$1 = temp__4126__auto___8551;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7160_8552__$1)) {
            var c__4229__auto___8553 = cljs.core.chunk_first.call(null, seq__7160_8552__$1);
            var G__8554 = cljs.core.chunk_rest.call(null, seq__7160_8552__$1);
            var G__8555 = c__4229__auto___8553;
            var G__8556 = cljs.core.count.call(null, c__4229__auto___8553);
            var G__8557 = 0;
            seq__7160_8542 = G__8554;
            chunk__7161_8543 = G__8555;
            count__7162_8544 = G__8556;
            i__7163_8545 = G__8557;
            continue;
          } else {
            var arg__4902__auto___8558 = cljs.core.first.call(null, seq__7160_8552__$1);
            a__4901__auto__.push(arg__4902__auto___8558);
            var G__8559 = cljs.core.next.call(null, seq__7160_8552__$1);
            var G__8560 = null;
            var G__8561 = 0;
            var G__8562 = 0;
            seq__7160_8542 = G__8559;
            chunk__7161_8543 = G__8560;
            count__7162_8544 = G__8561;
            i__7163_8545 = G__8562;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.em.apply(null, a__4901__auto__);
  };
  var em = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return em__delegate.call(this, args__4900__auto__);
  };
  em.cljs$lang$maxFixedArity = 0;
  em.cljs$lang$applyTo = function(arglist__8563) {
    var args__4900__auto__ = cljs.core.seq(arglist__8563);
    return em__delegate(args__4900__auto__);
  };
  em.cljs$core$IFn$_invoke$arity$variadic = em__delegate;
  return em;
}();
quiescent.dom.embed = function() {
  var embed__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7176_8564 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7177_8565 = null;
    var count__7178_8566 = 0;
    var i__7179_8567 = 0;
    while (true) {
      if (i__7179_8567 < count__7178_8566) {
        var arg__4902__auto___8568 = cljs.core._nth.call(null, chunk__7177_8565, i__7179_8567);
        a__4901__auto__.push(arg__4902__auto___8568);
        var G__8569 = seq__7176_8564;
        var G__8570 = chunk__7177_8565;
        var G__8571 = count__7178_8566;
        var G__8572 = i__7179_8567 + 1;
        seq__7176_8564 = G__8569;
        chunk__7177_8565 = G__8570;
        count__7178_8566 = G__8571;
        i__7179_8567 = G__8572;
        continue;
      } else {
        var temp__4126__auto___8573 = cljs.core.seq.call(null, seq__7176_8564);
        if (temp__4126__auto___8573) {
          var seq__7176_8574__$1 = temp__4126__auto___8573;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7176_8574__$1)) {
            var c__4229__auto___8575 = cljs.core.chunk_first.call(null, seq__7176_8574__$1);
            var G__8576 = cljs.core.chunk_rest.call(null, seq__7176_8574__$1);
            var G__8577 = c__4229__auto___8575;
            var G__8578 = cljs.core.count.call(null, c__4229__auto___8575);
            var G__8579 = 0;
            seq__7176_8564 = G__8576;
            chunk__7177_8565 = G__8577;
            count__7178_8566 = G__8578;
            i__7179_8567 = G__8579;
            continue;
          } else {
            var arg__4902__auto___8580 = cljs.core.first.call(null, seq__7176_8574__$1);
            a__4901__auto__.push(arg__4902__auto___8580);
            var G__8581 = cljs.core.next.call(null, seq__7176_8574__$1);
            var G__8582 = null;
            var G__8583 = 0;
            var G__8584 = 0;
            seq__7176_8564 = G__8581;
            chunk__7177_8565 = G__8582;
            count__7178_8566 = G__8583;
            i__7179_8567 = G__8584;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.embed.apply(null, a__4901__auto__);
  };
  var embed = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return embed__delegate.call(this, args__4900__auto__);
  };
  embed.cljs$lang$maxFixedArity = 0;
  embed.cljs$lang$applyTo = function(arglist__8585) {
    var args__4900__auto__ = cljs.core.seq(arglist__8585);
    return embed__delegate(args__4900__auto__);
  };
  embed.cljs$core$IFn$_invoke$arity$variadic = embed__delegate;
  return embed;
}();
quiescent.dom.fieldset = function() {
  var fieldset__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7184_8586 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7185_8587 = null;
    var count__7186_8588 = 0;
    var i__7187_8589 = 0;
    while (true) {
      if (i__7187_8589 < count__7186_8588) {
        var arg__4902__auto___8590 = cljs.core._nth.call(null, chunk__7185_8587, i__7187_8589);
        a__4901__auto__.push(arg__4902__auto___8590);
        var G__8591 = seq__7184_8586;
        var G__8592 = chunk__7185_8587;
        var G__8593 = count__7186_8588;
        var G__8594 = i__7187_8589 + 1;
        seq__7184_8586 = G__8591;
        chunk__7185_8587 = G__8592;
        count__7186_8588 = G__8593;
        i__7187_8589 = G__8594;
        continue;
      } else {
        var temp__4126__auto___8595 = cljs.core.seq.call(null, seq__7184_8586);
        if (temp__4126__auto___8595) {
          var seq__7184_8596__$1 = temp__4126__auto___8595;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7184_8596__$1)) {
            var c__4229__auto___8597 = cljs.core.chunk_first.call(null, seq__7184_8596__$1);
            var G__8598 = cljs.core.chunk_rest.call(null, seq__7184_8596__$1);
            var G__8599 = c__4229__auto___8597;
            var G__8600 = cljs.core.count.call(null, c__4229__auto___8597);
            var G__8601 = 0;
            seq__7184_8586 = G__8598;
            chunk__7185_8587 = G__8599;
            count__7186_8588 = G__8600;
            i__7187_8589 = G__8601;
            continue;
          } else {
            var arg__4902__auto___8602 = cljs.core.first.call(null, seq__7184_8596__$1);
            a__4901__auto__.push(arg__4902__auto___8602);
            var G__8603 = cljs.core.next.call(null, seq__7184_8596__$1);
            var G__8604 = null;
            var G__8605 = 0;
            var G__8606 = 0;
            seq__7184_8586 = G__8603;
            chunk__7185_8587 = G__8604;
            count__7186_8588 = G__8605;
            i__7187_8589 = G__8606;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.fieldset.apply(null, a__4901__auto__);
  };
  var fieldset = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return fieldset__delegate.call(this, args__4900__auto__);
  };
  fieldset.cljs$lang$maxFixedArity = 0;
  fieldset.cljs$lang$applyTo = function(arglist__8607) {
    var args__4900__auto__ = cljs.core.seq(arglist__8607);
    return fieldset__delegate(args__4900__auto__);
  };
  fieldset.cljs$core$IFn$_invoke$arity$variadic = fieldset__delegate;
  return fieldset;
}();
quiescent.dom.figcaption = function() {
  var figcaption__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7192_8608 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7193_8609 = null;
    var count__7194_8610 = 0;
    var i__7195_8611 = 0;
    while (true) {
      if (i__7195_8611 < count__7194_8610) {
        var arg__4902__auto___8612 = cljs.core._nth.call(null, chunk__7193_8609, i__7195_8611);
        a__4901__auto__.push(arg__4902__auto___8612);
        var G__8613 = seq__7192_8608;
        var G__8614 = chunk__7193_8609;
        var G__8615 = count__7194_8610;
        var G__8616 = i__7195_8611 + 1;
        seq__7192_8608 = G__8613;
        chunk__7193_8609 = G__8614;
        count__7194_8610 = G__8615;
        i__7195_8611 = G__8616;
        continue;
      } else {
        var temp__4126__auto___8617 = cljs.core.seq.call(null, seq__7192_8608);
        if (temp__4126__auto___8617) {
          var seq__7192_8618__$1 = temp__4126__auto___8617;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7192_8618__$1)) {
            var c__4229__auto___8619 = cljs.core.chunk_first.call(null, seq__7192_8618__$1);
            var G__8620 = cljs.core.chunk_rest.call(null, seq__7192_8618__$1);
            var G__8621 = c__4229__auto___8619;
            var G__8622 = cljs.core.count.call(null, c__4229__auto___8619);
            var G__8623 = 0;
            seq__7192_8608 = G__8620;
            chunk__7193_8609 = G__8621;
            count__7194_8610 = G__8622;
            i__7195_8611 = G__8623;
            continue;
          } else {
            var arg__4902__auto___8624 = cljs.core.first.call(null, seq__7192_8618__$1);
            a__4901__auto__.push(arg__4902__auto___8624);
            var G__8625 = cljs.core.next.call(null, seq__7192_8618__$1);
            var G__8626 = null;
            var G__8627 = 0;
            var G__8628 = 0;
            seq__7192_8608 = G__8625;
            chunk__7193_8609 = G__8626;
            count__7194_8610 = G__8627;
            i__7195_8611 = G__8628;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.figcaption.apply(null, a__4901__auto__);
  };
  var figcaption = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return figcaption__delegate.call(this, args__4900__auto__);
  };
  figcaption.cljs$lang$maxFixedArity = 0;
  figcaption.cljs$lang$applyTo = function(arglist__8629) {
    var args__4900__auto__ = cljs.core.seq(arglist__8629);
    return figcaption__delegate(args__4900__auto__);
  };
  figcaption.cljs$core$IFn$_invoke$arity$variadic = figcaption__delegate;
  return figcaption;
}();
quiescent.dom.figure = function() {
  var figure__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7200_8630 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7201_8631 = null;
    var count__7202_8632 = 0;
    var i__7203_8633 = 0;
    while (true) {
      if (i__7203_8633 < count__7202_8632) {
        var arg__4902__auto___8634 = cljs.core._nth.call(null, chunk__7201_8631, i__7203_8633);
        a__4901__auto__.push(arg__4902__auto___8634);
        var G__8635 = seq__7200_8630;
        var G__8636 = chunk__7201_8631;
        var G__8637 = count__7202_8632;
        var G__8638 = i__7203_8633 + 1;
        seq__7200_8630 = G__8635;
        chunk__7201_8631 = G__8636;
        count__7202_8632 = G__8637;
        i__7203_8633 = G__8638;
        continue;
      } else {
        var temp__4126__auto___8639 = cljs.core.seq.call(null, seq__7200_8630);
        if (temp__4126__auto___8639) {
          var seq__7200_8640__$1 = temp__4126__auto___8639;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7200_8640__$1)) {
            var c__4229__auto___8641 = cljs.core.chunk_first.call(null, seq__7200_8640__$1);
            var G__8642 = cljs.core.chunk_rest.call(null, seq__7200_8640__$1);
            var G__8643 = c__4229__auto___8641;
            var G__8644 = cljs.core.count.call(null, c__4229__auto___8641);
            var G__8645 = 0;
            seq__7200_8630 = G__8642;
            chunk__7201_8631 = G__8643;
            count__7202_8632 = G__8644;
            i__7203_8633 = G__8645;
            continue;
          } else {
            var arg__4902__auto___8646 = cljs.core.first.call(null, seq__7200_8640__$1);
            a__4901__auto__.push(arg__4902__auto___8646);
            var G__8647 = cljs.core.next.call(null, seq__7200_8640__$1);
            var G__8648 = null;
            var G__8649 = 0;
            var G__8650 = 0;
            seq__7200_8630 = G__8647;
            chunk__7201_8631 = G__8648;
            count__7202_8632 = G__8649;
            i__7203_8633 = G__8650;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.figure.apply(null, a__4901__auto__);
  };
  var figure = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return figure__delegate.call(this, args__4900__auto__);
  };
  figure.cljs$lang$maxFixedArity = 0;
  figure.cljs$lang$applyTo = function(arglist__8651) {
    var args__4900__auto__ = cljs.core.seq(arglist__8651);
    return figure__delegate(args__4900__auto__);
  };
  figure.cljs$core$IFn$_invoke$arity$variadic = figure__delegate;
  return figure;
}();
quiescent.dom.footer = function() {
  var footer__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7208_8652 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7209_8653 = null;
    var count__7210_8654 = 0;
    var i__7211_8655 = 0;
    while (true) {
      if (i__7211_8655 < count__7210_8654) {
        var arg__4902__auto___8656 = cljs.core._nth.call(null, chunk__7209_8653, i__7211_8655);
        a__4901__auto__.push(arg__4902__auto___8656);
        var G__8657 = seq__7208_8652;
        var G__8658 = chunk__7209_8653;
        var G__8659 = count__7210_8654;
        var G__8660 = i__7211_8655 + 1;
        seq__7208_8652 = G__8657;
        chunk__7209_8653 = G__8658;
        count__7210_8654 = G__8659;
        i__7211_8655 = G__8660;
        continue;
      } else {
        var temp__4126__auto___8661 = cljs.core.seq.call(null, seq__7208_8652);
        if (temp__4126__auto___8661) {
          var seq__7208_8662__$1 = temp__4126__auto___8661;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7208_8662__$1)) {
            var c__4229__auto___8663 = cljs.core.chunk_first.call(null, seq__7208_8662__$1);
            var G__8664 = cljs.core.chunk_rest.call(null, seq__7208_8662__$1);
            var G__8665 = c__4229__auto___8663;
            var G__8666 = cljs.core.count.call(null, c__4229__auto___8663);
            var G__8667 = 0;
            seq__7208_8652 = G__8664;
            chunk__7209_8653 = G__8665;
            count__7210_8654 = G__8666;
            i__7211_8655 = G__8667;
            continue;
          } else {
            var arg__4902__auto___8668 = cljs.core.first.call(null, seq__7208_8662__$1);
            a__4901__auto__.push(arg__4902__auto___8668);
            var G__8669 = cljs.core.next.call(null, seq__7208_8662__$1);
            var G__8670 = null;
            var G__8671 = 0;
            var G__8672 = 0;
            seq__7208_8652 = G__8669;
            chunk__7209_8653 = G__8670;
            count__7210_8654 = G__8671;
            i__7211_8655 = G__8672;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.footer.apply(null, a__4901__auto__);
  };
  var footer = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return footer__delegate.call(this, args__4900__auto__);
  };
  footer.cljs$lang$maxFixedArity = 0;
  footer.cljs$lang$applyTo = function(arglist__8673) {
    var args__4900__auto__ = cljs.core.seq(arglist__8673);
    return footer__delegate(args__4900__auto__);
  };
  footer.cljs$core$IFn$_invoke$arity$variadic = footer__delegate;
  return footer;
}();
quiescent.dom.form = function() {
  var form__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7216_8674 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7217_8675 = null;
    var count__7218_8676 = 0;
    var i__7219_8677 = 0;
    while (true) {
      if (i__7219_8677 < count__7218_8676) {
        var arg__4902__auto___8678 = cljs.core._nth.call(null, chunk__7217_8675, i__7219_8677);
        a__4901__auto__.push(arg__4902__auto___8678);
        var G__8679 = seq__7216_8674;
        var G__8680 = chunk__7217_8675;
        var G__8681 = count__7218_8676;
        var G__8682 = i__7219_8677 + 1;
        seq__7216_8674 = G__8679;
        chunk__7217_8675 = G__8680;
        count__7218_8676 = G__8681;
        i__7219_8677 = G__8682;
        continue;
      } else {
        var temp__4126__auto___8683 = cljs.core.seq.call(null, seq__7216_8674);
        if (temp__4126__auto___8683) {
          var seq__7216_8684__$1 = temp__4126__auto___8683;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7216_8684__$1)) {
            var c__4229__auto___8685 = cljs.core.chunk_first.call(null, seq__7216_8684__$1);
            var G__8686 = cljs.core.chunk_rest.call(null, seq__7216_8684__$1);
            var G__8687 = c__4229__auto___8685;
            var G__8688 = cljs.core.count.call(null, c__4229__auto___8685);
            var G__8689 = 0;
            seq__7216_8674 = G__8686;
            chunk__7217_8675 = G__8687;
            count__7218_8676 = G__8688;
            i__7219_8677 = G__8689;
            continue;
          } else {
            var arg__4902__auto___8690 = cljs.core.first.call(null, seq__7216_8684__$1);
            a__4901__auto__.push(arg__4902__auto___8690);
            var G__8691 = cljs.core.next.call(null, seq__7216_8684__$1);
            var G__8692 = null;
            var G__8693 = 0;
            var G__8694 = 0;
            seq__7216_8674 = G__8691;
            chunk__7217_8675 = G__8692;
            count__7218_8676 = G__8693;
            i__7219_8677 = G__8694;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.form.apply(null, a__4901__auto__);
  };
  var form = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return form__delegate.call(this, args__4900__auto__);
  };
  form.cljs$lang$maxFixedArity = 0;
  form.cljs$lang$applyTo = function(arglist__8695) {
    var args__4900__auto__ = cljs.core.seq(arglist__8695);
    return form__delegate(args__4900__auto__);
  };
  form.cljs$core$IFn$_invoke$arity$variadic = form__delegate;
  return form;
}();
quiescent.dom.h1 = function() {
  var h1__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7224_8696 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7225_8697 = null;
    var count__7226_8698 = 0;
    var i__7227_8699 = 0;
    while (true) {
      if (i__7227_8699 < count__7226_8698) {
        var arg__4902__auto___8700 = cljs.core._nth.call(null, chunk__7225_8697, i__7227_8699);
        a__4901__auto__.push(arg__4902__auto___8700);
        var G__8701 = seq__7224_8696;
        var G__8702 = chunk__7225_8697;
        var G__8703 = count__7226_8698;
        var G__8704 = i__7227_8699 + 1;
        seq__7224_8696 = G__8701;
        chunk__7225_8697 = G__8702;
        count__7226_8698 = G__8703;
        i__7227_8699 = G__8704;
        continue;
      } else {
        var temp__4126__auto___8705 = cljs.core.seq.call(null, seq__7224_8696);
        if (temp__4126__auto___8705) {
          var seq__7224_8706__$1 = temp__4126__auto___8705;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7224_8706__$1)) {
            var c__4229__auto___8707 = cljs.core.chunk_first.call(null, seq__7224_8706__$1);
            var G__8708 = cljs.core.chunk_rest.call(null, seq__7224_8706__$1);
            var G__8709 = c__4229__auto___8707;
            var G__8710 = cljs.core.count.call(null, c__4229__auto___8707);
            var G__8711 = 0;
            seq__7224_8696 = G__8708;
            chunk__7225_8697 = G__8709;
            count__7226_8698 = G__8710;
            i__7227_8699 = G__8711;
            continue;
          } else {
            var arg__4902__auto___8712 = cljs.core.first.call(null, seq__7224_8706__$1);
            a__4901__auto__.push(arg__4902__auto___8712);
            var G__8713 = cljs.core.next.call(null, seq__7224_8706__$1);
            var G__8714 = null;
            var G__8715 = 0;
            var G__8716 = 0;
            seq__7224_8696 = G__8713;
            chunk__7225_8697 = G__8714;
            count__7226_8698 = G__8715;
            i__7227_8699 = G__8716;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.h1.apply(null, a__4901__auto__);
  };
  var h1 = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return h1__delegate.call(this, args__4900__auto__);
  };
  h1.cljs$lang$maxFixedArity = 0;
  h1.cljs$lang$applyTo = function(arglist__8717) {
    var args__4900__auto__ = cljs.core.seq(arglist__8717);
    return h1__delegate(args__4900__auto__);
  };
  h1.cljs$core$IFn$_invoke$arity$variadic = h1__delegate;
  return h1;
}();
quiescent.dom.h2 = function() {
  var h2__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7232_8718 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7233_8719 = null;
    var count__7234_8720 = 0;
    var i__7235_8721 = 0;
    while (true) {
      if (i__7235_8721 < count__7234_8720) {
        var arg__4902__auto___8722 = cljs.core._nth.call(null, chunk__7233_8719, i__7235_8721);
        a__4901__auto__.push(arg__4902__auto___8722);
        var G__8723 = seq__7232_8718;
        var G__8724 = chunk__7233_8719;
        var G__8725 = count__7234_8720;
        var G__8726 = i__7235_8721 + 1;
        seq__7232_8718 = G__8723;
        chunk__7233_8719 = G__8724;
        count__7234_8720 = G__8725;
        i__7235_8721 = G__8726;
        continue;
      } else {
        var temp__4126__auto___8727 = cljs.core.seq.call(null, seq__7232_8718);
        if (temp__4126__auto___8727) {
          var seq__7232_8728__$1 = temp__4126__auto___8727;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7232_8728__$1)) {
            var c__4229__auto___8729 = cljs.core.chunk_first.call(null, seq__7232_8728__$1);
            var G__8730 = cljs.core.chunk_rest.call(null, seq__7232_8728__$1);
            var G__8731 = c__4229__auto___8729;
            var G__8732 = cljs.core.count.call(null, c__4229__auto___8729);
            var G__8733 = 0;
            seq__7232_8718 = G__8730;
            chunk__7233_8719 = G__8731;
            count__7234_8720 = G__8732;
            i__7235_8721 = G__8733;
            continue;
          } else {
            var arg__4902__auto___8734 = cljs.core.first.call(null, seq__7232_8728__$1);
            a__4901__auto__.push(arg__4902__auto___8734);
            var G__8735 = cljs.core.next.call(null, seq__7232_8728__$1);
            var G__8736 = null;
            var G__8737 = 0;
            var G__8738 = 0;
            seq__7232_8718 = G__8735;
            chunk__7233_8719 = G__8736;
            count__7234_8720 = G__8737;
            i__7235_8721 = G__8738;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.h2.apply(null, a__4901__auto__);
  };
  var h2 = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return h2__delegate.call(this, args__4900__auto__);
  };
  h2.cljs$lang$maxFixedArity = 0;
  h2.cljs$lang$applyTo = function(arglist__8739) {
    var args__4900__auto__ = cljs.core.seq(arglist__8739);
    return h2__delegate(args__4900__auto__);
  };
  h2.cljs$core$IFn$_invoke$arity$variadic = h2__delegate;
  return h2;
}();
quiescent.dom.h3 = function() {
  var h3__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7240_8740 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7241_8741 = null;
    var count__7242_8742 = 0;
    var i__7243_8743 = 0;
    while (true) {
      if (i__7243_8743 < count__7242_8742) {
        var arg__4902__auto___8744 = cljs.core._nth.call(null, chunk__7241_8741, i__7243_8743);
        a__4901__auto__.push(arg__4902__auto___8744);
        var G__8745 = seq__7240_8740;
        var G__8746 = chunk__7241_8741;
        var G__8747 = count__7242_8742;
        var G__8748 = i__7243_8743 + 1;
        seq__7240_8740 = G__8745;
        chunk__7241_8741 = G__8746;
        count__7242_8742 = G__8747;
        i__7243_8743 = G__8748;
        continue;
      } else {
        var temp__4126__auto___8749 = cljs.core.seq.call(null, seq__7240_8740);
        if (temp__4126__auto___8749) {
          var seq__7240_8750__$1 = temp__4126__auto___8749;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7240_8750__$1)) {
            var c__4229__auto___8751 = cljs.core.chunk_first.call(null, seq__7240_8750__$1);
            var G__8752 = cljs.core.chunk_rest.call(null, seq__7240_8750__$1);
            var G__8753 = c__4229__auto___8751;
            var G__8754 = cljs.core.count.call(null, c__4229__auto___8751);
            var G__8755 = 0;
            seq__7240_8740 = G__8752;
            chunk__7241_8741 = G__8753;
            count__7242_8742 = G__8754;
            i__7243_8743 = G__8755;
            continue;
          } else {
            var arg__4902__auto___8756 = cljs.core.first.call(null, seq__7240_8750__$1);
            a__4901__auto__.push(arg__4902__auto___8756);
            var G__8757 = cljs.core.next.call(null, seq__7240_8750__$1);
            var G__8758 = null;
            var G__8759 = 0;
            var G__8760 = 0;
            seq__7240_8740 = G__8757;
            chunk__7241_8741 = G__8758;
            count__7242_8742 = G__8759;
            i__7243_8743 = G__8760;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.h3.apply(null, a__4901__auto__);
  };
  var h3 = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return h3__delegate.call(this, args__4900__auto__);
  };
  h3.cljs$lang$maxFixedArity = 0;
  h3.cljs$lang$applyTo = function(arglist__8761) {
    var args__4900__auto__ = cljs.core.seq(arglist__8761);
    return h3__delegate(args__4900__auto__);
  };
  h3.cljs$core$IFn$_invoke$arity$variadic = h3__delegate;
  return h3;
}();
quiescent.dom.h4 = function() {
  var h4__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7248_8762 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7249_8763 = null;
    var count__7250_8764 = 0;
    var i__7251_8765 = 0;
    while (true) {
      if (i__7251_8765 < count__7250_8764) {
        var arg__4902__auto___8766 = cljs.core._nth.call(null, chunk__7249_8763, i__7251_8765);
        a__4901__auto__.push(arg__4902__auto___8766);
        var G__8767 = seq__7248_8762;
        var G__8768 = chunk__7249_8763;
        var G__8769 = count__7250_8764;
        var G__8770 = i__7251_8765 + 1;
        seq__7248_8762 = G__8767;
        chunk__7249_8763 = G__8768;
        count__7250_8764 = G__8769;
        i__7251_8765 = G__8770;
        continue;
      } else {
        var temp__4126__auto___8771 = cljs.core.seq.call(null, seq__7248_8762);
        if (temp__4126__auto___8771) {
          var seq__7248_8772__$1 = temp__4126__auto___8771;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7248_8772__$1)) {
            var c__4229__auto___8773 = cljs.core.chunk_first.call(null, seq__7248_8772__$1);
            var G__8774 = cljs.core.chunk_rest.call(null, seq__7248_8772__$1);
            var G__8775 = c__4229__auto___8773;
            var G__8776 = cljs.core.count.call(null, c__4229__auto___8773);
            var G__8777 = 0;
            seq__7248_8762 = G__8774;
            chunk__7249_8763 = G__8775;
            count__7250_8764 = G__8776;
            i__7251_8765 = G__8777;
            continue;
          } else {
            var arg__4902__auto___8778 = cljs.core.first.call(null, seq__7248_8772__$1);
            a__4901__auto__.push(arg__4902__auto___8778);
            var G__8779 = cljs.core.next.call(null, seq__7248_8772__$1);
            var G__8780 = null;
            var G__8781 = 0;
            var G__8782 = 0;
            seq__7248_8762 = G__8779;
            chunk__7249_8763 = G__8780;
            count__7250_8764 = G__8781;
            i__7251_8765 = G__8782;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.h4.apply(null, a__4901__auto__);
  };
  var h4 = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return h4__delegate.call(this, args__4900__auto__);
  };
  h4.cljs$lang$maxFixedArity = 0;
  h4.cljs$lang$applyTo = function(arglist__8783) {
    var args__4900__auto__ = cljs.core.seq(arglist__8783);
    return h4__delegate(args__4900__auto__);
  };
  h4.cljs$core$IFn$_invoke$arity$variadic = h4__delegate;
  return h4;
}();
quiescent.dom.h5 = function() {
  var h5__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7256_8784 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7257_8785 = null;
    var count__7258_8786 = 0;
    var i__7259_8787 = 0;
    while (true) {
      if (i__7259_8787 < count__7258_8786) {
        var arg__4902__auto___8788 = cljs.core._nth.call(null, chunk__7257_8785, i__7259_8787);
        a__4901__auto__.push(arg__4902__auto___8788);
        var G__8789 = seq__7256_8784;
        var G__8790 = chunk__7257_8785;
        var G__8791 = count__7258_8786;
        var G__8792 = i__7259_8787 + 1;
        seq__7256_8784 = G__8789;
        chunk__7257_8785 = G__8790;
        count__7258_8786 = G__8791;
        i__7259_8787 = G__8792;
        continue;
      } else {
        var temp__4126__auto___8793 = cljs.core.seq.call(null, seq__7256_8784);
        if (temp__4126__auto___8793) {
          var seq__7256_8794__$1 = temp__4126__auto___8793;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7256_8794__$1)) {
            var c__4229__auto___8795 = cljs.core.chunk_first.call(null, seq__7256_8794__$1);
            var G__8796 = cljs.core.chunk_rest.call(null, seq__7256_8794__$1);
            var G__8797 = c__4229__auto___8795;
            var G__8798 = cljs.core.count.call(null, c__4229__auto___8795);
            var G__8799 = 0;
            seq__7256_8784 = G__8796;
            chunk__7257_8785 = G__8797;
            count__7258_8786 = G__8798;
            i__7259_8787 = G__8799;
            continue;
          } else {
            var arg__4902__auto___8800 = cljs.core.first.call(null, seq__7256_8794__$1);
            a__4901__auto__.push(arg__4902__auto___8800);
            var G__8801 = cljs.core.next.call(null, seq__7256_8794__$1);
            var G__8802 = null;
            var G__8803 = 0;
            var G__8804 = 0;
            seq__7256_8784 = G__8801;
            chunk__7257_8785 = G__8802;
            count__7258_8786 = G__8803;
            i__7259_8787 = G__8804;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.h5.apply(null, a__4901__auto__);
  };
  var h5 = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return h5__delegate.call(this, args__4900__auto__);
  };
  h5.cljs$lang$maxFixedArity = 0;
  h5.cljs$lang$applyTo = function(arglist__8805) {
    var args__4900__auto__ = cljs.core.seq(arglist__8805);
    return h5__delegate(args__4900__auto__);
  };
  h5.cljs$core$IFn$_invoke$arity$variadic = h5__delegate;
  return h5;
}();
quiescent.dom.h6 = function() {
  var h6__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7264_8806 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7265_8807 = null;
    var count__7266_8808 = 0;
    var i__7267_8809 = 0;
    while (true) {
      if (i__7267_8809 < count__7266_8808) {
        var arg__4902__auto___8810 = cljs.core._nth.call(null, chunk__7265_8807, i__7267_8809);
        a__4901__auto__.push(arg__4902__auto___8810);
        var G__8811 = seq__7264_8806;
        var G__8812 = chunk__7265_8807;
        var G__8813 = count__7266_8808;
        var G__8814 = i__7267_8809 + 1;
        seq__7264_8806 = G__8811;
        chunk__7265_8807 = G__8812;
        count__7266_8808 = G__8813;
        i__7267_8809 = G__8814;
        continue;
      } else {
        var temp__4126__auto___8815 = cljs.core.seq.call(null, seq__7264_8806);
        if (temp__4126__auto___8815) {
          var seq__7264_8816__$1 = temp__4126__auto___8815;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7264_8816__$1)) {
            var c__4229__auto___8817 = cljs.core.chunk_first.call(null, seq__7264_8816__$1);
            var G__8818 = cljs.core.chunk_rest.call(null, seq__7264_8816__$1);
            var G__8819 = c__4229__auto___8817;
            var G__8820 = cljs.core.count.call(null, c__4229__auto___8817);
            var G__8821 = 0;
            seq__7264_8806 = G__8818;
            chunk__7265_8807 = G__8819;
            count__7266_8808 = G__8820;
            i__7267_8809 = G__8821;
            continue;
          } else {
            var arg__4902__auto___8822 = cljs.core.first.call(null, seq__7264_8816__$1);
            a__4901__auto__.push(arg__4902__auto___8822);
            var G__8823 = cljs.core.next.call(null, seq__7264_8816__$1);
            var G__8824 = null;
            var G__8825 = 0;
            var G__8826 = 0;
            seq__7264_8806 = G__8823;
            chunk__7265_8807 = G__8824;
            count__7266_8808 = G__8825;
            i__7267_8809 = G__8826;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.h6.apply(null, a__4901__auto__);
  };
  var h6 = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return h6__delegate.call(this, args__4900__auto__);
  };
  h6.cljs$lang$maxFixedArity = 0;
  h6.cljs$lang$applyTo = function(arglist__8827) {
    var args__4900__auto__ = cljs.core.seq(arglist__8827);
    return h6__delegate(args__4900__auto__);
  };
  h6.cljs$core$IFn$_invoke$arity$variadic = h6__delegate;
  return h6;
}();
quiescent.dom.head = function() {
  var head__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7272_8828 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7273_8829 = null;
    var count__7274_8830 = 0;
    var i__7275_8831 = 0;
    while (true) {
      if (i__7275_8831 < count__7274_8830) {
        var arg__4902__auto___8832 = cljs.core._nth.call(null, chunk__7273_8829, i__7275_8831);
        a__4901__auto__.push(arg__4902__auto___8832);
        var G__8833 = seq__7272_8828;
        var G__8834 = chunk__7273_8829;
        var G__8835 = count__7274_8830;
        var G__8836 = i__7275_8831 + 1;
        seq__7272_8828 = G__8833;
        chunk__7273_8829 = G__8834;
        count__7274_8830 = G__8835;
        i__7275_8831 = G__8836;
        continue;
      } else {
        var temp__4126__auto___8837 = cljs.core.seq.call(null, seq__7272_8828);
        if (temp__4126__auto___8837) {
          var seq__7272_8838__$1 = temp__4126__auto___8837;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7272_8838__$1)) {
            var c__4229__auto___8839 = cljs.core.chunk_first.call(null, seq__7272_8838__$1);
            var G__8840 = cljs.core.chunk_rest.call(null, seq__7272_8838__$1);
            var G__8841 = c__4229__auto___8839;
            var G__8842 = cljs.core.count.call(null, c__4229__auto___8839);
            var G__8843 = 0;
            seq__7272_8828 = G__8840;
            chunk__7273_8829 = G__8841;
            count__7274_8830 = G__8842;
            i__7275_8831 = G__8843;
            continue;
          } else {
            var arg__4902__auto___8844 = cljs.core.first.call(null, seq__7272_8838__$1);
            a__4901__auto__.push(arg__4902__auto___8844);
            var G__8845 = cljs.core.next.call(null, seq__7272_8838__$1);
            var G__8846 = null;
            var G__8847 = 0;
            var G__8848 = 0;
            seq__7272_8828 = G__8845;
            chunk__7273_8829 = G__8846;
            count__7274_8830 = G__8847;
            i__7275_8831 = G__8848;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.head.apply(null, a__4901__auto__);
  };
  var head = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return head__delegate.call(this, args__4900__auto__);
  };
  head.cljs$lang$maxFixedArity = 0;
  head.cljs$lang$applyTo = function(arglist__8849) {
    var args__4900__auto__ = cljs.core.seq(arglist__8849);
    return head__delegate(args__4900__auto__);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
quiescent.dom.header = function() {
  var header__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7280_8850 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7281_8851 = null;
    var count__7282_8852 = 0;
    var i__7283_8853 = 0;
    while (true) {
      if (i__7283_8853 < count__7282_8852) {
        var arg__4902__auto___8854 = cljs.core._nth.call(null, chunk__7281_8851, i__7283_8853);
        a__4901__auto__.push(arg__4902__auto___8854);
        var G__8855 = seq__7280_8850;
        var G__8856 = chunk__7281_8851;
        var G__8857 = count__7282_8852;
        var G__8858 = i__7283_8853 + 1;
        seq__7280_8850 = G__8855;
        chunk__7281_8851 = G__8856;
        count__7282_8852 = G__8857;
        i__7283_8853 = G__8858;
        continue;
      } else {
        var temp__4126__auto___8859 = cljs.core.seq.call(null, seq__7280_8850);
        if (temp__4126__auto___8859) {
          var seq__7280_8860__$1 = temp__4126__auto___8859;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7280_8860__$1)) {
            var c__4229__auto___8861 = cljs.core.chunk_first.call(null, seq__7280_8860__$1);
            var G__8862 = cljs.core.chunk_rest.call(null, seq__7280_8860__$1);
            var G__8863 = c__4229__auto___8861;
            var G__8864 = cljs.core.count.call(null, c__4229__auto___8861);
            var G__8865 = 0;
            seq__7280_8850 = G__8862;
            chunk__7281_8851 = G__8863;
            count__7282_8852 = G__8864;
            i__7283_8853 = G__8865;
            continue;
          } else {
            var arg__4902__auto___8866 = cljs.core.first.call(null, seq__7280_8860__$1);
            a__4901__auto__.push(arg__4902__auto___8866);
            var G__8867 = cljs.core.next.call(null, seq__7280_8860__$1);
            var G__8868 = null;
            var G__8869 = 0;
            var G__8870 = 0;
            seq__7280_8850 = G__8867;
            chunk__7281_8851 = G__8868;
            count__7282_8852 = G__8869;
            i__7283_8853 = G__8870;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.header.apply(null, a__4901__auto__);
  };
  var header = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return header__delegate.call(this, args__4900__auto__);
  };
  header.cljs$lang$maxFixedArity = 0;
  header.cljs$lang$applyTo = function(arglist__8871) {
    var args__4900__auto__ = cljs.core.seq(arglist__8871);
    return header__delegate(args__4900__auto__);
  };
  header.cljs$core$IFn$_invoke$arity$variadic = header__delegate;
  return header;
}();
quiescent.dom.hr = function() {
  var hr__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7288_8872 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7289_8873 = null;
    var count__7290_8874 = 0;
    var i__7291_8875 = 0;
    while (true) {
      if (i__7291_8875 < count__7290_8874) {
        var arg__4902__auto___8876 = cljs.core._nth.call(null, chunk__7289_8873, i__7291_8875);
        a__4901__auto__.push(arg__4902__auto___8876);
        var G__8877 = seq__7288_8872;
        var G__8878 = chunk__7289_8873;
        var G__8879 = count__7290_8874;
        var G__8880 = i__7291_8875 + 1;
        seq__7288_8872 = G__8877;
        chunk__7289_8873 = G__8878;
        count__7290_8874 = G__8879;
        i__7291_8875 = G__8880;
        continue;
      } else {
        var temp__4126__auto___8881 = cljs.core.seq.call(null, seq__7288_8872);
        if (temp__4126__auto___8881) {
          var seq__7288_8882__$1 = temp__4126__auto___8881;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7288_8882__$1)) {
            var c__4229__auto___8883 = cljs.core.chunk_first.call(null, seq__7288_8882__$1);
            var G__8884 = cljs.core.chunk_rest.call(null, seq__7288_8882__$1);
            var G__8885 = c__4229__auto___8883;
            var G__8886 = cljs.core.count.call(null, c__4229__auto___8883);
            var G__8887 = 0;
            seq__7288_8872 = G__8884;
            chunk__7289_8873 = G__8885;
            count__7290_8874 = G__8886;
            i__7291_8875 = G__8887;
            continue;
          } else {
            var arg__4902__auto___8888 = cljs.core.first.call(null, seq__7288_8882__$1);
            a__4901__auto__.push(arg__4902__auto___8888);
            var G__8889 = cljs.core.next.call(null, seq__7288_8882__$1);
            var G__8890 = null;
            var G__8891 = 0;
            var G__8892 = 0;
            seq__7288_8872 = G__8889;
            chunk__7289_8873 = G__8890;
            count__7290_8874 = G__8891;
            i__7291_8875 = G__8892;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.hr.apply(null, a__4901__auto__);
  };
  var hr = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hr__delegate.call(this, args__4900__auto__);
  };
  hr.cljs$lang$maxFixedArity = 0;
  hr.cljs$lang$applyTo = function(arglist__8893) {
    var args__4900__auto__ = cljs.core.seq(arglist__8893);
    return hr__delegate(args__4900__auto__);
  };
  hr.cljs$core$IFn$_invoke$arity$variadic = hr__delegate;
  return hr;
}();
quiescent.dom.html = function() {
  var html__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7296_8894 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7297_8895 = null;
    var count__7298_8896 = 0;
    var i__7299_8897 = 0;
    while (true) {
      if (i__7299_8897 < count__7298_8896) {
        var arg__4902__auto___8898 = cljs.core._nth.call(null, chunk__7297_8895, i__7299_8897);
        a__4901__auto__.push(arg__4902__auto___8898);
        var G__8899 = seq__7296_8894;
        var G__8900 = chunk__7297_8895;
        var G__8901 = count__7298_8896;
        var G__8902 = i__7299_8897 + 1;
        seq__7296_8894 = G__8899;
        chunk__7297_8895 = G__8900;
        count__7298_8896 = G__8901;
        i__7299_8897 = G__8902;
        continue;
      } else {
        var temp__4126__auto___8903 = cljs.core.seq.call(null, seq__7296_8894);
        if (temp__4126__auto___8903) {
          var seq__7296_8904__$1 = temp__4126__auto___8903;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7296_8904__$1)) {
            var c__4229__auto___8905 = cljs.core.chunk_first.call(null, seq__7296_8904__$1);
            var G__8906 = cljs.core.chunk_rest.call(null, seq__7296_8904__$1);
            var G__8907 = c__4229__auto___8905;
            var G__8908 = cljs.core.count.call(null, c__4229__auto___8905);
            var G__8909 = 0;
            seq__7296_8894 = G__8906;
            chunk__7297_8895 = G__8907;
            count__7298_8896 = G__8908;
            i__7299_8897 = G__8909;
            continue;
          } else {
            var arg__4902__auto___8910 = cljs.core.first.call(null, seq__7296_8904__$1);
            a__4901__auto__.push(arg__4902__auto___8910);
            var G__8911 = cljs.core.next.call(null, seq__7296_8904__$1);
            var G__8912 = null;
            var G__8913 = 0;
            var G__8914 = 0;
            seq__7296_8894 = G__8911;
            chunk__7297_8895 = G__8912;
            count__7298_8896 = G__8913;
            i__7299_8897 = G__8914;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.html.apply(null, a__4901__auto__);
  };
  var html = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return html__delegate.call(this, args__4900__auto__);
  };
  html.cljs$lang$maxFixedArity = 0;
  html.cljs$lang$applyTo = function(arglist__8915) {
    var args__4900__auto__ = cljs.core.seq(arglist__8915);
    return html__delegate(args__4900__auto__);
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html;
}();
quiescent.dom.i = function() {
  var i__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7304_8916 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7305_8917 = null;
    var count__7306_8918 = 0;
    var i__7307_8919 = 0;
    while (true) {
      if (i__7307_8919 < count__7306_8918) {
        var arg__4902__auto___8920 = cljs.core._nth.call(null, chunk__7305_8917, i__7307_8919);
        a__4901__auto__.push(arg__4902__auto___8920);
        var G__8921 = seq__7304_8916;
        var G__8922 = chunk__7305_8917;
        var G__8923 = count__7306_8918;
        var G__8924 = i__7307_8919 + 1;
        seq__7304_8916 = G__8921;
        chunk__7305_8917 = G__8922;
        count__7306_8918 = G__8923;
        i__7307_8919 = G__8924;
        continue;
      } else {
        var temp__4126__auto___8925 = cljs.core.seq.call(null, seq__7304_8916);
        if (temp__4126__auto___8925) {
          var seq__7304_8926__$1 = temp__4126__auto___8925;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7304_8926__$1)) {
            var c__4229__auto___8927 = cljs.core.chunk_first.call(null, seq__7304_8926__$1);
            var G__8928 = cljs.core.chunk_rest.call(null, seq__7304_8926__$1);
            var G__8929 = c__4229__auto___8927;
            var G__8930 = cljs.core.count.call(null, c__4229__auto___8927);
            var G__8931 = 0;
            seq__7304_8916 = G__8928;
            chunk__7305_8917 = G__8929;
            count__7306_8918 = G__8930;
            i__7307_8919 = G__8931;
            continue;
          } else {
            var arg__4902__auto___8932 = cljs.core.first.call(null, seq__7304_8926__$1);
            a__4901__auto__.push(arg__4902__auto___8932);
            var G__8933 = cljs.core.next.call(null, seq__7304_8926__$1);
            var G__8934 = null;
            var G__8935 = 0;
            var G__8936 = 0;
            seq__7304_8916 = G__8933;
            chunk__7305_8917 = G__8934;
            count__7306_8918 = G__8935;
            i__7307_8919 = G__8936;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.i.apply(null, a__4901__auto__);
  };
  var i = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return i__delegate.call(this, args__4900__auto__);
  };
  i.cljs$lang$maxFixedArity = 0;
  i.cljs$lang$applyTo = function(arglist__8937) {
    var args__4900__auto__ = cljs.core.seq(arglist__8937);
    return i__delegate(args__4900__auto__);
  };
  i.cljs$core$IFn$_invoke$arity$variadic = i__delegate;
  return i;
}();
quiescent.dom.iframe = function() {
  var iframe__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7312_8938 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7313_8939 = null;
    var count__7314_8940 = 0;
    var i__7315_8941 = 0;
    while (true) {
      if (i__7315_8941 < count__7314_8940) {
        var arg__4902__auto___8942 = cljs.core._nth.call(null, chunk__7313_8939, i__7315_8941);
        a__4901__auto__.push(arg__4902__auto___8942);
        var G__8943 = seq__7312_8938;
        var G__8944 = chunk__7313_8939;
        var G__8945 = count__7314_8940;
        var G__8946 = i__7315_8941 + 1;
        seq__7312_8938 = G__8943;
        chunk__7313_8939 = G__8944;
        count__7314_8940 = G__8945;
        i__7315_8941 = G__8946;
        continue;
      } else {
        var temp__4126__auto___8947 = cljs.core.seq.call(null, seq__7312_8938);
        if (temp__4126__auto___8947) {
          var seq__7312_8948__$1 = temp__4126__auto___8947;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7312_8948__$1)) {
            var c__4229__auto___8949 = cljs.core.chunk_first.call(null, seq__7312_8948__$1);
            var G__8950 = cljs.core.chunk_rest.call(null, seq__7312_8948__$1);
            var G__8951 = c__4229__auto___8949;
            var G__8952 = cljs.core.count.call(null, c__4229__auto___8949);
            var G__8953 = 0;
            seq__7312_8938 = G__8950;
            chunk__7313_8939 = G__8951;
            count__7314_8940 = G__8952;
            i__7315_8941 = G__8953;
            continue;
          } else {
            var arg__4902__auto___8954 = cljs.core.first.call(null, seq__7312_8948__$1);
            a__4901__auto__.push(arg__4902__auto___8954);
            var G__8955 = cljs.core.next.call(null, seq__7312_8948__$1);
            var G__8956 = null;
            var G__8957 = 0;
            var G__8958 = 0;
            seq__7312_8938 = G__8955;
            chunk__7313_8939 = G__8956;
            count__7314_8940 = G__8957;
            i__7315_8941 = G__8958;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.iframe.apply(null, a__4901__auto__);
  };
  var iframe = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return iframe__delegate.call(this, args__4900__auto__);
  };
  iframe.cljs$lang$maxFixedArity = 0;
  iframe.cljs$lang$applyTo = function(arglist__8959) {
    var args__4900__auto__ = cljs.core.seq(arglist__8959);
    return iframe__delegate(args__4900__auto__);
  };
  iframe.cljs$core$IFn$_invoke$arity$variadic = iframe__delegate;
  return iframe;
}();
quiescent.dom.img = function() {
  var img__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7320_8960 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7321_8961 = null;
    var count__7322_8962 = 0;
    var i__7323_8963 = 0;
    while (true) {
      if (i__7323_8963 < count__7322_8962) {
        var arg__4902__auto___8964 = cljs.core._nth.call(null, chunk__7321_8961, i__7323_8963);
        a__4901__auto__.push(arg__4902__auto___8964);
        var G__8965 = seq__7320_8960;
        var G__8966 = chunk__7321_8961;
        var G__8967 = count__7322_8962;
        var G__8968 = i__7323_8963 + 1;
        seq__7320_8960 = G__8965;
        chunk__7321_8961 = G__8966;
        count__7322_8962 = G__8967;
        i__7323_8963 = G__8968;
        continue;
      } else {
        var temp__4126__auto___8969 = cljs.core.seq.call(null, seq__7320_8960);
        if (temp__4126__auto___8969) {
          var seq__7320_8970__$1 = temp__4126__auto___8969;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7320_8970__$1)) {
            var c__4229__auto___8971 = cljs.core.chunk_first.call(null, seq__7320_8970__$1);
            var G__8972 = cljs.core.chunk_rest.call(null, seq__7320_8970__$1);
            var G__8973 = c__4229__auto___8971;
            var G__8974 = cljs.core.count.call(null, c__4229__auto___8971);
            var G__8975 = 0;
            seq__7320_8960 = G__8972;
            chunk__7321_8961 = G__8973;
            count__7322_8962 = G__8974;
            i__7323_8963 = G__8975;
            continue;
          } else {
            var arg__4902__auto___8976 = cljs.core.first.call(null, seq__7320_8970__$1);
            a__4901__auto__.push(arg__4902__auto___8976);
            var G__8977 = cljs.core.next.call(null, seq__7320_8970__$1);
            var G__8978 = null;
            var G__8979 = 0;
            var G__8980 = 0;
            seq__7320_8960 = G__8977;
            chunk__7321_8961 = G__8978;
            count__7322_8962 = G__8979;
            i__7323_8963 = G__8980;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.img.apply(null, a__4901__auto__);
  };
  var img = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return img__delegate.call(this, args__4900__auto__);
  };
  img.cljs$lang$maxFixedArity = 0;
  img.cljs$lang$applyTo = function(arglist__8981) {
    var args__4900__auto__ = cljs.core.seq(arglist__8981);
    return img__delegate(args__4900__auto__);
  };
  img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
  return img;
}();
quiescent.dom.input = function() {
  var input__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7328_8982 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7329_8983 = null;
    var count__7330_8984 = 0;
    var i__7331_8985 = 0;
    while (true) {
      if (i__7331_8985 < count__7330_8984) {
        var arg__4902__auto___8986 = cljs.core._nth.call(null, chunk__7329_8983, i__7331_8985);
        a__4901__auto__.push(arg__4902__auto___8986);
        var G__8987 = seq__7328_8982;
        var G__8988 = chunk__7329_8983;
        var G__8989 = count__7330_8984;
        var G__8990 = i__7331_8985 + 1;
        seq__7328_8982 = G__8987;
        chunk__7329_8983 = G__8988;
        count__7330_8984 = G__8989;
        i__7331_8985 = G__8990;
        continue;
      } else {
        var temp__4126__auto___8991 = cljs.core.seq.call(null, seq__7328_8982);
        if (temp__4126__auto___8991) {
          var seq__7328_8992__$1 = temp__4126__auto___8991;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7328_8992__$1)) {
            var c__4229__auto___8993 = cljs.core.chunk_first.call(null, seq__7328_8992__$1);
            var G__8994 = cljs.core.chunk_rest.call(null, seq__7328_8992__$1);
            var G__8995 = c__4229__auto___8993;
            var G__8996 = cljs.core.count.call(null, c__4229__auto___8993);
            var G__8997 = 0;
            seq__7328_8982 = G__8994;
            chunk__7329_8983 = G__8995;
            count__7330_8984 = G__8996;
            i__7331_8985 = G__8997;
            continue;
          } else {
            var arg__4902__auto___8998 = cljs.core.first.call(null, seq__7328_8992__$1);
            a__4901__auto__.push(arg__4902__auto___8998);
            var G__8999 = cljs.core.next.call(null, seq__7328_8992__$1);
            var G__9000 = null;
            var G__9001 = 0;
            var G__9002 = 0;
            seq__7328_8982 = G__8999;
            chunk__7329_8983 = G__9000;
            count__7330_8984 = G__9001;
            i__7331_8985 = G__9002;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.input.apply(null, a__4901__auto__);
  };
  var input = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return input__delegate.call(this, args__4900__auto__);
  };
  input.cljs$lang$maxFixedArity = 0;
  input.cljs$lang$applyTo = function(arglist__9003) {
    var args__4900__auto__ = cljs.core.seq(arglist__9003);
    return input__delegate(args__4900__auto__);
  };
  input.cljs$core$IFn$_invoke$arity$variadic = input__delegate;
  return input;
}();
quiescent.dom.ins = function() {
  var ins__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7336_9004 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7337_9005 = null;
    var count__7338_9006 = 0;
    var i__7339_9007 = 0;
    while (true) {
      if (i__7339_9007 < count__7338_9006) {
        var arg__4902__auto___9008 = cljs.core._nth.call(null, chunk__7337_9005, i__7339_9007);
        a__4901__auto__.push(arg__4902__auto___9008);
        var G__9009 = seq__7336_9004;
        var G__9010 = chunk__7337_9005;
        var G__9011 = count__7338_9006;
        var G__9012 = i__7339_9007 + 1;
        seq__7336_9004 = G__9009;
        chunk__7337_9005 = G__9010;
        count__7338_9006 = G__9011;
        i__7339_9007 = G__9012;
        continue;
      } else {
        var temp__4126__auto___9013 = cljs.core.seq.call(null, seq__7336_9004);
        if (temp__4126__auto___9013) {
          var seq__7336_9014__$1 = temp__4126__auto___9013;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7336_9014__$1)) {
            var c__4229__auto___9015 = cljs.core.chunk_first.call(null, seq__7336_9014__$1);
            var G__9016 = cljs.core.chunk_rest.call(null, seq__7336_9014__$1);
            var G__9017 = c__4229__auto___9015;
            var G__9018 = cljs.core.count.call(null, c__4229__auto___9015);
            var G__9019 = 0;
            seq__7336_9004 = G__9016;
            chunk__7337_9005 = G__9017;
            count__7338_9006 = G__9018;
            i__7339_9007 = G__9019;
            continue;
          } else {
            var arg__4902__auto___9020 = cljs.core.first.call(null, seq__7336_9014__$1);
            a__4901__auto__.push(arg__4902__auto___9020);
            var G__9021 = cljs.core.next.call(null, seq__7336_9014__$1);
            var G__9022 = null;
            var G__9023 = 0;
            var G__9024 = 0;
            seq__7336_9004 = G__9021;
            chunk__7337_9005 = G__9022;
            count__7338_9006 = G__9023;
            i__7339_9007 = G__9024;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.ins.apply(null, a__4901__auto__);
  };
  var ins = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return ins__delegate.call(this, args__4900__auto__);
  };
  ins.cljs$lang$maxFixedArity = 0;
  ins.cljs$lang$applyTo = function(arglist__9025) {
    var args__4900__auto__ = cljs.core.seq(arglist__9025);
    return ins__delegate(args__4900__auto__);
  };
  ins.cljs$core$IFn$_invoke$arity$variadic = ins__delegate;
  return ins;
}();
quiescent.dom.kbd = function() {
  var kbd__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7344_9026 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7345_9027 = null;
    var count__7346_9028 = 0;
    var i__7347_9029 = 0;
    while (true) {
      if (i__7347_9029 < count__7346_9028) {
        var arg__4902__auto___9030 = cljs.core._nth.call(null, chunk__7345_9027, i__7347_9029);
        a__4901__auto__.push(arg__4902__auto___9030);
        var G__9031 = seq__7344_9026;
        var G__9032 = chunk__7345_9027;
        var G__9033 = count__7346_9028;
        var G__9034 = i__7347_9029 + 1;
        seq__7344_9026 = G__9031;
        chunk__7345_9027 = G__9032;
        count__7346_9028 = G__9033;
        i__7347_9029 = G__9034;
        continue;
      } else {
        var temp__4126__auto___9035 = cljs.core.seq.call(null, seq__7344_9026);
        if (temp__4126__auto___9035) {
          var seq__7344_9036__$1 = temp__4126__auto___9035;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7344_9036__$1)) {
            var c__4229__auto___9037 = cljs.core.chunk_first.call(null, seq__7344_9036__$1);
            var G__9038 = cljs.core.chunk_rest.call(null, seq__7344_9036__$1);
            var G__9039 = c__4229__auto___9037;
            var G__9040 = cljs.core.count.call(null, c__4229__auto___9037);
            var G__9041 = 0;
            seq__7344_9026 = G__9038;
            chunk__7345_9027 = G__9039;
            count__7346_9028 = G__9040;
            i__7347_9029 = G__9041;
            continue;
          } else {
            var arg__4902__auto___9042 = cljs.core.first.call(null, seq__7344_9036__$1);
            a__4901__auto__.push(arg__4902__auto___9042);
            var G__9043 = cljs.core.next.call(null, seq__7344_9036__$1);
            var G__9044 = null;
            var G__9045 = 0;
            var G__9046 = 0;
            seq__7344_9026 = G__9043;
            chunk__7345_9027 = G__9044;
            count__7346_9028 = G__9045;
            i__7347_9029 = G__9046;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.kbd.apply(null, a__4901__auto__);
  };
  var kbd = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return kbd__delegate.call(this, args__4900__auto__);
  };
  kbd.cljs$lang$maxFixedArity = 0;
  kbd.cljs$lang$applyTo = function(arglist__9047) {
    var args__4900__auto__ = cljs.core.seq(arglist__9047);
    return kbd__delegate(args__4900__auto__);
  };
  kbd.cljs$core$IFn$_invoke$arity$variadic = kbd__delegate;
  return kbd;
}();
quiescent.dom.keygen = function() {
  var keygen__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7352_9048 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7353_9049 = null;
    var count__7354_9050 = 0;
    var i__7355_9051 = 0;
    while (true) {
      if (i__7355_9051 < count__7354_9050) {
        var arg__4902__auto___9052 = cljs.core._nth.call(null, chunk__7353_9049, i__7355_9051);
        a__4901__auto__.push(arg__4902__auto___9052);
        var G__9053 = seq__7352_9048;
        var G__9054 = chunk__7353_9049;
        var G__9055 = count__7354_9050;
        var G__9056 = i__7355_9051 + 1;
        seq__7352_9048 = G__9053;
        chunk__7353_9049 = G__9054;
        count__7354_9050 = G__9055;
        i__7355_9051 = G__9056;
        continue;
      } else {
        var temp__4126__auto___9057 = cljs.core.seq.call(null, seq__7352_9048);
        if (temp__4126__auto___9057) {
          var seq__7352_9058__$1 = temp__4126__auto___9057;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7352_9058__$1)) {
            var c__4229__auto___9059 = cljs.core.chunk_first.call(null, seq__7352_9058__$1);
            var G__9060 = cljs.core.chunk_rest.call(null, seq__7352_9058__$1);
            var G__9061 = c__4229__auto___9059;
            var G__9062 = cljs.core.count.call(null, c__4229__auto___9059);
            var G__9063 = 0;
            seq__7352_9048 = G__9060;
            chunk__7353_9049 = G__9061;
            count__7354_9050 = G__9062;
            i__7355_9051 = G__9063;
            continue;
          } else {
            var arg__4902__auto___9064 = cljs.core.first.call(null, seq__7352_9058__$1);
            a__4901__auto__.push(arg__4902__auto___9064);
            var G__9065 = cljs.core.next.call(null, seq__7352_9058__$1);
            var G__9066 = null;
            var G__9067 = 0;
            var G__9068 = 0;
            seq__7352_9048 = G__9065;
            chunk__7353_9049 = G__9066;
            count__7354_9050 = G__9067;
            i__7355_9051 = G__9068;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.keygen.apply(null, a__4901__auto__);
  };
  var keygen = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return keygen__delegate.call(this, args__4900__auto__);
  };
  keygen.cljs$lang$maxFixedArity = 0;
  keygen.cljs$lang$applyTo = function(arglist__9069) {
    var args__4900__auto__ = cljs.core.seq(arglist__9069);
    return keygen__delegate(args__4900__auto__);
  };
  keygen.cljs$core$IFn$_invoke$arity$variadic = keygen__delegate;
  return keygen;
}();
quiescent.dom.label = function() {
  var label__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7360_9070 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7361_9071 = null;
    var count__7362_9072 = 0;
    var i__7363_9073 = 0;
    while (true) {
      if (i__7363_9073 < count__7362_9072) {
        var arg__4902__auto___9074 = cljs.core._nth.call(null, chunk__7361_9071, i__7363_9073);
        a__4901__auto__.push(arg__4902__auto___9074);
        var G__9075 = seq__7360_9070;
        var G__9076 = chunk__7361_9071;
        var G__9077 = count__7362_9072;
        var G__9078 = i__7363_9073 + 1;
        seq__7360_9070 = G__9075;
        chunk__7361_9071 = G__9076;
        count__7362_9072 = G__9077;
        i__7363_9073 = G__9078;
        continue;
      } else {
        var temp__4126__auto___9079 = cljs.core.seq.call(null, seq__7360_9070);
        if (temp__4126__auto___9079) {
          var seq__7360_9080__$1 = temp__4126__auto___9079;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7360_9080__$1)) {
            var c__4229__auto___9081 = cljs.core.chunk_first.call(null, seq__7360_9080__$1);
            var G__9082 = cljs.core.chunk_rest.call(null, seq__7360_9080__$1);
            var G__9083 = c__4229__auto___9081;
            var G__9084 = cljs.core.count.call(null, c__4229__auto___9081);
            var G__9085 = 0;
            seq__7360_9070 = G__9082;
            chunk__7361_9071 = G__9083;
            count__7362_9072 = G__9084;
            i__7363_9073 = G__9085;
            continue;
          } else {
            var arg__4902__auto___9086 = cljs.core.first.call(null, seq__7360_9080__$1);
            a__4901__auto__.push(arg__4902__auto___9086);
            var G__9087 = cljs.core.next.call(null, seq__7360_9080__$1);
            var G__9088 = null;
            var G__9089 = 0;
            var G__9090 = 0;
            seq__7360_9070 = G__9087;
            chunk__7361_9071 = G__9088;
            count__7362_9072 = G__9089;
            i__7363_9073 = G__9090;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.label.apply(null, a__4901__auto__);
  };
  var label = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return label__delegate.call(this, args__4900__auto__);
  };
  label.cljs$lang$maxFixedArity = 0;
  label.cljs$lang$applyTo = function(arglist__9091) {
    var args__4900__auto__ = cljs.core.seq(arglist__9091);
    return label__delegate(args__4900__auto__);
  };
  label.cljs$core$IFn$_invoke$arity$variadic = label__delegate;
  return label;
}();
quiescent.dom.legend = function() {
  var legend__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7368_9092 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7369_9093 = null;
    var count__7370_9094 = 0;
    var i__7371_9095 = 0;
    while (true) {
      if (i__7371_9095 < count__7370_9094) {
        var arg__4902__auto___9096 = cljs.core._nth.call(null, chunk__7369_9093, i__7371_9095);
        a__4901__auto__.push(arg__4902__auto___9096);
        var G__9097 = seq__7368_9092;
        var G__9098 = chunk__7369_9093;
        var G__9099 = count__7370_9094;
        var G__9100 = i__7371_9095 + 1;
        seq__7368_9092 = G__9097;
        chunk__7369_9093 = G__9098;
        count__7370_9094 = G__9099;
        i__7371_9095 = G__9100;
        continue;
      } else {
        var temp__4126__auto___9101 = cljs.core.seq.call(null, seq__7368_9092);
        if (temp__4126__auto___9101) {
          var seq__7368_9102__$1 = temp__4126__auto___9101;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7368_9102__$1)) {
            var c__4229__auto___9103 = cljs.core.chunk_first.call(null, seq__7368_9102__$1);
            var G__9104 = cljs.core.chunk_rest.call(null, seq__7368_9102__$1);
            var G__9105 = c__4229__auto___9103;
            var G__9106 = cljs.core.count.call(null, c__4229__auto___9103);
            var G__9107 = 0;
            seq__7368_9092 = G__9104;
            chunk__7369_9093 = G__9105;
            count__7370_9094 = G__9106;
            i__7371_9095 = G__9107;
            continue;
          } else {
            var arg__4902__auto___9108 = cljs.core.first.call(null, seq__7368_9102__$1);
            a__4901__auto__.push(arg__4902__auto___9108);
            var G__9109 = cljs.core.next.call(null, seq__7368_9102__$1);
            var G__9110 = null;
            var G__9111 = 0;
            var G__9112 = 0;
            seq__7368_9092 = G__9109;
            chunk__7369_9093 = G__9110;
            count__7370_9094 = G__9111;
            i__7371_9095 = G__9112;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.legend.apply(null, a__4901__auto__);
  };
  var legend = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return legend__delegate.call(this, args__4900__auto__);
  };
  legend.cljs$lang$maxFixedArity = 0;
  legend.cljs$lang$applyTo = function(arglist__9113) {
    var args__4900__auto__ = cljs.core.seq(arglist__9113);
    return legend__delegate(args__4900__auto__);
  };
  legend.cljs$core$IFn$_invoke$arity$variadic = legend__delegate;
  return legend;
}();
quiescent.dom.li = function() {
  var li__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7376_9114 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7377_9115 = null;
    var count__7378_9116 = 0;
    var i__7379_9117 = 0;
    while (true) {
      if (i__7379_9117 < count__7378_9116) {
        var arg__4902__auto___9118 = cljs.core._nth.call(null, chunk__7377_9115, i__7379_9117);
        a__4901__auto__.push(arg__4902__auto___9118);
        var G__9119 = seq__7376_9114;
        var G__9120 = chunk__7377_9115;
        var G__9121 = count__7378_9116;
        var G__9122 = i__7379_9117 + 1;
        seq__7376_9114 = G__9119;
        chunk__7377_9115 = G__9120;
        count__7378_9116 = G__9121;
        i__7379_9117 = G__9122;
        continue;
      } else {
        var temp__4126__auto___9123 = cljs.core.seq.call(null, seq__7376_9114);
        if (temp__4126__auto___9123) {
          var seq__7376_9124__$1 = temp__4126__auto___9123;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7376_9124__$1)) {
            var c__4229__auto___9125 = cljs.core.chunk_first.call(null, seq__7376_9124__$1);
            var G__9126 = cljs.core.chunk_rest.call(null, seq__7376_9124__$1);
            var G__9127 = c__4229__auto___9125;
            var G__9128 = cljs.core.count.call(null, c__4229__auto___9125);
            var G__9129 = 0;
            seq__7376_9114 = G__9126;
            chunk__7377_9115 = G__9127;
            count__7378_9116 = G__9128;
            i__7379_9117 = G__9129;
            continue;
          } else {
            var arg__4902__auto___9130 = cljs.core.first.call(null, seq__7376_9124__$1);
            a__4901__auto__.push(arg__4902__auto___9130);
            var G__9131 = cljs.core.next.call(null, seq__7376_9124__$1);
            var G__9132 = null;
            var G__9133 = 0;
            var G__9134 = 0;
            seq__7376_9114 = G__9131;
            chunk__7377_9115 = G__9132;
            count__7378_9116 = G__9133;
            i__7379_9117 = G__9134;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.li.apply(null, a__4901__auto__);
  };
  var li = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return li__delegate.call(this, args__4900__auto__);
  };
  li.cljs$lang$maxFixedArity = 0;
  li.cljs$lang$applyTo = function(arglist__9135) {
    var args__4900__auto__ = cljs.core.seq(arglist__9135);
    return li__delegate(args__4900__auto__);
  };
  li.cljs$core$IFn$_invoke$arity$variadic = li__delegate;
  return li;
}();
quiescent.dom.link = function() {
  var link__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7384_9136 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7385_9137 = null;
    var count__7386_9138 = 0;
    var i__7387_9139 = 0;
    while (true) {
      if (i__7387_9139 < count__7386_9138) {
        var arg__4902__auto___9140 = cljs.core._nth.call(null, chunk__7385_9137, i__7387_9139);
        a__4901__auto__.push(arg__4902__auto___9140);
        var G__9141 = seq__7384_9136;
        var G__9142 = chunk__7385_9137;
        var G__9143 = count__7386_9138;
        var G__9144 = i__7387_9139 + 1;
        seq__7384_9136 = G__9141;
        chunk__7385_9137 = G__9142;
        count__7386_9138 = G__9143;
        i__7387_9139 = G__9144;
        continue;
      } else {
        var temp__4126__auto___9145 = cljs.core.seq.call(null, seq__7384_9136);
        if (temp__4126__auto___9145) {
          var seq__7384_9146__$1 = temp__4126__auto___9145;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7384_9146__$1)) {
            var c__4229__auto___9147 = cljs.core.chunk_first.call(null, seq__7384_9146__$1);
            var G__9148 = cljs.core.chunk_rest.call(null, seq__7384_9146__$1);
            var G__9149 = c__4229__auto___9147;
            var G__9150 = cljs.core.count.call(null, c__4229__auto___9147);
            var G__9151 = 0;
            seq__7384_9136 = G__9148;
            chunk__7385_9137 = G__9149;
            count__7386_9138 = G__9150;
            i__7387_9139 = G__9151;
            continue;
          } else {
            var arg__4902__auto___9152 = cljs.core.first.call(null, seq__7384_9146__$1);
            a__4901__auto__.push(arg__4902__auto___9152);
            var G__9153 = cljs.core.next.call(null, seq__7384_9146__$1);
            var G__9154 = null;
            var G__9155 = 0;
            var G__9156 = 0;
            seq__7384_9136 = G__9153;
            chunk__7385_9137 = G__9154;
            count__7386_9138 = G__9155;
            i__7387_9139 = G__9156;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.link.apply(null, a__4901__auto__);
  };
  var link = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return link__delegate.call(this, args__4900__auto__);
  };
  link.cljs$lang$maxFixedArity = 0;
  link.cljs$lang$applyTo = function(arglist__9157) {
    var args__4900__auto__ = cljs.core.seq(arglist__9157);
    return link__delegate(args__4900__auto__);
  };
  link.cljs$core$IFn$_invoke$arity$variadic = link__delegate;
  return link;
}();
quiescent.dom.main = function() {
  var main__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7392_9158 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7393_9159 = null;
    var count__7394_9160 = 0;
    var i__7395_9161 = 0;
    while (true) {
      if (i__7395_9161 < count__7394_9160) {
        var arg__4902__auto___9162 = cljs.core._nth.call(null, chunk__7393_9159, i__7395_9161);
        a__4901__auto__.push(arg__4902__auto___9162);
        var G__9163 = seq__7392_9158;
        var G__9164 = chunk__7393_9159;
        var G__9165 = count__7394_9160;
        var G__9166 = i__7395_9161 + 1;
        seq__7392_9158 = G__9163;
        chunk__7393_9159 = G__9164;
        count__7394_9160 = G__9165;
        i__7395_9161 = G__9166;
        continue;
      } else {
        var temp__4126__auto___9167 = cljs.core.seq.call(null, seq__7392_9158);
        if (temp__4126__auto___9167) {
          var seq__7392_9168__$1 = temp__4126__auto___9167;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7392_9168__$1)) {
            var c__4229__auto___9169 = cljs.core.chunk_first.call(null, seq__7392_9168__$1);
            var G__9170 = cljs.core.chunk_rest.call(null, seq__7392_9168__$1);
            var G__9171 = c__4229__auto___9169;
            var G__9172 = cljs.core.count.call(null, c__4229__auto___9169);
            var G__9173 = 0;
            seq__7392_9158 = G__9170;
            chunk__7393_9159 = G__9171;
            count__7394_9160 = G__9172;
            i__7395_9161 = G__9173;
            continue;
          } else {
            var arg__4902__auto___9174 = cljs.core.first.call(null, seq__7392_9168__$1);
            a__4901__auto__.push(arg__4902__auto___9174);
            var G__9175 = cljs.core.next.call(null, seq__7392_9168__$1);
            var G__9176 = null;
            var G__9177 = 0;
            var G__9178 = 0;
            seq__7392_9158 = G__9175;
            chunk__7393_9159 = G__9176;
            count__7394_9160 = G__9177;
            i__7395_9161 = G__9178;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.main.apply(null, a__4901__auto__);
  };
  var main = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return main__delegate.call(this, args__4900__auto__);
  };
  main.cljs$lang$maxFixedArity = 0;
  main.cljs$lang$applyTo = function(arglist__9179) {
    var args__4900__auto__ = cljs.core.seq(arglist__9179);
    return main__delegate(args__4900__auto__);
  };
  main.cljs$core$IFn$_invoke$arity$variadic = main__delegate;
  return main;
}();
quiescent.dom.map = function() {
  var map__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7400_9180 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7401_9181 = null;
    var count__7402_9182 = 0;
    var i__7403_9183 = 0;
    while (true) {
      if (i__7403_9183 < count__7402_9182) {
        var arg__4902__auto___9184 = cljs.core._nth.call(null, chunk__7401_9181, i__7403_9183);
        a__4901__auto__.push(arg__4902__auto___9184);
        var G__9185 = seq__7400_9180;
        var G__9186 = chunk__7401_9181;
        var G__9187 = count__7402_9182;
        var G__9188 = i__7403_9183 + 1;
        seq__7400_9180 = G__9185;
        chunk__7401_9181 = G__9186;
        count__7402_9182 = G__9187;
        i__7403_9183 = G__9188;
        continue;
      } else {
        var temp__4126__auto___9189 = cljs.core.seq.call(null, seq__7400_9180);
        if (temp__4126__auto___9189) {
          var seq__7400_9190__$1 = temp__4126__auto___9189;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7400_9190__$1)) {
            var c__4229__auto___9191 = cljs.core.chunk_first.call(null, seq__7400_9190__$1);
            var G__9192 = cljs.core.chunk_rest.call(null, seq__7400_9190__$1);
            var G__9193 = c__4229__auto___9191;
            var G__9194 = cljs.core.count.call(null, c__4229__auto___9191);
            var G__9195 = 0;
            seq__7400_9180 = G__9192;
            chunk__7401_9181 = G__9193;
            count__7402_9182 = G__9194;
            i__7403_9183 = G__9195;
            continue;
          } else {
            var arg__4902__auto___9196 = cljs.core.first.call(null, seq__7400_9190__$1);
            a__4901__auto__.push(arg__4902__auto___9196);
            var G__9197 = cljs.core.next.call(null, seq__7400_9190__$1);
            var G__9198 = null;
            var G__9199 = 0;
            var G__9200 = 0;
            seq__7400_9180 = G__9197;
            chunk__7401_9181 = G__9198;
            count__7402_9182 = G__9199;
            i__7403_9183 = G__9200;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.map.apply(null, a__4901__auto__);
  };
  var map = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return map__delegate.call(this, args__4900__auto__);
  };
  map.cljs$lang$maxFixedArity = 0;
  map.cljs$lang$applyTo = function(arglist__9201) {
    var args__4900__auto__ = cljs.core.seq(arglist__9201);
    return map__delegate(args__4900__auto__);
  };
  map.cljs$core$IFn$_invoke$arity$variadic = map__delegate;
  return map;
}();
quiescent.dom.mark = function() {
  var mark__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7408_9202 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7409_9203 = null;
    var count__7410_9204 = 0;
    var i__7411_9205 = 0;
    while (true) {
      if (i__7411_9205 < count__7410_9204) {
        var arg__4902__auto___9206 = cljs.core._nth.call(null, chunk__7409_9203, i__7411_9205);
        a__4901__auto__.push(arg__4902__auto___9206);
        var G__9207 = seq__7408_9202;
        var G__9208 = chunk__7409_9203;
        var G__9209 = count__7410_9204;
        var G__9210 = i__7411_9205 + 1;
        seq__7408_9202 = G__9207;
        chunk__7409_9203 = G__9208;
        count__7410_9204 = G__9209;
        i__7411_9205 = G__9210;
        continue;
      } else {
        var temp__4126__auto___9211 = cljs.core.seq.call(null, seq__7408_9202);
        if (temp__4126__auto___9211) {
          var seq__7408_9212__$1 = temp__4126__auto___9211;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7408_9212__$1)) {
            var c__4229__auto___9213 = cljs.core.chunk_first.call(null, seq__7408_9212__$1);
            var G__9214 = cljs.core.chunk_rest.call(null, seq__7408_9212__$1);
            var G__9215 = c__4229__auto___9213;
            var G__9216 = cljs.core.count.call(null, c__4229__auto___9213);
            var G__9217 = 0;
            seq__7408_9202 = G__9214;
            chunk__7409_9203 = G__9215;
            count__7410_9204 = G__9216;
            i__7411_9205 = G__9217;
            continue;
          } else {
            var arg__4902__auto___9218 = cljs.core.first.call(null, seq__7408_9212__$1);
            a__4901__auto__.push(arg__4902__auto___9218);
            var G__9219 = cljs.core.next.call(null, seq__7408_9212__$1);
            var G__9220 = null;
            var G__9221 = 0;
            var G__9222 = 0;
            seq__7408_9202 = G__9219;
            chunk__7409_9203 = G__9220;
            count__7410_9204 = G__9221;
            i__7411_9205 = G__9222;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.mark.apply(null, a__4901__auto__);
  };
  var mark = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return mark__delegate.call(this, args__4900__auto__);
  };
  mark.cljs$lang$maxFixedArity = 0;
  mark.cljs$lang$applyTo = function(arglist__9223) {
    var args__4900__auto__ = cljs.core.seq(arglist__9223);
    return mark__delegate(args__4900__auto__);
  };
  mark.cljs$core$IFn$_invoke$arity$variadic = mark__delegate;
  return mark;
}();
quiescent.dom.menu = function() {
  var menu__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7416_9224 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7417_9225 = null;
    var count__7418_9226 = 0;
    var i__7419_9227 = 0;
    while (true) {
      if (i__7419_9227 < count__7418_9226) {
        var arg__4902__auto___9228 = cljs.core._nth.call(null, chunk__7417_9225, i__7419_9227);
        a__4901__auto__.push(arg__4902__auto___9228);
        var G__9229 = seq__7416_9224;
        var G__9230 = chunk__7417_9225;
        var G__9231 = count__7418_9226;
        var G__9232 = i__7419_9227 + 1;
        seq__7416_9224 = G__9229;
        chunk__7417_9225 = G__9230;
        count__7418_9226 = G__9231;
        i__7419_9227 = G__9232;
        continue;
      } else {
        var temp__4126__auto___9233 = cljs.core.seq.call(null, seq__7416_9224);
        if (temp__4126__auto___9233) {
          var seq__7416_9234__$1 = temp__4126__auto___9233;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7416_9234__$1)) {
            var c__4229__auto___9235 = cljs.core.chunk_first.call(null, seq__7416_9234__$1);
            var G__9236 = cljs.core.chunk_rest.call(null, seq__7416_9234__$1);
            var G__9237 = c__4229__auto___9235;
            var G__9238 = cljs.core.count.call(null, c__4229__auto___9235);
            var G__9239 = 0;
            seq__7416_9224 = G__9236;
            chunk__7417_9225 = G__9237;
            count__7418_9226 = G__9238;
            i__7419_9227 = G__9239;
            continue;
          } else {
            var arg__4902__auto___9240 = cljs.core.first.call(null, seq__7416_9234__$1);
            a__4901__auto__.push(arg__4902__auto___9240);
            var G__9241 = cljs.core.next.call(null, seq__7416_9234__$1);
            var G__9242 = null;
            var G__9243 = 0;
            var G__9244 = 0;
            seq__7416_9224 = G__9241;
            chunk__7417_9225 = G__9242;
            count__7418_9226 = G__9243;
            i__7419_9227 = G__9244;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.menu.apply(null, a__4901__auto__);
  };
  var menu = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return menu__delegate.call(this, args__4900__auto__);
  };
  menu.cljs$lang$maxFixedArity = 0;
  menu.cljs$lang$applyTo = function(arglist__9245) {
    var args__4900__auto__ = cljs.core.seq(arglist__9245);
    return menu__delegate(args__4900__auto__);
  };
  menu.cljs$core$IFn$_invoke$arity$variadic = menu__delegate;
  return menu;
}();
quiescent.dom.menuitem = function() {
  var menuitem__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7424_9246 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7425_9247 = null;
    var count__7426_9248 = 0;
    var i__7427_9249 = 0;
    while (true) {
      if (i__7427_9249 < count__7426_9248) {
        var arg__4902__auto___9250 = cljs.core._nth.call(null, chunk__7425_9247, i__7427_9249);
        a__4901__auto__.push(arg__4902__auto___9250);
        var G__9251 = seq__7424_9246;
        var G__9252 = chunk__7425_9247;
        var G__9253 = count__7426_9248;
        var G__9254 = i__7427_9249 + 1;
        seq__7424_9246 = G__9251;
        chunk__7425_9247 = G__9252;
        count__7426_9248 = G__9253;
        i__7427_9249 = G__9254;
        continue;
      } else {
        var temp__4126__auto___9255 = cljs.core.seq.call(null, seq__7424_9246);
        if (temp__4126__auto___9255) {
          var seq__7424_9256__$1 = temp__4126__auto___9255;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7424_9256__$1)) {
            var c__4229__auto___9257 = cljs.core.chunk_first.call(null, seq__7424_9256__$1);
            var G__9258 = cljs.core.chunk_rest.call(null, seq__7424_9256__$1);
            var G__9259 = c__4229__auto___9257;
            var G__9260 = cljs.core.count.call(null, c__4229__auto___9257);
            var G__9261 = 0;
            seq__7424_9246 = G__9258;
            chunk__7425_9247 = G__9259;
            count__7426_9248 = G__9260;
            i__7427_9249 = G__9261;
            continue;
          } else {
            var arg__4902__auto___9262 = cljs.core.first.call(null, seq__7424_9256__$1);
            a__4901__auto__.push(arg__4902__auto___9262);
            var G__9263 = cljs.core.next.call(null, seq__7424_9256__$1);
            var G__9264 = null;
            var G__9265 = 0;
            var G__9266 = 0;
            seq__7424_9246 = G__9263;
            chunk__7425_9247 = G__9264;
            count__7426_9248 = G__9265;
            i__7427_9249 = G__9266;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.menuitem.apply(null, a__4901__auto__);
  };
  var menuitem = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return menuitem__delegate.call(this, args__4900__auto__);
  };
  menuitem.cljs$lang$maxFixedArity = 0;
  menuitem.cljs$lang$applyTo = function(arglist__9267) {
    var args__4900__auto__ = cljs.core.seq(arglist__9267);
    return menuitem__delegate(args__4900__auto__);
  };
  menuitem.cljs$core$IFn$_invoke$arity$variadic = menuitem__delegate;
  return menuitem;
}();
quiescent.dom.meta = function() {
  var meta__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7432_9268 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7433_9269 = null;
    var count__7434_9270 = 0;
    var i__7435_9271 = 0;
    while (true) {
      if (i__7435_9271 < count__7434_9270) {
        var arg__4902__auto___9272 = cljs.core._nth.call(null, chunk__7433_9269, i__7435_9271);
        a__4901__auto__.push(arg__4902__auto___9272);
        var G__9273 = seq__7432_9268;
        var G__9274 = chunk__7433_9269;
        var G__9275 = count__7434_9270;
        var G__9276 = i__7435_9271 + 1;
        seq__7432_9268 = G__9273;
        chunk__7433_9269 = G__9274;
        count__7434_9270 = G__9275;
        i__7435_9271 = G__9276;
        continue;
      } else {
        var temp__4126__auto___9277 = cljs.core.seq.call(null, seq__7432_9268);
        if (temp__4126__auto___9277) {
          var seq__7432_9278__$1 = temp__4126__auto___9277;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7432_9278__$1)) {
            var c__4229__auto___9279 = cljs.core.chunk_first.call(null, seq__7432_9278__$1);
            var G__9280 = cljs.core.chunk_rest.call(null, seq__7432_9278__$1);
            var G__9281 = c__4229__auto___9279;
            var G__9282 = cljs.core.count.call(null, c__4229__auto___9279);
            var G__9283 = 0;
            seq__7432_9268 = G__9280;
            chunk__7433_9269 = G__9281;
            count__7434_9270 = G__9282;
            i__7435_9271 = G__9283;
            continue;
          } else {
            var arg__4902__auto___9284 = cljs.core.first.call(null, seq__7432_9278__$1);
            a__4901__auto__.push(arg__4902__auto___9284);
            var G__9285 = cljs.core.next.call(null, seq__7432_9278__$1);
            var G__9286 = null;
            var G__9287 = 0;
            var G__9288 = 0;
            seq__7432_9268 = G__9285;
            chunk__7433_9269 = G__9286;
            count__7434_9270 = G__9287;
            i__7435_9271 = G__9288;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.meta.apply(null, a__4901__auto__);
  };
  var meta = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return meta__delegate.call(this, args__4900__auto__);
  };
  meta.cljs$lang$maxFixedArity = 0;
  meta.cljs$lang$applyTo = function(arglist__9289) {
    var args__4900__auto__ = cljs.core.seq(arglist__9289);
    return meta__delegate(args__4900__auto__);
  };
  meta.cljs$core$IFn$_invoke$arity$variadic = meta__delegate;
  return meta;
}();
quiescent.dom.meter = function() {
  var meter__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7440_9290 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7441_9291 = null;
    var count__7442_9292 = 0;
    var i__7443_9293 = 0;
    while (true) {
      if (i__7443_9293 < count__7442_9292) {
        var arg__4902__auto___9294 = cljs.core._nth.call(null, chunk__7441_9291, i__7443_9293);
        a__4901__auto__.push(arg__4902__auto___9294);
        var G__9295 = seq__7440_9290;
        var G__9296 = chunk__7441_9291;
        var G__9297 = count__7442_9292;
        var G__9298 = i__7443_9293 + 1;
        seq__7440_9290 = G__9295;
        chunk__7441_9291 = G__9296;
        count__7442_9292 = G__9297;
        i__7443_9293 = G__9298;
        continue;
      } else {
        var temp__4126__auto___9299 = cljs.core.seq.call(null, seq__7440_9290);
        if (temp__4126__auto___9299) {
          var seq__7440_9300__$1 = temp__4126__auto___9299;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7440_9300__$1)) {
            var c__4229__auto___9301 = cljs.core.chunk_first.call(null, seq__7440_9300__$1);
            var G__9302 = cljs.core.chunk_rest.call(null, seq__7440_9300__$1);
            var G__9303 = c__4229__auto___9301;
            var G__9304 = cljs.core.count.call(null, c__4229__auto___9301);
            var G__9305 = 0;
            seq__7440_9290 = G__9302;
            chunk__7441_9291 = G__9303;
            count__7442_9292 = G__9304;
            i__7443_9293 = G__9305;
            continue;
          } else {
            var arg__4902__auto___9306 = cljs.core.first.call(null, seq__7440_9300__$1);
            a__4901__auto__.push(arg__4902__auto___9306);
            var G__9307 = cljs.core.next.call(null, seq__7440_9300__$1);
            var G__9308 = null;
            var G__9309 = 0;
            var G__9310 = 0;
            seq__7440_9290 = G__9307;
            chunk__7441_9291 = G__9308;
            count__7442_9292 = G__9309;
            i__7443_9293 = G__9310;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.meter.apply(null, a__4901__auto__);
  };
  var meter = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return meter__delegate.call(this, args__4900__auto__);
  };
  meter.cljs$lang$maxFixedArity = 0;
  meter.cljs$lang$applyTo = function(arglist__9311) {
    var args__4900__auto__ = cljs.core.seq(arglist__9311);
    return meter__delegate(args__4900__auto__);
  };
  meter.cljs$core$IFn$_invoke$arity$variadic = meter__delegate;
  return meter;
}();
quiescent.dom.nav = function() {
  var nav__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7448_9312 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7449_9313 = null;
    var count__7450_9314 = 0;
    var i__7451_9315 = 0;
    while (true) {
      if (i__7451_9315 < count__7450_9314) {
        var arg__4902__auto___9316 = cljs.core._nth.call(null, chunk__7449_9313, i__7451_9315);
        a__4901__auto__.push(arg__4902__auto___9316);
        var G__9317 = seq__7448_9312;
        var G__9318 = chunk__7449_9313;
        var G__9319 = count__7450_9314;
        var G__9320 = i__7451_9315 + 1;
        seq__7448_9312 = G__9317;
        chunk__7449_9313 = G__9318;
        count__7450_9314 = G__9319;
        i__7451_9315 = G__9320;
        continue;
      } else {
        var temp__4126__auto___9321 = cljs.core.seq.call(null, seq__7448_9312);
        if (temp__4126__auto___9321) {
          var seq__7448_9322__$1 = temp__4126__auto___9321;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7448_9322__$1)) {
            var c__4229__auto___9323 = cljs.core.chunk_first.call(null, seq__7448_9322__$1);
            var G__9324 = cljs.core.chunk_rest.call(null, seq__7448_9322__$1);
            var G__9325 = c__4229__auto___9323;
            var G__9326 = cljs.core.count.call(null, c__4229__auto___9323);
            var G__9327 = 0;
            seq__7448_9312 = G__9324;
            chunk__7449_9313 = G__9325;
            count__7450_9314 = G__9326;
            i__7451_9315 = G__9327;
            continue;
          } else {
            var arg__4902__auto___9328 = cljs.core.first.call(null, seq__7448_9322__$1);
            a__4901__auto__.push(arg__4902__auto___9328);
            var G__9329 = cljs.core.next.call(null, seq__7448_9322__$1);
            var G__9330 = null;
            var G__9331 = 0;
            var G__9332 = 0;
            seq__7448_9312 = G__9329;
            chunk__7449_9313 = G__9330;
            count__7450_9314 = G__9331;
            i__7451_9315 = G__9332;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.nav.apply(null, a__4901__auto__);
  };
  var nav = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return nav__delegate.call(this, args__4900__auto__);
  };
  nav.cljs$lang$maxFixedArity = 0;
  nav.cljs$lang$applyTo = function(arglist__9333) {
    var args__4900__auto__ = cljs.core.seq(arglist__9333);
    return nav__delegate(args__4900__auto__);
  };
  nav.cljs$core$IFn$_invoke$arity$variadic = nav__delegate;
  return nav;
}();
quiescent.dom.noscript = function() {
  var noscript__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7456_9334 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7457_9335 = null;
    var count__7458_9336 = 0;
    var i__7459_9337 = 0;
    while (true) {
      if (i__7459_9337 < count__7458_9336) {
        var arg__4902__auto___9338 = cljs.core._nth.call(null, chunk__7457_9335, i__7459_9337);
        a__4901__auto__.push(arg__4902__auto___9338);
        var G__9339 = seq__7456_9334;
        var G__9340 = chunk__7457_9335;
        var G__9341 = count__7458_9336;
        var G__9342 = i__7459_9337 + 1;
        seq__7456_9334 = G__9339;
        chunk__7457_9335 = G__9340;
        count__7458_9336 = G__9341;
        i__7459_9337 = G__9342;
        continue;
      } else {
        var temp__4126__auto___9343 = cljs.core.seq.call(null, seq__7456_9334);
        if (temp__4126__auto___9343) {
          var seq__7456_9344__$1 = temp__4126__auto___9343;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7456_9344__$1)) {
            var c__4229__auto___9345 = cljs.core.chunk_first.call(null, seq__7456_9344__$1);
            var G__9346 = cljs.core.chunk_rest.call(null, seq__7456_9344__$1);
            var G__9347 = c__4229__auto___9345;
            var G__9348 = cljs.core.count.call(null, c__4229__auto___9345);
            var G__9349 = 0;
            seq__7456_9334 = G__9346;
            chunk__7457_9335 = G__9347;
            count__7458_9336 = G__9348;
            i__7459_9337 = G__9349;
            continue;
          } else {
            var arg__4902__auto___9350 = cljs.core.first.call(null, seq__7456_9344__$1);
            a__4901__auto__.push(arg__4902__auto___9350);
            var G__9351 = cljs.core.next.call(null, seq__7456_9344__$1);
            var G__9352 = null;
            var G__9353 = 0;
            var G__9354 = 0;
            seq__7456_9334 = G__9351;
            chunk__7457_9335 = G__9352;
            count__7458_9336 = G__9353;
            i__7459_9337 = G__9354;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.noscript.apply(null, a__4901__auto__);
  };
  var noscript = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return noscript__delegate.call(this, args__4900__auto__);
  };
  noscript.cljs$lang$maxFixedArity = 0;
  noscript.cljs$lang$applyTo = function(arglist__9355) {
    var args__4900__auto__ = cljs.core.seq(arglist__9355);
    return noscript__delegate(args__4900__auto__);
  };
  noscript.cljs$core$IFn$_invoke$arity$variadic = noscript__delegate;
  return noscript;
}();
quiescent.dom.object = function() {
  var object__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7464_9356 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7465_9357 = null;
    var count__7466_9358 = 0;
    var i__7467_9359 = 0;
    while (true) {
      if (i__7467_9359 < count__7466_9358) {
        var arg__4902__auto___9360 = cljs.core._nth.call(null, chunk__7465_9357, i__7467_9359);
        a__4901__auto__.push(arg__4902__auto___9360);
        var G__9361 = seq__7464_9356;
        var G__9362 = chunk__7465_9357;
        var G__9363 = count__7466_9358;
        var G__9364 = i__7467_9359 + 1;
        seq__7464_9356 = G__9361;
        chunk__7465_9357 = G__9362;
        count__7466_9358 = G__9363;
        i__7467_9359 = G__9364;
        continue;
      } else {
        var temp__4126__auto___9365 = cljs.core.seq.call(null, seq__7464_9356);
        if (temp__4126__auto___9365) {
          var seq__7464_9366__$1 = temp__4126__auto___9365;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7464_9366__$1)) {
            var c__4229__auto___9367 = cljs.core.chunk_first.call(null, seq__7464_9366__$1);
            var G__9368 = cljs.core.chunk_rest.call(null, seq__7464_9366__$1);
            var G__9369 = c__4229__auto___9367;
            var G__9370 = cljs.core.count.call(null, c__4229__auto___9367);
            var G__9371 = 0;
            seq__7464_9356 = G__9368;
            chunk__7465_9357 = G__9369;
            count__7466_9358 = G__9370;
            i__7467_9359 = G__9371;
            continue;
          } else {
            var arg__4902__auto___9372 = cljs.core.first.call(null, seq__7464_9366__$1);
            a__4901__auto__.push(arg__4902__auto___9372);
            var G__9373 = cljs.core.next.call(null, seq__7464_9366__$1);
            var G__9374 = null;
            var G__9375 = 0;
            var G__9376 = 0;
            seq__7464_9356 = G__9373;
            chunk__7465_9357 = G__9374;
            count__7466_9358 = G__9375;
            i__7467_9359 = G__9376;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.object.apply(null, a__4901__auto__);
  };
  var object = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return object__delegate.call(this, args__4900__auto__);
  };
  object.cljs$lang$maxFixedArity = 0;
  object.cljs$lang$applyTo = function(arglist__9377) {
    var args__4900__auto__ = cljs.core.seq(arglist__9377);
    return object__delegate(args__4900__auto__);
  };
  object.cljs$core$IFn$_invoke$arity$variadic = object__delegate;
  return object;
}();
quiescent.dom.ol = function() {
  var ol__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7472_9378 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7473_9379 = null;
    var count__7474_9380 = 0;
    var i__7475_9381 = 0;
    while (true) {
      if (i__7475_9381 < count__7474_9380) {
        var arg__4902__auto___9382 = cljs.core._nth.call(null, chunk__7473_9379, i__7475_9381);
        a__4901__auto__.push(arg__4902__auto___9382);
        var G__9383 = seq__7472_9378;
        var G__9384 = chunk__7473_9379;
        var G__9385 = count__7474_9380;
        var G__9386 = i__7475_9381 + 1;
        seq__7472_9378 = G__9383;
        chunk__7473_9379 = G__9384;
        count__7474_9380 = G__9385;
        i__7475_9381 = G__9386;
        continue;
      } else {
        var temp__4126__auto___9387 = cljs.core.seq.call(null, seq__7472_9378);
        if (temp__4126__auto___9387) {
          var seq__7472_9388__$1 = temp__4126__auto___9387;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7472_9388__$1)) {
            var c__4229__auto___9389 = cljs.core.chunk_first.call(null, seq__7472_9388__$1);
            var G__9390 = cljs.core.chunk_rest.call(null, seq__7472_9388__$1);
            var G__9391 = c__4229__auto___9389;
            var G__9392 = cljs.core.count.call(null, c__4229__auto___9389);
            var G__9393 = 0;
            seq__7472_9378 = G__9390;
            chunk__7473_9379 = G__9391;
            count__7474_9380 = G__9392;
            i__7475_9381 = G__9393;
            continue;
          } else {
            var arg__4902__auto___9394 = cljs.core.first.call(null, seq__7472_9388__$1);
            a__4901__auto__.push(arg__4902__auto___9394);
            var G__9395 = cljs.core.next.call(null, seq__7472_9388__$1);
            var G__9396 = null;
            var G__9397 = 0;
            var G__9398 = 0;
            seq__7472_9378 = G__9395;
            chunk__7473_9379 = G__9396;
            count__7474_9380 = G__9397;
            i__7475_9381 = G__9398;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.ol.apply(null, a__4901__auto__);
  };
  var ol = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return ol__delegate.call(this, args__4900__auto__);
  };
  ol.cljs$lang$maxFixedArity = 0;
  ol.cljs$lang$applyTo = function(arglist__9399) {
    var args__4900__auto__ = cljs.core.seq(arglist__9399);
    return ol__delegate(args__4900__auto__);
  };
  ol.cljs$core$IFn$_invoke$arity$variadic = ol__delegate;
  return ol;
}();
quiescent.dom.optgroup = function() {
  var optgroup__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7480_9400 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7481_9401 = null;
    var count__7482_9402 = 0;
    var i__7483_9403 = 0;
    while (true) {
      if (i__7483_9403 < count__7482_9402) {
        var arg__4902__auto___9404 = cljs.core._nth.call(null, chunk__7481_9401, i__7483_9403);
        a__4901__auto__.push(arg__4902__auto___9404);
        var G__9405 = seq__7480_9400;
        var G__9406 = chunk__7481_9401;
        var G__9407 = count__7482_9402;
        var G__9408 = i__7483_9403 + 1;
        seq__7480_9400 = G__9405;
        chunk__7481_9401 = G__9406;
        count__7482_9402 = G__9407;
        i__7483_9403 = G__9408;
        continue;
      } else {
        var temp__4126__auto___9409 = cljs.core.seq.call(null, seq__7480_9400);
        if (temp__4126__auto___9409) {
          var seq__7480_9410__$1 = temp__4126__auto___9409;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7480_9410__$1)) {
            var c__4229__auto___9411 = cljs.core.chunk_first.call(null, seq__7480_9410__$1);
            var G__9412 = cljs.core.chunk_rest.call(null, seq__7480_9410__$1);
            var G__9413 = c__4229__auto___9411;
            var G__9414 = cljs.core.count.call(null, c__4229__auto___9411);
            var G__9415 = 0;
            seq__7480_9400 = G__9412;
            chunk__7481_9401 = G__9413;
            count__7482_9402 = G__9414;
            i__7483_9403 = G__9415;
            continue;
          } else {
            var arg__4902__auto___9416 = cljs.core.first.call(null, seq__7480_9410__$1);
            a__4901__auto__.push(arg__4902__auto___9416);
            var G__9417 = cljs.core.next.call(null, seq__7480_9410__$1);
            var G__9418 = null;
            var G__9419 = 0;
            var G__9420 = 0;
            seq__7480_9400 = G__9417;
            chunk__7481_9401 = G__9418;
            count__7482_9402 = G__9419;
            i__7483_9403 = G__9420;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.optgroup.apply(null, a__4901__auto__);
  };
  var optgroup = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return optgroup__delegate.call(this, args__4900__auto__);
  };
  optgroup.cljs$lang$maxFixedArity = 0;
  optgroup.cljs$lang$applyTo = function(arglist__9421) {
    var args__4900__auto__ = cljs.core.seq(arglist__9421);
    return optgroup__delegate(args__4900__auto__);
  };
  optgroup.cljs$core$IFn$_invoke$arity$variadic = optgroup__delegate;
  return optgroup;
}();
quiescent.dom.option = function() {
  var option__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7488_9422 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7489_9423 = null;
    var count__7490_9424 = 0;
    var i__7491_9425 = 0;
    while (true) {
      if (i__7491_9425 < count__7490_9424) {
        var arg__4902__auto___9426 = cljs.core._nth.call(null, chunk__7489_9423, i__7491_9425);
        a__4901__auto__.push(arg__4902__auto___9426);
        var G__9427 = seq__7488_9422;
        var G__9428 = chunk__7489_9423;
        var G__9429 = count__7490_9424;
        var G__9430 = i__7491_9425 + 1;
        seq__7488_9422 = G__9427;
        chunk__7489_9423 = G__9428;
        count__7490_9424 = G__9429;
        i__7491_9425 = G__9430;
        continue;
      } else {
        var temp__4126__auto___9431 = cljs.core.seq.call(null, seq__7488_9422);
        if (temp__4126__auto___9431) {
          var seq__7488_9432__$1 = temp__4126__auto___9431;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7488_9432__$1)) {
            var c__4229__auto___9433 = cljs.core.chunk_first.call(null, seq__7488_9432__$1);
            var G__9434 = cljs.core.chunk_rest.call(null, seq__7488_9432__$1);
            var G__9435 = c__4229__auto___9433;
            var G__9436 = cljs.core.count.call(null, c__4229__auto___9433);
            var G__9437 = 0;
            seq__7488_9422 = G__9434;
            chunk__7489_9423 = G__9435;
            count__7490_9424 = G__9436;
            i__7491_9425 = G__9437;
            continue;
          } else {
            var arg__4902__auto___9438 = cljs.core.first.call(null, seq__7488_9432__$1);
            a__4901__auto__.push(arg__4902__auto___9438);
            var G__9439 = cljs.core.next.call(null, seq__7488_9432__$1);
            var G__9440 = null;
            var G__9441 = 0;
            var G__9442 = 0;
            seq__7488_9422 = G__9439;
            chunk__7489_9423 = G__9440;
            count__7490_9424 = G__9441;
            i__7491_9425 = G__9442;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.option.apply(null, a__4901__auto__);
  };
  var option = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return option__delegate.call(this, args__4900__auto__);
  };
  option.cljs$lang$maxFixedArity = 0;
  option.cljs$lang$applyTo = function(arglist__9443) {
    var args__4900__auto__ = cljs.core.seq(arglist__9443);
    return option__delegate(args__4900__auto__);
  };
  option.cljs$core$IFn$_invoke$arity$variadic = option__delegate;
  return option;
}();
quiescent.dom.output = function() {
  var output__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7496_9444 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7497_9445 = null;
    var count__7498_9446 = 0;
    var i__7499_9447 = 0;
    while (true) {
      if (i__7499_9447 < count__7498_9446) {
        var arg__4902__auto___9448 = cljs.core._nth.call(null, chunk__7497_9445, i__7499_9447);
        a__4901__auto__.push(arg__4902__auto___9448);
        var G__9449 = seq__7496_9444;
        var G__9450 = chunk__7497_9445;
        var G__9451 = count__7498_9446;
        var G__9452 = i__7499_9447 + 1;
        seq__7496_9444 = G__9449;
        chunk__7497_9445 = G__9450;
        count__7498_9446 = G__9451;
        i__7499_9447 = G__9452;
        continue;
      } else {
        var temp__4126__auto___9453 = cljs.core.seq.call(null, seq__7496_9444);
        if (temp__4126__auto___9453) {
          var seq__7496_9454__$1 = temp__4126__auto___9453;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7496_9454__$1)) {
            var c__4229__auto___9455 = cljs.core.chunk_first.call(null, seq__7496_9454__$1);
            var G__9456 = cljs.core.chunk_rest.call(null, seq__7496_9454__$1);
            var G__9457 = c__4229__auto___9455;
            var G__9458 = cljs.core.count.call(null, c__4229__auto___9455);
            var G__9459 = 0;
            seq__7496_9444 = G__9456;
            chunk__7497_9445 = G__9457;
            count__7498_9446 = G__9458;
            i__7499_9447 = G__9459;
            continue;
          } else {
            var arg__4902__auto___9460 = cljs.core.first.call(null, seq__7496_9454__$1);
            a__4901__auto__.push(arg__4902__auto___9460);
            var G__9461 = cljs.core.next.call(null, seq__7496_9454__$1);
            var G__9462 = null;
            var G__9463 = 0;
            var G__9464 = 0;
            seq__7496_9444 = G__9461;
            chunk__7497_9445 = G__9462;
            count__7498_9446 = G__9463;
            i__7499_9447 = G__9464;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.output.apply(null, a__4901__auto__);
  };
  var output = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return output__delegate.call(this, args__4900__auto__);
  };
  output.cljs$lang$maxFixedArity = 0;
  output.cljs$lang$applyTo = function(arglist__9465) {
    var args__4900__auto__ = cljs.core.seq(arglist__9465);
    return output__delegate(args__4900__auto__);
  };
  output.cljs$core$IFn$_invoke$arity$variadic = output__delegate;
  return output;
}();
quiescent.dom.p = function() {
  var p__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7504_9466 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7505_9467 = null;
    var count__7506_9468 = 0;
    var i__7507_9469 = 0;
    while (true) {
      if (i__7507_9469 < count__7506_9468) {
        var arg__4902__auto___9470 = cljs.core._nth.call(null, chunk__7505_9467, i__7507_9469);
        a__4901__auto__.push(arg__4902__auto___9470);
        var G__9471 = seq__7504_9466;
        var G__9472 = chunk__7505_9467;
        var G__9473 = count__7506_9468;
        var G__9474 = i__7507_9469 + 1;
        seq__7504_9466 = G__9471;
        chunk__7505_9467 = G__9472;
        count__7506_9468 = G__9473;
        i__7507_9469 = G__9474;
        continue;
      } else {
        var temp__4126__auto___9475 = cljs.core.seq.call(null, seq__7504_9466);
        if (temp__4126__auto___9475) {
          var seq__7504_9476__$1 = temp__4126__auto___9475;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7504_9476__$1)) {
            var c__4229__auto___9477 = cljs.core.chunk_first.call(null, seq__7504_9476__$1);
            var G__9478 = cljs.core.chunk_rest.call(null, seq__7504_9476__$1);
            var G__9479 = c__4229__auto___9477;
            var G__9480 = cljs.core.count.call(null, c__4229__auto___9477);
            var G__9481 = 0;
            seq__7504_9466 = G__9478;
            chunk__7505_9467 = G__9479;
            count__7506_9468 = G__9480;
            i__7507_9469 = G__9481;
            continue;
          } else {
            var arg__4902__auto___9482 = cljs.core.first.call(null, seq__7504_9476__$1);
            a__4901__auto__.push(arg__4902__auto___9482);
            var G__9483 = cljs.core.next.call(null, seq__7504_9476__$1);
            var G__9484 = null;
            var G__9485 = 0;
            var G__9486 = 0;
            seq__7504_9466 = G__9483;
            chunk__7505_9467 = G__9484;
            count__7506_9468 = G__9485;
            i__7507_9469 = G__9486;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.p.apply(null, a__4901__auto__);
  };
  var p = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return p__delegate.call(this, args__4900__auto__);
  };
  p.cljs$lang$maxFixedArity = 0;
  p.cljs$lang$applyTo = function(arglist__9487) {
    var args__4900__auto__ = cljs.core.seq(arglist__9487);
    return p__delegate(args__4900__auto__);
  };
  p.cljs$core$IFn$_invoke$arity$variadic = p__delegate;
  return p;
}();
quiescent.dom.param = function() {
  var param__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7512_9488 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7513_9489 = null;
    var count__7514_9490 = 0;
    var i__7515_9491 = 0;
    while (true) {
      if (i__7515_9491 < count__7514_9490) {
        var arg__4902__auto___9492 = cljs.core._nth.call(null, chunk__7513_9489, i__7515_9491);
        a__4901__auto__.push(arg__4902__auto___9492);
        var G__9493 = seq__7512_9488;
        var G__9494 = chunk__7513_9489;
        var G__9495 = count__7514_9490;
        var G__9496 = i__7515_9491 + 1;
        seq__7512_9488 = G__9493;
        chunk__7513_9489 = G__9494;
        count__7514_9490 = G__9495;
        i__7515_9491 = G__9496;
        continue;
      } else {
        var temp__4126__auto___9497 = cljs.core.seq.call(null, seq__7512_9488);
        if (temp__4126__auto___9497) {
          var seq__7512_9498__$1 = temp__4126__auto___9497;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7512_9498__$1)) {
            var c__4229__auto___9499 = cljs.core.chunk_first.call(null, seq__7512_9498__$1);
            var G__9500 = cljs.core.chunk_rest.call(null, seq__7512_9498__$1);
            var G__9501 = c__4229__auto___9499;
            var G__9502 = cljs.core.count.call(null, c__4229__auto___9499);
            var G__9503 = 0;
            seq__7512_9488 = G__9500;
            chunk__7513_9489 = G__9501;
            count__7514_9490 = G__9502;
            i__7515_9491 = G__9503;
            continue;
          } else {
            var arg__4902__auto___9504 = cljs.core.first.call(null, seq__7512_9498__$1);
            a__4901__auto__.push(arg__4902__auto___9504);
            var G__9505 = cljs.core.next.call(null, seq__7512_9498__$1);
            var G__9506 = null;
            var G__9507 = 0;
            var G__9508 = 0;
            seq__7512_9488 = G__9505;
            chunk__7513_9489 = G__9506;
            count__7514_9490 = G__9507;
            i__7515_9491 = G__9508;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.param.apply(null, a__4901__auto__);
  };
  var param = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return param__delegate.call(this, args__4900__auto__);
  };
  param.cljs$lang$maxFixedArity = 0;
  param.cljs$lang$applyTo = function(arglist__9509) {
    var args__4900__auto__ = cljs.core.seq(arglist__9509);
    return param__delegate(args__4900__auto__);
  };
  param.cljs$core$IFn$_invoke$arity$variadic = param__delegate;
  return param;
}();
quiescent.dom.pre = function() {
  var pre__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7520_9510 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7521_9511 = null;
    var count__7522_9512 = 0;
    var i__7523_9513 = 0;
    while (true) {
      if (i__7523_9513 < count__7522_9512) {
        var arg__4902__auto___9514 = cljs.core._nth.call(null, chunk__7521_9511, i__7523_9513);
        a__4901__auto__.push(arg__4902__auto___9514);
        var G__9515 = seq__7520_9510;
        var G__9516 = chunk__7521_9511;
        var G__9517 = count__7522_9512;
        var G__9518 = i__7523_9513 + 1;
        seq__7520_9510 = G__9515;
        chunk__7521_9511 = G__9516;
        count__7522_9512 = G__9517;
        i__7523_9513 = G__9518;
        continue;
      } else {
        var temp__4126__auto___9519 = cljs.core.seq.call(null, seq__7520_9510);
        if (temp__4126__auto___9519) {
          var seq__7520_9520__$1 = temp__4126__auto___9519;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7520_9520__$1)) {
            var c__4229__auto___9521 = cljs.core.chunk_first.call(null, seq__7520_9520__$1);
            var G__9522 = cljs.core.chunk_rest.call(null, seq__7520_9520__$1);
            var G__9523 = c__4229__auto___9521;
            var G__9524 = cljs.core.count.call(null, c__4229__auto___9521);
            var G__9525 = 0;
            seq__7520_9510 = G__9522;
            chunk__7521_9511 = G__9523;
            count__7522_9512 = G__9524;
            i__7523_9513 = G__9525;
            continue;
          } else {
            var arg__4902__auto___9526 = cljs.core.first.call(null, seq__7520_9520__$1);
            a__4901__auto__.push(arg__4902__auto___9526);
            var G__9527 = cljs.core.next.call(null, seq__7520_9520__$1);
            var G__9528 = null;
            var G__9529 = 0;
            var G__9530 = 0;
            seq__7520_9510 = G__9527;
            chunk__7521_9511 = G__9528;
            count__7522_9512 = G__9529;
            i__7523_9513 = G__9530;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.pre.apply(null, a__4901__auto__);
  };
  var pre = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pre__delegate.call(this, args__4900__auto__);
  };
  pre.cljs$lang$maxFixedArity = 0;
  pre.cljs$lang$applyTo = function(arglist__9531) {
    var args__4900__auto__ = cljs.core.seq(arglist__9531);
    return pre__delegate(args__4900__auto__);
  };
  pre.cljs$core$IFn$_invoke$arity$variadic = pre__delegate;
  return pre;
}();
quiescent.dom.progress = function() {
  var progress__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7528_9532 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7529_9533 = null;
    var count__7530_9534 = 0;
    var i__7531_9535 = 0;
    while (true) {
      if (i__7531_9535 < count__7530_9534) {
        var arg__4902__auto___9536 = cljs.core._nth.call(null, chunk__7529_9533, i__7531_9535);
        a__4901__auto__.push(arg__4902__auto___9536);
        var G__9537 = seq__7528_9532;
        var G__9538 = chunk__7529_9533;
        var G__9539 = count__7530_9534;
        var G__9540 = i__7531_9535 + 1;
        seq__7528_9532 = G__9537;
        chunk__7529_9533 = G__9538;
        count__7530_9534 = G__9539;
        i__7531_9535 = G__9540;
        continue;
      } else {
        var temp__4126__auto___9541 = cljs.core.seq.call(null, seq__7528_9532);
        if (temp__4126__auto___9541) {
          var seq__7528_9542__$1 = temp__4126__auto___9541;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7528_9542__$1)) {
            var c__4229__auto___9543 = cljs.core.chunk_first.call(null, seq__7528_9542__$1);
            var G__9544 = cljs.core.chunk_rest.call(null, seq__7528_9542__$1);
            var G__9545 = c__4229__auto___9543;
            var G__9546 = cljs.core.count.call(null, c__4229__auto___9543);
            var G__9547 = 0;
            seq__7528_9532 = G__9544;
            chunk__7529_9533 = G__9545;
            count__7530_9534 = G__9546;
            i__7531_9535 = G__9547;
            continue;
          } else {
            var arg__4902__auto___9548 = cljs.core.first.call(null, seq__7528_9542__$1);
            a__4901__auto__.push(arg__4902__auto___9548);
            var G__9549 = cljs.core.next.call(null, seq__7528_9542__$1);
            var G__9550 = null;
            var G__9551 = 0;
            var G__9552 = 0;
            seq__7528_9532 = G__9549;
            chunk__7529_9533 = G__9550;
            count__7530_9534 = G__9551;
            i__7531_9535 = G__9552;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.progress.apply(null, a__4901__auto__);
  };
  var progress = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return progress__delegate.call(this, args__4900__auto__);
  };
  progress.cljs$lang$maxFixedArity = 0;
  progress.cljs$lang$applyTo = function(arglist__9553) {
    var args__4900__auto__ = cljs.core.seq(arglist__9553);
    return progress__delegate(args__4900__auto__);
  };
  progress.cljs$core$IFn$_invoke$arity$variadic = progress__delegate;
  return progress;
}();
quiescent.dom.q = function() {
  var q__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7536_9554 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7537_9555 = null;
    var count__7538_9556 = 0;
    var i__7539_9557 = 0;
    while (true) {
      if (i__7539_9557 < count__7538_9556) {
        var arg__4902__auto___9558 = cljs.core._nth.call(null, chunk__7537_9555, i__7539_9557);
        a__4901__auto__.push(arg__4902__auto___9558);
        var G__9559 = seq__7536_9554;
        var G__9560 = chunk__7537_9555;
        var G__9561 = count__7538_9556;
        var G__9562 = i__7539_9557 + 1;
        seq__7536_9554 = G__9559;
        chunk__7537_9555 = G__9560;
        count__7538_9556 = G__9561;
        i__7539_9557 = G__9562;
        continue;
      } else {
        var temp__4126__auto___9563 = cljs.core.seq.call(null, seq__7536_9554);
        if (temp__4126__auto___9563) {
          var seq__7536_9564__$1 = temp__4126__auto___9563;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7536_9564__$1)) {
            var c__4229__auto___9565 = cljs.core.chunk_first.call(null, seq__7536_9564__$1);
            var G__9566 = cljs.core.chunk_rest.call(null, seq__7536_9564__$1);
            var G__9567 = c__4229__auto___9565;
            var G__9568 = cljs.core.count.call(null, c__4229__auto___9565);
            var G__9569 = 0;
            seq__7536_9554 = G__9566;
            chunk__7537_9555 = G__9567;
            count__7538_9556 = G__9568;
            i__7539_9557 = G__9569;
            continue;
          } else {
            var arg__4902__auto___9570 = cljs.core.first.call(null, seq__7536_9564__$1);
            a__4901__auto__.push(arg__4902__auto___9570);
            var G__9571 = cljs.core.next.call(null, seq__7536_9564__$1);
            var G__9572 = null;
            var G__9573 = 0;
            var G__9574 = 0;
            seq__7536_9554 = G__9571;
            chunk__7537_9555 = G__9572;
            count__7538_9556 = G__9573;
            i__7539_9557 = G__9574;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.q.apply(null, a__4901__auto__);
  };
  var q = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return q__delegate.call(this, args__4900__auto__);
  };
  q.cljs$lang$maxFixedArity = 0;
  q.cljs$lang$applyTo = function(arglist__9575) {
    var args__4900__auto__ = cljs.core.seq(arglist__9575);
    return q__delegate(args__4900__auto__);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
quiescent.dom.rp = function() {
  var rp__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7544_9576 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7545_9577 = null;
    var count__7546_9578 = 0;
    var i__7547_9579 = 0;
    while (true) {
      if (i__7547_9579 < count__7546_9578) {
        var arg__4902__auto___9580 = cljs.core._nth.call(null, chunk__7545_9577, i__7547_9579);
        a__4901__auto__.push(arg__4902__auto___9580);
        var G__9581 = seq__7544_9576;
        var G__9582 = chunk__7545_9577;
        var G__9583 = count__7546_9578;
        var G__9584 = i__7547_9579 + 1;
        seq__7544_9576 = G__9581;
        chunk__7545_9577 = G__9582;
        count__7546_9578 = G__9583;
        i__7547_9579 = G__9584;
        continue;
      } else {
        var temp__4126__auto___9585 = cljs.core.seq.call(null, seq__7544_9576);
        if (temp__4126__auto___9585) {
          var seq__7544_9586__$1 = temp__4126__auto___9585;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7544_9586__$1)) {
            var c__4229__auto___9587 = cljs.core.chunk_first.call(null, seq__7544_9586__$1);
            var G__9588 = cljs.core.chunk_rest.call(null, seq__7544_9586__$1);
            var G__9589 = c__4229__auto___9587;
            var G__9590 = cljs.core.count.call(null, c__4229__auto___9587);
            var G__9591 = 0;
            seq__7544_9576 = G__9588;
            chunk__7545_9577 = G__9589;
            count__7546_9578 = G__9590;
            i__7547_9579 = G__9591;
            continue;
          } else {
            var arg__4902__auto___9592 = cljs.core.first.call(null, seq__7544_9586__$1);
            a__4901__auto__.push(arg__4902__auto___9592);
            var G__9593 = cljs.core.next.call(null, seq__7544_9586__$1);
            var G__9594 = null;
            var G__9595 = 0;
            var G__9596 = 0;
            seq__7544_9576 = G__9593;
            chunk__7545_9577 = G__9594;
            count__7546_9578 = G__9595;
            i__7547_9579 = G__9596;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.rp.apply(null, a__4901__auto__);
  };
  var rp = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return rp__delegate.call(this, args__4900__auto__);
  };
  rp.cljs$lang$maxFixedArity = 0;
  rp.cljs$lang$applyTo = function(arglist__9597) {
    var args__4900__auto__ = cljs.core.seq(arglist__9597);
    return rp__delegate(args__4900__auto__);
  };
  rp.cljs$core$IFn$_invoke$arity$variadic = rp__delegate;
  return rp;
}();
quiescent.dom.rt = function() {
  var rt__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7552_9598 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7553_9599 = null;
    var count__7554_9600 = 0;
    var i__7555_9601 = 0;
    while (true) {
      if (i__7555_9601 < count__7554_9600) {
        var arg__4902__auto___9602 = cljs.core._nth.call(null, chunk__7553_9599, i__7555_9601);
        a__4901__auto__.push(arg__4902__auto___9602);
        var G__9603 = seq__7552_9598;
        var G__9604 = chunk__7553_9599;
        var G__9605 = count__7554_9600;
        var G__9606 = i__7555_9601 + 1;
        seq__7552_9598 = G__9603;
        chunk__7553_9599 = G__9604;
        count__7554_9600 = G__9605;
        i__7555_9601 = G__9606;
        continue;
      } else {
        var temp__4126__auto___9607 = cljs.core.seq.call(null, seq__7552_9598);
        if (temp__4126__auto___9607) {
          var seq__7552_9608__$1 = temp__4126__auto___9607;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7552_9608__$1)) {
            var c__4229__auto___9609 = cljs.core.chunk_first.call(null, seq__7552_9608__$1);
            var G__9610 = cljs.core.chunk_rest.call(null, seq__7552_9608__$1);
            var G__9611 = c__4229__auto___9609;
            var G__9612 = cljs.core.count.call(null, c__4229__auto___9609);
            var G__9613 = 0;
            seq__7552_9598 = G__9610;
            chunk__7553_9599 = G__9611;
            count__7554_9600 = G__9612;
            i__7555_9601 = G__9613;
            continue;
          } else {
            var arg__4902__auto___9614 = cljs.core.first.call(null, seq__7552_9608__$1);
            a__4901__auto__.push(arg__4902__auto___9614);
            var G__9615 = cljs.core.next.call(null, seq__7552_9608__$1);
            var G__9616 = null;
            var G__9617 = 0;
            var G__9618 = 0;
            seq__7552_9598 = G__9615;
            chunk__7553_9599 = G__9616;
            count__7554_9600 = G__9617;
            i__7555_9601 = G__9618;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.rt.apply(null, a__4901__auto__);
  };
  var rt = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return rt__delegate.call(this, args__4900__auto__);
  };
  rt.cljs$lang$maxFixedArity = 0;
  rt.cljs$lang$applyTo = function(arglist__9619) {
    var args__4900__auto__ = cljs.core.seq(arglist__9619);
    return rt__delegate(args__4900__auto__);
  };
  rt.cljs$core$IFn$_invoke$arity$variadic = rt__delegate;
  return rt;
}();
quiescent.dom.ruby = function() {
  var ruby__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7560_9620 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7561_9621 = null;
    var count__7562_9622 = 0;
    var i__7563_9623 = 0;
    while (true) {
      if (i__7563_9623 < count__7562_9622) {
        var arg__4902__auto___9624 = cljs.core._nth.call(null, chunk__7561_9621, i__7563_9623);
        a__4901__auto__.push(arg__4902__auto___9624);
        var G__9625 = seq__7560_9620;
        var G__9626 = chunk__7561_9621;
        var G__9627 = count__7562_9622;
        var G__9628 = i__7563_9623 + 1;
        seq__7560_9620 = G__9625;
        chunk__7561_9621 = G__9626;
        count__7562_9622 = G__9627;
        i__7563_9623 = G__9628;
        continue;
      } else {
        var temp__4126__auto___9629 = cljs.core.seq.call(null, seq__7560_9620);
        if (temp__4126__auto___9629) {
          var seq__7560_9630__$1 = temp__4126__auto___9629;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7560_9630__$1)) {
            var c__4229__auto___9631 = cljs.core.chunk_first.call(null, seq__7560_9630__$1);
            var G__9632 = cljs.core.chunk_rest.call(null, seq__7560_9630__$1);
            var G__9633 = c__4229__auto___9631;
            var G__9634 = cljs.core.count.call(null, c__4229__auto___9631);
            var G__9635 = 0;
            seq__7560_9620 = G__9632;
            chunk__7561_9621 = G__9633;
            count__7562_9622 = G__9634;
            i__7563_9623 = G__9635;
            continue;
          } else {
            var arg__4902__auto___9636 = cljs.core.first.call(null, seq__7560_9630__$1);
            a__4901__auto__.push(arg__4902__auto___9636);
            var G__9637 = cljs.core.next.call(null, seq__7560_9630__$1);
            var G__9638 = null;
            var G__9639 = 0;
            var G__9640 = 0;
            seq__7560_9620 = G__9637;
            chunk__7561_9621 = G__9638;
            count__7562_9622 = G__9639;
            i__7563_9623 = G__9640;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.ruby.apply(null, a__4901__auto__);
  };
  var ruby = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return ruby__delegate.call(this, args__4900__auto__);
  };
  ruby.cljs$lang$maxFixedArity = 0;
  ruby.cljs$lang$applyTo = function(arglist__9641) {
    var args__4900__auto__ = cljs.core.seq(arglist__9641);
    return ruby__delegate(args__4900__auto__);
  };
  ruby.cljs$core$IFn$_invoke$arity$variadic = ruby__delegate;
  return ruby;
}();
quiescent.dom.s = function() {
  var s__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7568_9642 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7569_9643 = null;
    var count__7570_9644 = 0;
    var i__7571_9645 = 0;
    while (true) {
      if (i__7571_9645 < count__7570_9644) {
        var arg__4902__auto___9646 = cljs.core._nth.call(null, chunk__7569_9643, i__7571_9645);
        a__4901__auto__.push(arg__4902__auto___9646);
        var G__9647 = seq__7568_9642;
        var G__9648 = chunk__7569_9643;
        var G__9649 = count__7570_9644;
        var G__9650 = i__7571_9645 + 1;
        seq__7568_9642 = G__9647;
        chunk__7569_9643 = G__9648;
        count__7570_9644 = G__9649;
        i__7571_9645 = G__9650;
        continue;
      } else {
        var temp__4126__auto___9651 = cljs.core.seq.call(null, seq__7568_9642);
        if (temp__4126__auto___9651) {
          var seq__7568_9652__$1 = temp__4126__auto___9651;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7568_9652__$1)) {
            var c__4229__auto___9653 = cljs.core.chunk_first.call(null, seq__7568_9652__$1);
            var G__9654 = cljs.core.chunk_rest.call(null, seq__7568_9652__$1);
            var G__9655 = c__4229__auto___9653;
            var G__9656 = cljs.core.count.call(null, c__4229__auto___9653);
            var G__9657 = 0;
            seq__7568_9642 = G__9654;
            chunk__7569_9643 = G__9655;
            count__7570_9644 = G__9656;
            i__7571_9645 = G__9657;
            continue;
          } else {
            var arg__4902__auto___9658 = cljs.core.first.call(null, seq__7568_9652__$1);
            a__4901__auto__.push(arg__4902__auto___9658);
            var G__9659 = cljs.core.next.call(null, seq__7568_9652__$1);
            var G__9660 = null;
            var G__9661 = 0;
            var G__9662 = 0;
            seq__7568_9642 = G__9659;
            chunk__7569_9643 = G__9660;
            count__7570_9644 = G__9661;
            i__7571_9645 = G__9662;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.s.apply(null, a__4901__auto__);
  };
  var s = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return s__delegate.call(this, args__4900__auto__);
  };
  s.cljs$lang$maxFixedArity = 0;
  s.cljs$lang$applyTo = function(arglist__9663) {
    var args__4900__auto__ = cljs.core.seq(arglist__9663);
    return s__delegate(args__4900__auto__);
  };
  s.cljs$core$IFn$_invoke$arity$variadic = s__delegate;
  return s;
}();
quiescent.dom.samp = function() {
  var samp__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7576_9664 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7577_9665 = null;
    var count__7578_9666 = 0;
    var i__7579_9667 = 0;
    while (true) {
      if (i__7579_9667 < count__7578_9666) {
        var arg__4902__auto___9668 = cljs.core._nth.call(null, chunk__7577_9665, i__7579_9667);
        a__4901__auto__.push(arg__4902__auto___9668);
        var G__9669 = seq__7576_9664;
        var G__9670 = chunk__7577_9665;
        var G__9671 = count__7578_9666;
        var G__9672 = i__7579_9667 + 1;
        seq__7576_9664 = G__9669;
        chunk__7577_9665 = G__9670;
        count__7578_9666 = G__9671;
        i__7579_9667 = G__9672;
        continue;
      } else {
        var temp__4126__auto___9673 = cljs.core.seq.call(null, seq__7576_9664);
        if (temp__4126__auto___9673) {
          var seq__7576_9674__$1 = temp__4126__auto___9673;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7576_9674__$1)) {
            var c__4229__auto___9675 = cljs.core.chunk_first.call(null, seq__7576_9674__$1);
            var G__9676 = cljs.core.chunk_rest.call(null, seq__7576_9674__$1);
            var G__9677 = c__4229__auto___9675;
            var G__9678 = cljs.core.count.call(null, c__4229__auto___9675);
            var G__9679 = 0;
            seq__7576_9664 = G__9676;
            chunk__7577_9665 = G__9677;
            count__7578_9666 = G__9678;
            i__7579_9667 = G__9679;
            continue;
          } else {
            var arg__4902__auto___9680 = cljs.core.first.call(null, seq__7576_9674__$1);
            a__4901__auto__.push(arg__4902__auto___9680);
            var G__9681 = cljs.core.next.call(null, seq__7576_9674__$1);
            var G__9682 = null;
            var G__9683 = 0;
            var G__9684 = 0;
            seq__7576_9664 = G__9681;
            chunk__7577_9665 = G__9682;
            count__7578_9666 = G__9683;
            i__7579_9667 = G__9684;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.samp.apply(null, a__4901__auto__);
  };
  var samp = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return samp__delegate.call(this, args__4900__auto__);
  };
  samp.cljs$lang$maxFixedArity = 0;
  samp.cljs$lang$applyTo = function(arglist__9685) {
    var args__4900__auto__ = cljs.core.seq(arglist__9685);
    return samp__delegate(args__4900__auto__);
  };
  samp.cljs$core$IFn$_invoke$arity$variadic = samp__delegate;
  return samp;
}();
quiescent.dom.script = function() {
  var script__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7584_9686 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7585_9687 = null;
    var count__7586_9688 = 0;
    var i__7587_9689 = 0;
    while (true) {
      if (i__7587_9689 < count__7586_9688) {
        var arg__4902__auto___9690 = cljs.core._nth.call(null, chunk__7585_9687, i__7587_9689);
        a__4901__auto__.push(arg__4902__auto___9690);
        var G__9691 = seq__7584_9686;
        var G__9692 = chunk__7585_9687;
        var G__9693 = count__7586_9688;
        var G__9694 = i__7587_9689 + 1;
        seq__7584_9686 = G__9691;
        chunk__7585_9687 = G__9692;
        count__7586_9688 = G__9693;
        i__7587_9689 = G__9694;
        continue;
      } else {
        var temp__4126__auto___9695 = cljs.core.seq.call(null, seq__7584_9686);
        if (temp__4126__auto___9695) {
          var seq__7584_9696__$1 = temp__4126__auto___9695;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7584_9696__$1)) {
            var c__4229__auto___9697 = cljs.core.chunk_first.call(null, seq__7584_9696__$1);
            var G__9698 = cljs.core.chunk_rest.call(null, seq__7584_9696__$1);
            var G__9699 = c__4229__auto___9697;
            var G__9700 = cljs.core.count.call(null, c__4229__auto___9697);
            var G__9701 = 0;
            seq__7584_9686 = G__9698;
            chunk__7585_9687 = G__9699;
            count__7586_9688 = G__9700;
            i__7587_9689 = G__9701;
            continue;
          } else {
            var arg__4902__auto___9702 = cljs.core.first.call(null, seq__7584_9696__$1);
            a__4901__auto__.push(arg__4902__auto___9702);
            var G__9703 = cljs.core.next.call(null, seq__7584_9696__$1);
            var G__9704 = null;
            var G__9705 = 0;
            var G__9706 = 0;
            seq__7584_9686 = G__9703;
            chunk__7585_9687 = G__9704;
            count__7586_9688 = G__9705;
            i__7587_9689 = G__9706;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.script.apply(null, a__4901__auto__);
  };
  var script = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return script__delegate.call(this, args__4900__auto__);
  };
  script.cljs$lang$maxFixedArity = 0;
  script.cljs$lang$applyTo = function(arglist__9707) {
    var args__4900__auto__ = cljs.core.seq(arglist__9707);
    return script__delegate(args__4900__auto__);
  };
  script.cljs$core$IFn$_invoke$arity$variadic = script__delegate;
  return script;
}();
quiescent.dom.section = function() {
  var section__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7592_9708 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7593_9709 = null;
    var count__7594_9710 = 0;
    var i__7595_9711 = 0;
    while (true) {
      if (i__7595_9711 < count__7594_9710) {
        var arg__4902__auto___9712 = cljs.core._nth.call(null, chunk__7593_9709, i__7595_9711);
        a__4901__auto__.push(arg__4902__auto___9712);
        var G__9713 = seq__7592_9708;
        var G__9714 = chunk__7593_9709;
        var G__9715 = count__7594_9710;
        var G__9716 = i__7595_9711 + 1;
        seq__7592_9708 = G__9713;
        chunk__7593_9709 = G__9714;
        count__7594_9710 = G__9715;
        i__7595_9711 = G__9716;
        continue;
      } else {
        var temp__4126__auto___9717 = cljs.core.seq.call(null, seq__7592_9708);
        if (temp__4126__auto___9717) {
          var seq__7592_9718__$1 = temp__4126__auto___9717;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7592_9718__$1)) {
            var c__4229__auto___9719 = cljs.core.chunk_first.call(null, seq__7592_9718__$1);
            var G__9720 = cljs.core.chunk_rest.call(null, seq__7592_9718__$1);
            var G__9721 = c__4229__auto___9719;
            var G__9722 = cljs.core.count.call(null, c__4229__auto___9719);
            var G__9723 = 0;
            seq__7592_9708 = G__9720;
            chunk__7593_9709 = G__9721;
            count__7594_9710 = G__9722;
            i__7595_9711 = G__9723;
            continue;
          } else {
            var arg__4902__auto___9724 = cljs.core.first.call(null, seq__7592_9718__$1);
            a__4901__auto__.push(arg__4902__auto___9724);
            var G__9725 = cljs.core.next.call(null, seq__7592_9718__$1);
            var G__9726 = null;
            var G__9727 = 0;
            var G__9728 = 0;
            seq__7592_9708 = G__9725;
            chunk__7593_9709 = G__9726;
            count__7594_9710 = G__9727;
            i__7595_9711 = G__9728;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.section.apply(null, a__4901__auto__);
  };
  var section = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return section__delegate.call(this, args__4900__auto__);
  };
  section.cljs$lang$maxFixedArity = 0;
  section.cljs$lang$applyTo = function(arglist__9729) {
    var args__4900__auto__ = cljs.core.seq(arglist__9729);
    return section__delegate(args__4900__auto__);
  };
  section.cljs$core$IFn$_invoke$arity$variadic = section__delegate;
  return section;
}();
quiescent.dom.select = function() {
  var select__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7600_9730 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7601_9731 = null;
    var count__7602_9732 = 0;
    var i__7603_9733 = 0;
    while (true) {
      if (i__7603_9733 < count__7602_9732) {
        var arg__4902__auto___9734 = cljs.core._nth.call(null, chunk__7601_9731, i__7603_9733);
        a__4901__auto__.push(arg__4902__auto___9734);
        var G__9735 = seq__7600_9730;
        var G__9736 = chunk__7601_9731;
        var G__9737 = count__7602_9732;
        var G__9738 = i__7603_9733 + 1;
        seq__7600_9730 = G__9735;
        chunk__7601_9731 = G__9736;
        count__7602_9732 = G__9737;
        i__7603_9733 = G__9738;
        continue;
      } else {
        var temp__4126__auto___9739 = cljs.core.seq.call(null, seq__7600_9730);
        if (temp__4126__auto___9739) {
          var seq__7600_9740__$1 = temp__4126__auto___9739;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7600_9740__$1)) {
            var c__4229__auto___9741 = cljs.core.chunk_first.call(null, seq__7600_9740__$1);
            var G__9742 = cljs.core.chunk_rest.call(null, seq__7600_9740__$1);
            var G__9743 = c__4229__auto___9741;
            var G__9744 = cljs.core.count.call(null, c__4229__auto___9741);
            var G__9745 = 0;
            seq__7600_9730 = G__9742;
            chunk__7601_9731 = G__9743;
            count__7602_9732 = G__9744;
            i__7603_9733 = G__9745;
            continue;
          } else {
            var arg__4902__auto___9746 = cljs.core.first.call(null, seq__7600_9740__$1);
            a__4901__auto__.push(arg__4902__auto___9746);
            var G__9747 = cljs.core.next.call(null, seq__7600_9740__$1);
            var G__9748 = null;
            var G__9749 = 0;
            var G__9750 = 0;
            seq__7600_9730 = G__9747;
            chunk__7601_9731 = G__9748;
            count__7602_9732 = G__9749;
            i__7603_9733 = G__9750;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.select.apply(null, a__4901__auto__);
  };
  var select = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return select__delegate.call(this, args__4900__auto__);
  };
  select.cljs$lang$maxFixedArity = 0;
  select.cljs$lang$applyTo = function(arglist__9751) {
    var args__4900__auto__ = cljs.core.seq(arglist__9751);
    return select__delegate(args__4900__auto__);
  };
  select.cljs$core$IFn$_invoke$arity$variadic = select__delegate;
  return select;
}();
quiescent.dom.small = function() {
  var small__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7608_9752 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7609_9753 = null;
    var count__7610_9754 = 0;
    var i__7611_9755 = 0;
    while (true) {
      if (i__7611_9755 < count__7610_9754) {
        var arg__4902__auto___9756 = cljs.core._nth.call(null, chunk__7609_9753, i__7611_9755);
        a__4901__auto__.push(arg__4902__auto___9756);
        var G__9757 = seq__7608_9752;
        var G__9758 = chunk__7609_9753;
        var G__9759 = count__7610_9754;
        var G__9760 = i__7611_9755 + 1;
        seq__7608_9752 = G__9757;
        chunk__7609_9753 = G__9758;
        count__7610_9754 = G__9759;
        i__7611_9755 = G__9760;
        continue;
      } else {
        var temp__4126__auto___9761 = cljs.core.seq.call(null, seq__7608_9752);
        if (temp__4126__auto___9761) {
          var seq__7608_9762__$1 = temp__4126__auto___9761;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7608_9762__$1)) {
            var c__4229__auto___9763 = cljs.core.chunk_first.call(null, seq__7608_9762__$1);
            var G__9764 = cljs.core.chunk_rest.call(null, seq__7608_9762__$1);
            var G__9765 = c__4229__auto___9763;
            var G__9766 = cljs.core.count.call(null, c__4229__auto___9763);
            var G__9767 = 0;
            seq__7608_9752 = G__9764;
            chunk__7609_9753 = G__9765;
            count__7610_9754 = G__9766;
            i__7611_9755 = G__9767;
            continue;
          } else {
            var arg__4902__auto___9768 = cljs.core.first.call(null, seq__7608_9762__$1);
            a__4901__auto__.push(arg__4902__auto___9768);
            var G__9769 = cljs.core.next.call(null, seq__7608_9762__$1);
            var G__9770 = null;
            var G__9771 = 0;
            var G__9772 = 0;
            seq__7608_9752 = G__9769;
            chunk__7609_9753 = G__9770;
            count__7610_9754 = G__9771;
            i__7611_9755 = G__9772;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.small.apply(null, a__4901__auto__);
  };
  var small = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return small__delegate.call(this, args__4900__auto__);
  };
  small.cljs$lang$maxFixedArity = 0;
  small.cljs$lang$applyTo = function(arglist__9773) {
    var args__4900__auto__ = cljs.core.seq(arglist__9773);
    return small__delegate(args__4900__auto__);
  };
  small.cljs$core$IFn$_invoke$arity$variadic = small__delegate;
  return small;
}();
quiescent.dom.source = function() {
  var source__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7616_9774 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7617_9775 = null;
    var count__7618_9776 = 0;
    var i__7619_9777 = 0;
    while (true) {
      if (i__7619_9777 < count__7618_9776) {
        var arg__4902__auto___9778 = cljs.core._nth.call(null, chunk__7617_9775, i__7619_9777);
        a__4901__auto__.push(arg__4902__auto___9778);
        var G__9779 = seq__7616_9774;
        var G__9780 = chunk__7617_9775;
        var G__9781 = count__7618_9776;
        var G__9782 = i__7619_9777 + 1;
        seq__7616_9774 = G__9779;
        chunk__7617_9775 = G__9780;
        count__7618_9776 = G__9781;
        i__7619_9777 = G__9782;
        continue;
      } else {
        var temp__4126__auto___9783 = cljs.core.seq.call(null, seq__7616_9774);
        if (temp__4126__auto___9783) {
          var seq__7616_9784__$1 = temp__4126__auto___9783;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7616_9784__$1)) {
            var c__4229__auto___9785 = cljs.core.chunk_first.call(null, seq__7616_9784__$1);
            var G__9786 = cljs.core.chunk_rest.call(null, seq__7616_9784__$1);
            var G__9787 = c__4229__auto___9785;
            var G__9788 = cljs.core.count.call(null, c__4229__auto___9785);
            var G__9789 = 0;
            seq__7616_9774 = G__9786;
            chunk__7617_9775 = G__9787;
            count__7618_9776 = G__9788;
            i__7619_9777 = G__9789;
            continue;
          } else {
            var arg__4902__auto___9790 = cljs.core.first.call(null, seq__7616_9784__$1);
            a__4901__auto__.push(arg__4902__auto___9790);
            var G__9791 = cljs.core.next.call(null, seq__7616_9784__$1);
            var G__9792 = null;
            var G__9793 = 0;
            var G__9794 = 0;
            seq__7616_9774 = G__9791;
            chunk__7617_9775 = G__9792;
            count__7618_9776 = G__9793;
            i__7619_9777 = G__9794;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.source.apply(null, a__4901__auto__);
  };
  var source = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return source__delegate.call(this, args__4900__auto__);
  };
  source.cljs$lang$maxFixedArity = 0;
  source.cljs$lang$applyTo = function(arglist__9795) {
    var args__4900__auto__ = cljs.core.seq(arglist__9795);
    return source__delegate(args__4900__auto__);
  };
  source.cljs$core$IFn$_invoke$arity$variadic = source__delegate;
  return source;
}();
quiescent.dom.span = function() {
  var span__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7624_9796 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7625_9797 = null;
    var count__7626_9798 = 0;
    var i__7627_9799 = 0;
    while (true) {
      if (i__7627_9799 < count__7626_9798) {
        var arg__4902__auto___9800 = cljs.core._nth.call(null, chunk__7625_9797, i__7627_9799);
        a__4901__auto__.push(arg__4902__auto___9800);
        var G__9801 = seq__7624_9796;
        var G__9802 = chunk__7625_9797;
        var G__9803 = count__7626_9798;
        var G__9804 = i__7627_9799 + 1;
        seq__7624_9796 = G__9801;
        chunk__7625_9797 = G__9802;
        count__7626_9798 = G__9803;
        i__7627_9799 = G__9804;
        continue;
      } else {
        var temp__4126__auto___9805 = cljs.core.seq.call(null, seq__7624_9796);
        if (temp__4126__auto___9805) {
          var seq__7624_9806__$1 = temp__4126__auto___9805;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7624_9806__$1)) {
            var c__4229__auto___9807 = cljs.core.chunk_first.call(null, seq__7624_9806__$1);
            var G__9808 = cljs.core.chunk_rest.call(null, seq__7624_9806__$1);
            var G__9809 = c__4229__auto___9807;
            var G__9810 = cljs.core.count.call(null, c__4229__auto___9807);
            var G__9811 = 0;
            seq__7624_9796 = G__9808;
            chunk__7625_9797 = G__9809;
            count__7626_9798 = G__9810;
            i__7627_9799 = G__9811;
            continue;
          } else {
            var arg__4902__auto___9812 = cljs.core.first.call(null, seq__7624_9806__$1);
            a__4901__auto__.push(arg__4902__auto___9812);
            var G__9813 = cljs.core.next.call(null, seq__7624_9806__$1);
            var G__9814 = null;
            var G__9815 = 0;
            var G__9816 = 0;
            seq__7624_9796 = G__9813;
            chunk__7625_9797 = G__9814;
            count__7626_9798 = G__9815;
            i__7627_9799 = G__9816;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.span.apply(null, a__4901__auto__);
  };
  var span = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return span__delegate.call(this, args__4900__auto__);
  };
  span.cljs$lang$maxFixedArity = 0;
  span.cljs$lang$applyTo = function(arglist__9817) {
    var args__4900__auto__ = cljs.core.seq(arglist__9817);
    return span__delegate(args__4900__auto__);
  };
  span.cljs$core$IFn$_invoke$arity$variadic = span__delegate;
  return span;
}();
quiescent.dom.strong = function() {
  var strong__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7632_9818 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7633_9819 = null;
    var count__7634_9820 = 0;
    var i__7635_9821 = 0;
    while (true) {
      if (i__7635_9821 < count__7634_9820) {
        var arg__4902__auto___9822 = cljs.core._nth.call(null, chunk__7633_9819, i__7635_9821);
        a__4901__auto__.push(arg__4902__auto___9822);
        var G__9823 = seq__7632_9818;
        var G__9824 = chunk__7633_9819;
        var G__9825 = count__7634_9820;
        var G__9826 = i__7635_9821 + 1;
        seq__7632_9818 = G__9823;
        chunk__7633_9819 = G__9824;
        count__7634_9820 = G__9825;
        i__7635_9821 = G__9826;
        continue;
      } else {
        var temp__4126__auto___9827 = cljs.core.seq.call(null, seq__7632_9818);
        if (temp__4126__auto___9827) {
          var seq__7632_9828__$1 = temp__4126__auto___9827;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7632_9828__$1)) {
            var c__4229__auto___9829 = cljs.core.chunk_first.call(null, seq__7632_9828__$1);
            var G__9830 = cljs.core.chunk_rest.call(null, seq__7632_9828__$1);
            var G__9831 = c__4229__auto___9829;
            var G__9832 = cljs.core.count.call(null, c__4229__auto___9829);
            var G__9833 = 0;
            seq__7632_9818 = G__9830;
            chunk__7633_9819 = G__9831;
            count__7634_9820 = G__9832;
            i__7635_9821 = G__9833;
            continue;
          } else {
            var arg__4902__auto___9834 = cljs.core.first.call(null, seq__7632_9828__$1);
            a__4901__auto__.push(arg__4902__auto___9834);
            var G__9835 = cljs.core.next.call(null, seq__7632_9828__$1);
            var G__9836 = null;
            var G__9837 = 0;
            var G__9838 = 0;
            seq__7632_9818 = G__9835;
            chunk__7633_9819 = G__9836;
            count__7634_9820 = G__9837;
            i__7635_9821 = G__9838;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.strong.apply(null, a__4901__auto__);
  };
  var strong = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return strong__delegate.call(this, args__4900__auto__);
  };
  strong.cljs$lang$maxFixedArity = 0;
  strong.cljs$lang$applyTo = function(arglist__9839) {
    var args__4900__auto__ = cljs.core.seq(arglist__9839);
    return strong__delegate(args__4900__auto__);
  };
  strong.cljs$core$IFn$_invoke$arity$variadic = strong__delegate;
  return strong;
}();
quiescent.dom.style = function() {
  var style__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7640_9840 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7641_9841 = null;
    var count__7642_9842 = 0;
    var i__7643_9843 = 0;
    while (true) {
      if (i__7643_9843 < count__7642_9842) {
        var arg__4902__auto___9844 = cljs.core._nth.call(null, chunk__7641_9841, i__7643_9843);
        a__4901__auto__.push(arg__4902__auto___9844);
        var G__9845 = seq__7640_9840;
        var G__9846 = chunk__7641_9841;
        var G__9847 = count__7642_9842;
        var G__9848 = i__7643_9843 + 1;
        seq__7640_9840 = G__9845;
        chunk__7641_9841 = G__9846;
        count__7642_9842 = G__9847;
        i__7643_9843 = G__9848;
        continue;
      } else {
        var temp__4126__auto___9849 = cljs.core.seq.call(null, seq__7640_9840);
        if (temp__4126__auto___9849) {
          var seq__7640_9850__$1 = temp__4126__auto___9849;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7640_9850__$1)) {
            var c__4229__auto___9851 = cljs.core.chunk_first.call(null, seq__7640_9850__$1);
            var G__9852 = cljs.core.chunk_rest.call(null, seq__7640_9850__$1);
            var G__9853 = c__4229__auto___9851;
            var G__9854 = cljs.core.count.call(null, c__4229__auto___9851);
            var G__9855 = 0;
            seq__7640_9840 = G__9852;
            chunk__7641_9841 = G__9853;
            count__7642_9842 = G__9854;
            i__7643_9843 = G__9855;
            continue;
          } else {
            var arg__4902__auto___9856 = cljs.core.first.call(null, seq__7640_9850__$1);
            a__4901__auto__.push(arg__4902__auto___9856);
            var G__9857 = cljs.core.next.call(null, seq__7640_9850__$1);
            var G__9858 = null;
            var G__9859 = 0;
            var G__9860 = 0;
            seq__7640_9840 = G__9857;
            chunk__7641_9841 = G__9858;
            count__7642_9842 = G__9859;
            i__7643_9843 = G__9860;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.style.apply(null, a__4901__auto__);
  };
  var style = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return style__delegate.call(this, args__4900__auto__);
  };
  style.cljs$lang$maxFixedArity = 0;
  style.cljs$lang$applyTo = function(arglist__9861) {
    var args__4900__auto__ = cljs.core.seq(arglist__9861);
    return style__delegate(args__4900__auto__);
  };
  style.cljs$core$IFn$_invoke$arity$variadic = style__delegate;
  return style;
}();
quiescent.dom.sub = function() {
  var sub__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7648_9862 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7649_9863 = null;
    var count__7650_9864 = 0;
    var i__7651_9865 = 0;
    while (true) {
      if (i__7651_9865 < count__7650_9864) {
        var arg__4902__auto___9866 = cljs.core._nth.call(null, chunk__7649_9863, i__7651_9865);
        a__4901__auto__.push(arg__4902__auto___9866);
        var G__9867 = seq__7648_9862;
        var G__9868 = chunk__7649_9863;
        var G__9869 = count__7650_9864;
        var G__9870 = i__7651_9865 + 1;
        seq__7648_9862 = G__9867;
        chunk__7649_9863 = G__9868;
        count__7650_9864 = G__9869;
        i__7651_9865 = G__9870;
        continue;
      } else {
        var temp__4126__auto___9871 = cljs.core.seq.call(null, seq__7648_9862);
        if (temp__4126__auto___9871) {
          var seq__7648_9872__$1 = temp__4126__auto___9871;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7648_9872__$1)) {
            var c__4229__auto___9873 = cljs.core.chunk_first.call(null, seq__7648_9872__$1);
            var G__9874 = cljs.core.chunk_rest.call(null, seq__7648_9872__$1);
            var G__9875 = c__4229__auto___9873;
            var G__9876 = cljs.core.count.call(null, c__4229__auto___9873);
            var G__9877 = 0;
            seq__7648_9862 = G__9874;
            chunk__7649_9863 = G__9875;
            count__7650_9864 = G__9876;
            i__7651_9865 = G__9877;
            continue;
          } else {
            var arg__4902__auto___9878 = cljs.core.first.call(null, seq__7648_9872__$1);
            a__4901__auto__.push(arg__4902__auto___9878);
            var G__9879 = cljs.core.next.call(null, seq__7648_9872__$1);
            var G__9880 = null;
            var G__9881 = 0;
            var G__9882 = 0;
            seq__7648_9862 = G__9879;
            chunk__7649_9863 = G__9880;
            count__7650_9864 = G__9881;
            i__7651_9865 = G__9882;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.sub.apply(null, a__4901__auto__);
  };
  var sub = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sub__delegate.call(this, args__4900__auto__);
  };
  sub.cljs$lang$maxFixedArity = 0;
  sub.cljs$lang$applyTo = function(arglist__9883) {
    var args__4900__auto__ = cljs.core.seq(arglist__9883);
    return sub__delegate(args__4900__auto__);
  };
  sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
  return sub;
}();
quiescent.dom.summary = function() {
  var summary__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7656_9884 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7657_9885 = null;
    var count__7658_9886 = 0;
    var i__7659_9887 = 0;
    while (true) {
      if (i__7659_9887 < count__7658_9886) {
        var arg__4902__auto___9888 = cljs.core._nth.call(null, chunk__7657_9885, i__7659_9887);
        a__4901__auto__.push(arg__4902__auto___9888);
        var G__9889 = seq__7656_9884;
        var G__9890 = chunk__7657_9885;
        var G__9891 = count__7658_9886;
        var G__9892 = i__7659_9887 + 1;
        seq__7656_9884 = G__9889;
        chunk__7657_9885 = G__9890;
        count__7658_9886 = G__9891;
        i__7659_9887 = G__9892;
        continue;
      } else {
        var temp__4126__auto___9893 = cljs.core.seq.call(null, seq__7656_9884);
        if (temp__4126__auto___9893) {
          var seq__7656_9894__$1 = temp__4126__auto___9893;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7656_9894__$1)) {
            var c__4229__auto___9895 = cljs.core.chunk_first.call(null, seq__7656_9894__$1);
            var G__9896 = cljs.core.chunk_rest.call(null, seq__7656_9894__$1);
            var G__9897 = c__4229__auto___9895;
            var G__9898 = cljs.core.count.call(null, c__4229__auto___9895);
            var G__9899 = 0;
            seq__7656_9884 = G__9896;
            chunk__7657_9885 = G__9897;
            count__7658_9886 = G__9898;
            i__7659_9887 = G__9899;
            continue;
          } else {
            var arg__4902__auto___9900 = cljs.core.first.call(null, seq__7656_9894__$1);
            a__4901__auto__.push(arg__4902__auto___9900);
            var G__9901 = cljs.core.next.call(null, seq__7656_9894__$1);
            var G__9902 = null;
            var G__9903 = 0;
            var G__9904 = 0;
            seq__7656_9884 = G__9901;
            chunk__7657_9885 = G__9902;
            count__7658_9886 = G__9903;
            i__7659_9887 = G__9904;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.summary.apply(null, a__4901__auto__);
  };
  var summary = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return summary__delegate.call(this, args__4900__auto__);
  };
  summary.cljs$lang$maxFixedArity = 0;
  summary.cljs$lang$applyTo = function(arglist__9905) {
    var args__4900__auto__ = cljs.core.seq(arglist__9905);
    return summary__delegate(args__4900__auto__);
  };
  summary.cljs$core$IFn$_invoke$arity$variadic = summary__delegate;
  return summary;
}();
quiescent.dom.sup = function() {
  var sup__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7664_9906 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7665_9907 = null;
    var count__7666_9908 = 0;
    var i__7667_9909 = 0;
    while (true) {
      if (i__7667_9909 < count__7666_9908) {
        var arg__4902__auto___9910 = cljs.core._nth.call(null, chunk__7665_9907, i__7667_9909);
        a__4901__auto__.push(arg__4902__auto___9910);
        var G__9911 = seq__7664_9906;
        var G__9912 = chunk__7665_9907;
        var G__9913 = count__7666_9908;
        var G__9914 = i__7667_9909 + 1;
        seq__7664_9906 = G__9911;
        chunk__7665_9907 = G__9912;
        count__7666_9908 = G__9913;
        i__7667_9909 = G__9914;
        continue;
      } else {
        var temp__4126__auto___9915 = cljs.core.seq.call(null, seq__7664_9906);
        if (temp__4126__auto___9915) {
          var seq__7664_9916__$1 = temp__4126__auto___9915;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7664_9916__$1)) {
            var c__4229__auto___9917 = cljs.core.chunk_first.call(null, seq__7664_9916__$1);
            var G__9918 = cljs.core.chunk_rest.call(null, seq__7664_9916__$1);
            var G__9919 = c__4229__auto___9917;
            var G__9920 = cljs.core.count.call(null, c__4229__auto___9917);
            var G__9921 = 0;
            seq__7664_9906 = G__9918;
            chunk__7665_9907 = G__9919;
            count__7666_9908 = G__9920;
            i__7667_9909 = G__9921;
            continue;
          } else {
            var arg__4902__auto___9922 = cljs.core.first.call(null, seq__7664_9916__$1);
            a__4901__auto__.push(arg__4902__auto___9922);
            var G__9923 = cljs.core.next.call(null, seq__7664_9916__$1);
            var G__9924 = null;
            var G__9925 = 0;
            var G__9926 = 0;
            seq__7664_9906 = G__9923;
            chunk__7665_9907 = G__9924;
            count__7666_9908 = G__9925;
            i__7667_9909 = G__9926;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.sup.apply(null, a__4901__auto__);
  };
  var sup = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sup__delegate.call(this, args__4900__auto__);
  };
  sup.cljs$lang$maxFixedArity = 0;
  sup.cljs$lang$applyTo = function(arglist__9927) {
    var args__4900__auto__ = cljs.core.seq(arglist__9927);
    return sup__delegate(args__4900__auto__);
  };
  sup.cljs$core$IFn$_invoke$arity$variadic = sup__delegate;
  return sup;
}();
quiescent.dom.table = function() {
  var table__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7672_9928 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7673_9929 = null;
    var count__7674_9930 = 0;
    var i__7675_9931 = 0;
    while (true) {
      if (i__7675_9931 < count__7674_9930) {
        var arg__4902__auto___9932 = cljs.core._nth.call(null, chunk__7673_9929, i__7675_9931);
        a__4901__auto__.push(arg__4902__auto___9932);
        var G__9933 = seq__7672_9928;
        var G__9934 = chunk__7673_9929;
        var G__9935 = count__7674_9930;
        var G__9936 = i__7675_9931 + 1;
        seq__7672_9928 = G__9933;
        chunk__7673_9929 = G__9934;
        count__7674_9930 = G__9935;
        i__7675_9931 = G__9936;
        continue;
      } else {
        var temp__4126__auto___9937 = cljs.core.seq.call(null, seq__7672_9928);
        if (temp__4126__auto___9937) {
          var seq__7672_9938__$1 = temp__4126__auto___9937;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7672_9938__$1)) {
            var c__4229__auto___9939 = cljs.core.chunk_first.call(null, seq__7672_9938__$1);
            var G__9940 = cljs.core.chunk_rest.call(null, seq__7672_9938__$1);
            var G__9941 = c__4229__auto___9939;
            var G__9942 = cljs.core.count.call(null, c__4229__auto___9939);
            var G__9943 = 0;
            seq__7672_9928 = G__9940;
            chunk__7673_9929 = G__9941;
            count__7674_9930 = G__9942;
            i__7675_9931 = G__9943;
            continue;
          } else {
            var arg__4902__auto___9944 = cljs.core.first.call(null, seq__7672_9938__$1);
            a__4901__auto__.push(arg__4902__auto___9944);
            var G__9945 = cljs.core.next.call(null, seq__7672_9938__$1);
            var G__9946 = null;
            var G__9947 = 0;
            var G__9948 = 0;
            seq__7672_9928 = G__9945;
            chunk__7673_9929 = G__9946;
            count__7674_9930 = G__9947;
            i__7675_9931 = G__9948;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.table.apply(null, a__4901__auto__);
  };
  var table = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return table__delegate.call(this, args__4900__auto__);
  };
  table.cljs$lang$maxFixedArity = 0;
  table.cljs$lang$applyTo = function(arglist__9949) {
    var args__4900__auto__ = cljs.core.seq(arglist__9949);
    return table__delegate(args__4900__auto__);
  };
  table.cljs$core$IFn$_invoke$arity$variadic = table__delegate;
  return table;
}();
quiescent.dom.tbody = function() {
  var tbody__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7680_9950 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7681_9951 = null;
    var count__7682_9952 = 0;
    var i__7683_9953 = 0;
    while (true) {
      if (i__7683_9953 < count__7682_9952) {
        var arg__4902__auto___9954 = cljs.core._nth.call(null, chunk__7681_9951, i__7683_9953);
        a__4901__auto__.push(arg__4902__auto___9954);
        var G__9955 = seq__7680_9950;
        var G__9956 = chunk__7681_9951;
        var G__9957 = count__7682_9952;
        var G__9958 = i__7683_9953 + 1;
        seq__7680_9950 = G__9955;
        chunk__7681_9951 = G__9956;
        count__7682_9952 = G__9957;
        i__7683_9953 = G__9958;
        continue;
      } else {
        var temp__4126__auto___9959 = cljs.core.seq.call(null, seq__7680_9950);
        if (temp__4126__auto___9959) {
          var seq__7680_9960__$1 = temp__4126__auto___9959;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7680_9960__$1)) {
            var c__4229__auto___9961 = cljs.core.chunk_first.call(null, seq__7680_9960__$1);
            var G__9962 = cljs.core.chunk_rest.call(null, seq__7680_9960__$1);
            var G__9963 = c__4229__auto___9961;
            var G__9964 = cljs.core.count.call(null, c__4229__auto___9961);
            var G__9965 = 0;
            seq__7680_9950 = G__9962;
            chunk__7681_9951 = G__9963;
            count__7682_9952 = G__9964;
            i__7683_9953 = G__9965;
            continue;
          } else {
            var arg__4902__auto___9966 = cljs.core.first.call(null, seq__7680_9960__$1);
            a__4901__auto__.push(arg__4902__auto___9966);
            var G__9967 = cljs.core.next.call(null, seq__7680_9960__$1);
            var G__9968 = null;
            var G__9969 = 0;
            var G__9970 = 0;
            seq__7680_9950 = G__9967;
            chunk__7681_9951 = G__9968;
            count__7682_9952 = G__9969;
            i__7683_9953 = G__9970;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.tbody.apply(null, a__4901__auto__);
  };
  var tbody = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return tbody__delegate.call(this, args__4900__auto__);
  };
  tbody.cljs$lang$maxFixedArity = 0;
  tbody.cljs$lang$applyTo = function(arglist__9971) {
    var args__4900__auto__ = cljs.core.seq(arglist__9971);
    return tbody__delegate(args__4900__auto__);
  };
  tbody.cljs$core$IFn$_invoke$arity$variadic = tbody__delegate;
  return tbody;
}();
quiescent.dom.td = function() {
  var td__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7688_9972 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7689_9973 = null;
    var count__7690_9974 = 0;
    var i__7691_9975 = 0;
    while (true) {
      if (i__7691_9975 < count__7690_9974) {
        var arg__4902__auto___9976 = cljs.core._nth.call(null, chunk__7689_9973, i__7691_9975);
        a__4901__auto__.push(arg__4902__auto___9976);
        var G__9977 = seq__7688_9972;
        var G__9978 = chunk__7689_9973;
        var G__9979 = count__7690_9974;
        var G__9980 = i__7691_9975 + 1;
        seq__7688_9972 = G__9977;
        chunk__7689_9973 = G__9978;
        count__7690_9974 = G__9979;
        i__7691_9975 = G__9980;
        continue;
      } else {
        var temp__4126__auto___9981 = cljs.core.seq.call(null, seq__7688_9972);
        if (temp__4126__auto___9981) {
          var seq__7688_9982__$1 = temp__4126__auto___9981;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7688_9982__$1)) {
            var c__4229__auto___9983 = cljs.core.chunk_first.call(null, seq__7688_9982__$1);
            var G__9984 = cljs.core.chunk_rest.call(null, seq__7688_9982__$1);
            var G__9985 = c__4229__auto___9983;
            var G__9986 = cljs.core.count.call(null, c__4229__auto___9983);
            var G__9987 = 0;
            seq__7688_9972 = G__9984;
            chunk__7689_9973 = G__9985;
            count__7690_9974 = G__9986;
            i__7691_9975 = G__9987;
            continue;
          } else {
            var arg__4902__auto___9988 = cljs.core.first.call(null, seq__7688_9982__$1);
            a__4901__auto__.push(arg__4902__auto___9988);
            var G__9989 = cljs.core.next.call(null, seq__7688_9982__$1);
            var G__9990 = null;
            var G__9991 = 0;
            var G__9992 = 0;
            seq__7688_9972 = G__9989;
            chunk__7689_9973 = G__9990;
            count__7690_9974 = G__9991;
            i__7691_9975 = G__9992;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.td.apply(null, a__4901__auto__);
  };
  var td = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return td__delegate.call(this, args__4900__auto__);
  };
  td.cljs$lang$maxFixedArity = 0;
  td.cljs$lang$applyTo = function(arglist__9993) {
    var args__4900__auto__ = cljs.core.seq(arglist__9993);
    return td__delegate(args__4900__auto__);
  };
  td.cljs$core$IFn$_invoke$arity$variadic = td__delegate;
  return td;
}();
quiescent.dom.textarea = function() {
  var textarea__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7696_9994 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7697_9995 = null;
    var count__7698_9996 = 0;
    var i__7699_9997 = 0;
    while (true) {
      if (i__7699_9997 < count__7698_9996) {
        var arg__4902__auto___9998 = cljs.core._nth.call(null, chunk__7697_9995, i__7699_9997);
        a__4901__auto__.push(arg__4902__auto___9998);
        var G__9999 = seq__7696_9994;
        var G__10000 = chunk__7697_9995;
        var G__10001 = count__7698_9996;
        var G__10002 = i__7699_9997 + 1;
        seq__7696_9994 = G__9999;
        chunk__7697_9995 = G__10000;
        count__7698_9996 = G__10001;
        i__7699_9997 = G__10002;
        continue;
      } else {
        var temp__4126__auto___10003 = cljs.core.seq.call(null, seq__7696_9994);
        if (temp__4126__auto___10003) {
          var seq__7696_10004__$1 = temp__4126__auto___10003;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7696_10004__$1)) {
            var c__4229__auto___10005 = cljs.core.chunk_first.call(null, seq__7696_10004__$1);
            var G__10006 = cljs.core.chunk_rest.call(null, seq__7696_10004__$1);
            var G__10007 = c__4229__auto___10005;
            var G__10008 = cljs.core.count.call(null, c__4229__auto___10005);
            var G__10009 = 0;
            seq__7696_9994 = G__10006;
            chunk__7697_9995 = G__10007;
            count__7698_9996 = G__10008;
            i__7699_9997 = G__10009;
            continue;
          } else {
            var arg__4902__auto___10010 = cljs.core.first.call(null, seq__7696_10004__$1);
            a__4901__auto__.push(arg__4902__auto___10010);
            var G__10011 = cljs.core.next.call(null, seq__7696_10004__$1);
            var G__10012 = null;
            var G__10013 = 0;
            var G__10014 = 0;
            seq__7696_9994 = G__10011;
            chunk__7697_9995 = G__10012;
            count__7698_9996 = G__10013;
            i__7699_9997 = G__10014;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.textarea.apply(null, a__4901__auto__);
  };
  var textarea = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return textarea__delegate.call(this, args__4900__auto__);
  };
  textarea.cljs$lang$maxFixedArity = 0;
  textarea.cljs$lang$applyTo = function(arglist__10015) {
    var args__4900__auto__ = cljs.core.seq(arglist__10015);
    return textarea__delegate(args__4900__auto__);
  };
  textarea.cljs$core$IFn$_invoke$arity$variadic = textarea__delegate;
  return textarea;
}();
quiescent.dom.tfoot = function() {
  var tfoot__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7704_10016 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7705_10017 = null;
    var count__7706_10018 = 0;
    var i__7707_10019 = 0;
    while (true) {
      if (i__7707_10019 < count__7706_10018) {
        var arg__4902__auto___10020 = cljs.core._nth.call(null, chunk__7705_10017, i__7707_10019);
        a__4901__auto__.push(arg__4902__auto___10020);
        var G__10021 = seq__7704_10016;
        var G__10022 = chunk__7705_10017;
        var G__10023 = count__7706_10018;
        var G__10024 = i__7707_10019 + 1;
        seq__7704_10016 = G__10021;
        chunk__7705_10017 = G__10022;
        count__7706_10018 = G__10023;
        i__7707_10019 = G__10024;
        continue;
      } else {
        var temp__4126__auto___10025 = cljs.core.seq.call(null, seq__7704_10016);
        if (temp__4126__auto___10025) {
          var seq__7704_10026__$1 = temp__4126__auto___10025;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7704_10026__$1)) {
            var c__4229__auto___10027 = cljs.core.chunk_first.call(null, seq__7704_10026__$1);
            var G__10028 = cljs.core.chunk_rest.call(null, seq__7704_10026__$1);
            var G__10029 = c__4229__auto___10027;
            var G__10030 = cljs.core.count.call(null, c__4229__auto___10027);
            var G__10031 = 0;
            seq__7704_10016 = G__10028;
            chunk__7705_10017 = G__10029;
            count__7706_10018 = G__10030;
            i__7707_10019 = G__10031;
            continue;
          } else {
            var arg__4902__auto___10032 = cljs.core.first.call(null, seq__7704_10026__$1);
            a__4901__auto__.push(arg__4902__auto___10032);
            var G__10033 = cljs.core.next.call(null, seq__7704_10026__$1);
            var G__10034 = null;
            var G__10035 = 0;
            var G__10036 = 0;
            seq__7704_10016 = G__10033;
            chunk__7705_10017 = G__10034;
            count__7706_10018 = G__10035;
            i__7707_10019 = G__10036;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.tfoot.apply(null, a__4901__auto__);
  };
  var tfoot = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return tfoot__delegate.call(this, args__4900__auto__);
  };
  tfoot.cljs$lang$maxFixedArity = 0;
  tfoot.cljs$lang$applyTo = function(arglist__10037) {
    var args__4900__auto__ = cljs.core.seq(arglist__10037);
    return tfoot__delegate(args__4900__auto__);
  };
  tfoot.cljs$core$IFn$_invoke$arity$variadic = tfoot__delegate;
  return tfoot;
}();
quiescent.dom.th = function() {
  var th__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7712_10038 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7713_10039 = null;
    var count__7714_10040 = 0;
    var i__7715_10041 = 0;
    while (true) {
      if (i__7715_10041 < count__7714_10040) {
        var arg__4902__auto___10042 = cljs.core._nth.call(null, chunk__7713_10039, i__7715_10041);
        a__4901__auto__.push(arg__4902__auto___10042);
        var G__10043 = seq__7712_10038;
        var G__10044 = chunk__7713_10039;
        var G__10045 = count__7714_10040;
        var G__10046 = i__7715_10041 + 1;
        seq__7712_10038 = G__10043;
        chunk__7713_10039 = G__10044;
        count__7714_10040 = G__10045;
        i__7715_10041 = G__10046;
        continue;
      } else {
        var temp__4126__auto___10047 = cljs.core.seq.call(null, seq__7712_10038);
        if (temp__4126__auto___10047) {
          var seq__7712_10048__$1 = temp__4126__auto___10047;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7712_10048__$1)) {
            var c__4229__auto___10049 = cljs.core.chunk_first.call(null, seq__7712_10048__$1);
            var G__10050 = cljs.core.chunk_rest.call(null, seq__7712_10048__$1);
            var G__10051 = c__4229__auto___10049;
            var G__10052 = cljs.core.count.call(null, c__4229__auto___10049);
            var G__10053 = 0;
            seq__7712_10038 = G__10050;
            chunk__7713_10039 = G__10051;
            count__7714_10040 = G__10052;
            i__7715_10041 = G__10053;
            continue;
          } else {
            var arg__4902__auto___10054 = cljs.core.first.call(null, seq__7712_10048__$1);
            a__4901__auto__.push(arg__4902__auto___10054);
            var G__10055 = cljs.core.next.call(null, seq__7712_10048__$1);
            var G__10056 = null;
            var G__10057 = 0;
            var G__10058 = 0;
            seq__7712_10038 = G__10055;
            chunk__7713_10039 = G__10056;
            count__7714_10040 = G__10057;
            i__7715_10041 = G__10058;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.th.apply(null, a__4901__auto__);
  };
  var th = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return th__delegate.call(this, args__4900__auto__);
  };
  th.cljs$lang$maxFixedArity = 0;
  th.cljs$lang$applyTo = function(arglist__10059) {
    var args__4900__auto__ = cljs.core.seq(arglist__10059);
    return th__delegate(args__4900__auto__);
  };
  th.cljs$core$IFn$_invoke$arity$variadic = th__delegate;
  return th;
}();
quiescent.dom.thead = function() {
  var thead__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7720_10060 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7721_10061 = null;
    var count__7722_10062 = 0;
    var i__7723_10063 = 0;
    while (true) {
      if (i__7723_10063 < count__7722_10062) {
        var arg__4902__auto___10064 = cljs.core._nth.call(null, chunk__7721_10061, i__7723_10063);
        a__4901__auto__.push(arg__4902__auto___10064);
        var G__10065 = seq__7720_10060;
        var G__10066 = chunk__7721_10061;
        var G__10067 = count__7722_10062;
        var G__10068 = i__7723_10063 + 1;
        seq__7720_10060 = G__10065;
        chunk__7721_10061 = G__10066;
        count__7722_10062 = G__10067;
        i__7723_10063 = G__10068;
        continue;
      } else {
        var temp__4126__auto___10069 = cljs.core.seq.call(null, seq__7720_10060);
        if (temp__4126__auto___10069) {
          var seq__7720_10070__$1 = temp__4126__auto___10069;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7720_10070__$1)) {
            var c__4229__auto___10071 = cljs.core.chunk_first.call(null, seq__7720_10070__$1);
            var G__10072 = cljs.core.chunk_rest.call(null, seq__7720_10070__$1);
            var G__10073 = c__4229__auto___10071;
            var G__10074 = cljs.core.count.call(null, c__4229__auto___10071);
            var G__10075 = 0;
            seq__7720_10060 = G__10072;
            chunk__7721_10061 = G__10073;
            count__7722_10062 = G__10074;
            i__7723_10063 = G__10075;
            continue;
          } else {
            var arg__4902__auto___10076 = cljs.core.first.call(null, seq__7720_10070__$1);
            a__4901__auto__.push(arg__4902__auto___10076);
            var G__10077 = cljs.core.next.call(null, seq__7720_10070__$1);
            var G__10078 = null;
            var G__10079 = 0;
            var G__10080 = 0;
            seq__7720_10060 = G__10077;
            chunk__7721_10061 = G__10078;
            count__7722_10062 = G__10079;
            i__7723_10063 = G__10080;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.thead.apply(null, a__4901__auto__);
  };
  var thead = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return thead__delegate.call(this, args__4900__auto__);
  };
  thead.cljs$lang$maxFixedArity = 0;
  thead.cljs$lang$applyTo = function(arglist__10081) {
    var args__4900__auto__ = cljs.core.seq(arglist__10081);
    return thead__delegate(args__4900__auto__);
  };
  thead.cljs$core$IFn$_invoke$arity$variadic = thead__delegate;
  return thead;
}();
quiescent.dom.time = function() {
  var time__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7728_10082 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7729_10083 = null;
    var count__7730_10084 = 0;
    var i__7731_10085 = 0;
    while (true) {
      if (i__7731_10085 < count__7730_10084) {
        var arg__4902__auto___10086 = cljs.core._nth.call(null, chunk__7729_10083, i__7731_10085);
        a__4901__auto__.push(arg__4902__auto___10086);
        var G__10087 = seq__7728_10082;
        var G__10088 = chunk__7729_10083;
        var G__10089 = count__7730_10084;
        var G__10090 = i__7731_10085 + 1;
        seq__7728_10082 = G__10087;
        chunk__7729_10083 = G__10088;
        count__7730_10084 = G__10089;
        i__7731_10085 = G__10090;
        continue;
      } else {
        var temp__4126__auto___10091 = cljs.core.seq.call(null, seq__7728_10082);
        if (temp__4126__auto___10091) {
          var seq__7728_10092__$1 = temp__4126__auto___10091;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7728_10092__$1)) {
            var c__4229__auto___10093 = cljs.core.chunk_first.call(null, seq__7728_10092__$1);
            var G__10094 = cljs.core.chunk_rest.call(null, seq__7728_10092__$1);
            var G__10095 = c__4229__auto___10093;
            var G__10096 = cljs.core.count.call(null, c__4229__auto___10093);
            var G__10097 = 0;
            seq__7728_10082 = G__10094;
            chunk__7729_10083 = G__10095;
            count__7730_10084 = G__10096;
            i__7731_10085 = G__10097;
            continue;
          } else {
            var arg__4902__auto___10098 = cljs.core.first.call(null, seq__7728_10092__$1);
            a__4901__auto__.push(arg__4902__auto___10098);
            var G__10099 = cljs.core.next.call(null, seq__7728_10092__$1);
            var G__10100 = null;
            var G__10101 = 0;
            var G__10102 = 0;
            seq__7728_10082 = G__10099;
            chunk__7729_10083 = G__10100;
            count__7730_10084 = G__10101;
            i__7731_10085 = G__10102;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.time.apply(null, a__4901__auto__);
  };
  var time = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return time__delegate.call(this, args__4900__auto__);
  };
  time.cljs$lang$maxFixedArity = 0;
  time.cljs$lang$applyTo = function(arglist__10103) {
    var args__4900__auto__ = cljs.core.seq(arglist__10103);
    return time__delegate(args__4900__auto__);
  };
  time.cljs$core$IFn$_invoke$arity$variadic = time__delegate;
  return time;
}();
quiescent.dom.title = function() {
  var title__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7736_10104 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7737_10105 = null;
    var count__7738_10106 = 0;
    var i__7739_10107 = 0;
    while (true) {
      if (i__7739_10107 < count__7738_10106) {
        var arg__4902__auto___10108 = cljs.core._nth.call(null, chunk__7737_10105, i__7739_10107);
        a__4901__auto__.push(arg__4902__auto___10108);
        var G__10109 = seq__7736_10104;
        var G__10110 = chunk__7737_10105;
        var G__10111 = count__7738_10106;
        var G__10112 = i__7739_10107 + 1;
        seq__7736_10104 = G__10109;
        chunk__7737_10105 = G__10110;
        count__7738_10106 = G__10111;
        i__7739_10107 = G__10112;
        continue;
      } else {
        var temp__4126__auto___10113 = cljs.core.seq.call(null, seq__7736_10104);
        if (temp__4126__auto___10113) {
          var seq__7736_10114__$1 = temp__4126__auto___10113;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7736_10114__$1)) {
            var c__4229__auto___10115 = cljs.core.chunk_first.call(null, seq__7736_10114__$1);
            var G__10116 = cljs.core.chunk_rest.call(null, seq__7736_10114__$1);
            var G__10117 = c__4229__auto___10115;
            var G__10118 = cljs.core.count.call(null, c__4229__auto___10115);
            var G__10119 = 0;
            seq__7736_10104 = G__10116;
            chunk__7737_10105 = G__10117;
            count__7738_10106 = G__10118;
            i__7739_10107 = G__10119;
            continue;
          } else {
            var arg__4902__auto___10120 = cljs.core.first.call(null, seq__7736_10114__$1);
            a__4901__auto__.push(arg__4902__auto___10120);
            var G__10121 = cljs.core.next.call(null, seq__7736_10114__$1);
            var G__10122 = null;
            var G__10123 = 0;
            var G__10124 = 0;
            seq__7736_10104 = G__10121;
            chunk__7737_10105 = G__10122;
            count__7738_10106 = G__10123;
            i__7739_10107 = G__10124;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.title.apply(null, a__4901__auto__);
  };
  var title = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return title__delegate.call(this, args__4900__auto__);
  };
  title.cljs$lang$maxFixedArity = 0;
  title.cljs$lang$applyTo = function(arglist__10125) {
    var args__4900__auto__ = cljs.core.seq(arglist__10125);
    return title__delegate(args__4900__auto__);
  };
  title.cljs$core$IFn$_invoke$arity$variadic = title__delegate;
  return title;
}();
quiescent.dom.tr = function() {
  var tr__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7744_10126 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7745_10127 = null;
    var count__7746_10128 = 0;
    var i__7747_10129 = 0;
    while (true) {
      if (i__7747_10129 < count__7746_10128) {
        var arg__4902__auto___10130 = cljs.core._nth.call(null, chunk__7745_10127, i__7747_10129);
        a__4901__auto__.push(arg__4902__auto___10130);
        var G__10131 = seq__7744_10126;
        var G__10132 = chunk__7745_10127;
        var G__10133 = count__7746_10128;
        var G__10134 = i__7747_10129 + 1;
        seq__7744_10126 = G__10131;
        chunk__7745_10127 = G__10132;
        count__7746_10128 = G__10133;
        i__7747_10129 = G__10134;
        continue;
      } else {
        var temp__4126__auto___10135 = cljs.core.seq.call(null, seq__7744_10126);
        if (temp__4126__auto___10135) {
          var seq__7744_10136__$1 = temp__4126__auto___10135;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7744_10136__$1)) {
            var c__4229__auto___10137 = cljs.core.chunk_first.call(null, seq__7744_10136__$1);
            var G__10138 = cljs.core.chunk_rest.call(null, seq__7744_10136__$1);
            var G__10139 = c__4229__auto___10137;
            var G__10140 = cljs.core.count.call(null, c__4229__auto___10137);
            var G__10141 = 0;
            seq__7744_10126 = G__10138;
            chunk__7745_10127 = G__10139;
            count__7746_10128 = G__10140;
            i__7747_10129 = G__10141;
            continue;
          } else {
            var arg__4902__auto___10142 = cljs.core.first.call(null, seq__7744_10136__$1);
            a__4901__auto__.push(arg__4902__auto___10142);
            var G__10143 = cljs.core.next.call(null, seq__7744_10136__$1);
            var G__10144 = null;
            var G__10145 = 0;
            var G__10146 = 0;
            seq__7744_10126 = G__10143;
            chunk__7745_10127 = G__10144;
            count__7746_10128 = G__10145;
            i__7747_10129 = G__10146;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.tr.apply(null, a__4901__auto__);
  };
  var tr = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return tr__delegate.call(this, args__4900__auto__);
  };
  tr.cljs$lang$maxFixedArity = 0;
  tr.cljs$lang$applyTo = function(arglist__10147) {
    var args__4900__auto__ = cljs.core.seq(arglist__10147);
    return tr__delegate(args__4900__auto__);
  };
  tr.cljs$core$IFn$_invoke$arity$variadic = tr__delegate;
  return tr;
}();
quiescent.dom.track = function() {
  var track__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7752_10148 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7753_10149 = null;
    var count__7754_10150 = 0;
    var i__7755_10151 = 0;
    while (true) {
      if (i__7755_10151 < count__7754_10150) {
        var arg__4902__auto___10152 = cljs.core._nth.call(null, chunk__7753_10149, i__7755_10151);
        a__4901__auto__.push(arg__4902__auto___10152);
        var G__10153 = seq__7752_10148;
        var G__10154 = chunk__7753_10149;
        var G__10155 = count__7754_10150;
        var G__10156 = i__7755_10151 + 1;
        seq__7752_10148 = G__10153;
        chunk__7753_10149 = G__10154;
        count__7754_10150 = G__10155;
        i__7755_10151 = G__10156;
        continue;
      } else {
        var temp__4126__auto___10157 = cljs.core.seq.call(null, seq__7752_10148);
        if (temp__4126__auto___10157) {
          var seq__7752_10158__$1 = temp__4126__auto___10157;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7752_10158__$1)) {
            var c__4229__auto___10159 = cljs.core.chunk_first.call(null, seq__7752_10158__$1);
            var G__10160 = cljs.core.chunk_rest.call(null, seq__7752_10158__$1);
            var G__10161 = c__4229__auto___10159;
            var G__10162 = cljs.core.count.call(null, c__4229__auto___10159);
            var G__10163 = 0;
            seq__7752_10148 = G__10160;
            chunk__7753_10149 = G__10161;
            count__7754_10150 = G__10162;
            i__7755_10151 = G__10163;
            continue;
          } else {
            var arg__4902__auto___10164 = cljs.core.first.call(null, seq__7752_10158__$1);
            a__4901__auto__.push(arg__4902__auto___10164);
            var G__10165 = cljs.core.next.call(null, seq__7752_10158__$1);
            var G__10166 = null;
            var G__10167 = 0;
            var G__10168 = 0;
            seq__7752_10148 = G__10165;
            chunk__7753_10149 = G__10166;
            count__7754_10150 = G__10167;
            i__7755_10151 = G__10168;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.track.apply(null, a__4901__auto__);
  };
  var track = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return track__delegate.call(this, args__4900__auto__);
  };
  track.cljs$lang$maxFixedArity = 0;
  track.cljs$lang$applyTo = function(arglist__10169) {
    var args__4900__auto__ = cljs.core.seq(arglist__10169);
    return track__delegate(args__4900__auto__);
  };
  track.cljs$core$IFn$_invoke$arity$variadic = track__delegate;
  return track;
}();
quiescent.dom.u = function() {
  var u__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7760_10170 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7761_10171 = null;
    var count__7762_10172 = 0;
    var i__7763_10173 = 0;
    while (true) {
      if (i__7763_10173 < count__7762_10172) {
        var arg__4902__auto___10174 = cljs.core._nth.call(null, chunk__7761_10171, i__7763_10173);
        a__4901__auto__.push(arg__4902__auto___10174);
        var G__10175 = seq__7760_10170;
        var G__10176 = chunk__7761_10171;
        var G__10177 = count__7762_10172;
        var G__10178 = i__7763_10173 + 1;
        seq__7760_10170 = G__10175;
        chunk__7761_10171 = G__10176;
        count__7762_10172 = G__10177;
        i__7763_10173 = G__10178;
        continue;
      } else {
        var temp__4126__auto___10179 = cljs.core.seq.call(null, seq__7760_10170);
        if (temp__4126__auto___10179) {
          var seq__7760_10180__$1 = temp__4126__auto___10179;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7760_10180__$1)) {
            var c__4229__auto___10181 = cljs.core.chunk_first.call(null, seq__7760_10180__$1);
            var G__10182 = cljs.core.chunk_rest.call(null, seq__7760_10180__$1);
            var G__10183 = c__4229__auto___10181;
            var G__10184 = cljs.core.count.call(null, c__4229__auto___10181);
            var G__10185 = 0;
            seq__7760_10170 = G__10182;
            chunk__7761_10171 = G__10183;
            count__7762_10172 = G__10184;
            i__7763_10173 = G__10185;
            continue;
          } else {
            var arg__4902__auto___10186 = cljs.core.first.call(null, seq__7760_10180__$1);
            a__4901__auto__.push(arg__4902__auto___10186);
            var G__10187 = cljs.core.next.call(null, seq__7760_10180__$1);
            var G__10188 = null;
            var G__10189 = 0;
            var G__10190 = 0;
            seq__7760_10170 = G__10187;
            chunk__7761_10171 = G__10188;
            count__7762_10172 = G__10189;
            i__7763_10173 = G__10190;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.u.apply(null, a__4901__auto__);
  };
  var u = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return u__delegate.call(this, args__4900__auto__);
  };
  u.cljs$lang$maxFixedArity = 0;
  u.cljs$lang$applyTo = function(arglist__10191) {
    var args__4900__auto__ = cljs.core.seq(arglist__10191);
    return u__delegate(args__4900__auto__);
  };
  u.cljs$core$IFn$_invoke$arity$variadic = u__delegate;
  return u;
}();
quiescent.dom.ul = function() {
  var ul__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7768_10192 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7769_10193 = null;
    var count__7770_10194 = 0;
    var i__7771_10195 = 0;
    while (true) {
      if (i__7771_10195 < count__7770_10194) {
        var arg__4902__auto___10196 = cljs.core._nth.call(null, chunk__7769_10193, i__7771_10195);
        a__4901__auto__.push(arg__4902__auto___10196);
        var G__10197 = seq__7768_10192;
        var G__10198 = chunk__7769_10193;
        var G__10199 = count__7770_10194;
        var G__10200 = i__7771_10195 + 1;
        seq__7768_10192 = G__10197;
        chunk__7769_10193 = G__10198;
        count__7770_10194 = G__10199;
        i__7771_10195 = G__10200;
        continue;
      } else {
        var temp__4126__auto___10201 = cljs.core.seq.call(null, seq__7768_10192);
        if (temp__4126__auto___10201) {
          var seq__7768_10202__$1 = temp__4126__auto___10201;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7768_10202__$1)) {
            var c__4229__auto___10203 = cljs.core.chunk_first.call(null, seq__7768_10202__$1);
            var G__10204 = cljs.core.chunk_rest.call(null, seq__7768_10202__$1);
            var G__10205 = c__4229__auto___10203;
            var G__10206 = cljs.core.count.call(null, c__4229__auto___10203);
            var G__10207 = 0;
            seq__7768_10192 = G__10204;
            chunk__7769_10193 = G__10205;
            count__7770_10194 = G__10206;
            i__7771_10195 = G__10207;
            continue;
          } else {
            var arg__4902__auto___10208 = cljs.core.first.call(null, seq__7768_10202__$1);
            a__4901__auto__.push(arg__4902__auto___10208);
            var G__10209 = cljs.core.next.call(null, seq__7768_10202__$1);
            var G__10210 = null;
            var G__10211 = 0;
            var G__10212 = 0;
            seq__7768_10192 = G__10209;
            chunk__7769_10193 = G__10210;
            count__7770_10194 = G__10211;
            i__7771_10195 = G__10212;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.ul.apply(null, a__4901__auto__);
  };
  var ul = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return ul__delegate.call(this, args__4900__auto__);
  };
  ul.cljs$lang$maxFixedArity = 0;
  ul.cljs$lang$applyTo = function(arglist__10213) {
    var args__4900__auto__ = cljs.core.seq(arglist__10213);
    return ul__delegate(args__4900__auto__);
  };
  ul.cljs$core$IFn$_invoke$arity$variadic = ul__delegate;
  return ul;
}();
quiescent.dom.var$ = function() {
  var var$__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7776_10214 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7777_10215 = null;
    var count__7778_10216 = 0;
    var i__7779_10217 = 0;
    while (true) {
      if (i__7779_10217 < count__7778_10216) {
        var arg__4902__auto___10218 = cljs.core._nth.call(null, chunk__7777_10215, i__7779_10217);
        a__4901__auto__.push(arg__4902__auto___10218);
        var G__10219 = seq__7776_10214;
        var G__10220 = chunk__7777_10215;
        var G__10221 = count__7778_10216;
        var G__10222 = i__7779_10217 + 1;
        seq__7776_10214 = G__10219;
        chunk__7777_10215 = G__10220;
        count__7778_10216 = G__10221;
        i__7779_10217 = G__10222;
        continue;
      } else {
        var temp__4126__auto___10223 = cljs.core.seq.call(null, seq__7776_10214);
        if (temp__4126__auto___10223) {
          var seq__7776_10224__$1 = temp__4126__auto___10223;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7776_10224__$1)) {
            var c__4229__auto___10225 = cljs.core.chunk_first.call(null, seq__7776_10224__$1);
            var G__10226 = cljs.core.chunk_rest.call(null, seq__7776_10224__$1);
            var G__10227 = c__4229__auto___10225;
            var G__10228 = cljs.core.count.call(null, c__4229__auto___10225);
            var G__10229 = 0;
            seq__7776_10214 = G__10226;
            chunk__7777_10215 = G__10227;
            count__7778_10216 = G__10228;
            i__7779_10217 = G__10229;
            continue;
          } else {
            var arg__4902__auto___10230 = cljs.core.first.call(null, seq__7776_10224__$1);
            a__4901__auto__.push(arg__4902__auto___10230);
            var G__10231 = cljs.core.next.call(null, seq__7776_10224__$1);
            var G__10232 = null;
            var G__10233 = 0;
            var G__10234 = 0;
            seq__7776_10214 = G__10231;
            chunk__7777_10215 = G__10232;
            count__7778_10216 = G__10233;
            i__7779_10217 = G__10234;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.var$.apply(null, a__4901__auto__);
  };
  var var$ = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return var$__delegate.call(this, args__4900__auto__);
  };
  var$.cljs$lang$maxFixedArity = 0;
  var$.cljs$lang$applyTo = function(arglist__10235) {
    var args__4900__auto__ = cljs.core.seq(arglist__10235);
    return var$__delegate(args__4900__auto__);
  };
  var$.cljs$core$IFn$_invoke$arity$variadic = var$__delegate;
  return var$;
}();
quiescent.dom.video = function() {
  var video__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7784_10236 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7785_10237 = null;
    var count__7786_10238 = 0;
    var i__7787_10239 = 0;
    while (true) {
      if (i__7787_10239 < count__7786_10238) {
        var arg__4902__auto___10240 = cljs.core._nth.call(null, chunk__7785_10237, i__7787_10239);
        a__4901__auto__.push(arg__4902__auto___10240);
        var G__10241 = seq__7784_10236;
        var G__10242 = chunk__7785_10237;
        var G__10243 = count__7786_10238;
        var G__10244 = i__7787_10239 + 1;
        seq__7784_10236 = G__10241;
        chunk__7785_10237 = G__10242;
        count__7786_10238 = G__10243;
        i__7787_10239 = G__10244;
        continue;
      } else {
        var temp__4126__auto___10245 = cljs.core.seq.call(null, seq__7784_10236);
        if (temp__4126__auto___10245) {
          var seq__7784_10246__$1 = temp__4126__auto___10245;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7784_10246__$1)) {
            var c__4229__auto___10247 = cljs.core.chunk_first.call(null, seq__7784_10246__$1);
            var G__10248 = cljs.core.chunk_rest.call(null, seq__7784_10246__$1);
            var G__10249 = c__4229__auto___10247;
            var G__10250 = cljs.core.count.call(null, c__4229__auto___10247);
            var G__10251 = 0;
            seq__7784_10236 = G__10248;
            chunk__7785_10237 = G__10249;
            count__7786_10238 = G__10250;
            i__7787_10239 = G__10251;
            continue;
          } else {
            var arg__4902__auto___10252 = cljs.core.first.call(null, seq__7784_10246__$1);
            a__4901__auto__.push(arg__4902__auto___10252);
            var G__10253 = cljs.core.next.call(null, seq__7784_10246__$1);
            var G__10254 = null;
            var G__10255 = 0;
            var G__10256 = 0;
            seq__7784_10236 = G__10253;
            chunk__7785_10237 = G__10254;
            count__7786_10238 = G__10255;
            i__7787_10239 = G__10256;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.video.apply(null, a__4901__auto__);
  };
  var video = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return video__delegate.call(this, args__4900__auto__);
  };
  video.cljs$lang$maxFixedArity = 0;
  video.cljs$lang$applyTo = function(arglist__10257) {
    var args__4900__auto__ = cljs.core.seq(arglist__10257);
    return video__delegate(args__4900__auto__);
  };
  video.cljs$core$IFn$_invoke$arity$variadic = video__delegate;
  return video;
}();
quiescent.dom.wbr = function() {
  var wbr__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7792_10258 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7793_10259 = null;
    var count__7794_10260 = 0;
    var i__7795_10261 = 0;
    while (true) {
      if (i__7795_10261 < count__7794_10260) {
        var arg__4902__auto___10262 = cljs.core._nth.call(null, chunk__7793_10259, i__7795_10261);
        a__4901__auto__.push(arg__4902__auto___10262);
        var G__10263 = seq__7792_10258;
        var G__10264 = chunk__7793_10259;
        var G__10265 = count__7794_10260;
        var G__10266 = i__7795_10261 + 1;
        seq__7792_10258 = G__10263;
        chunk__7793_10259 = G__10264;
        count__7794_10260 = G__10265;
        i__7795_10261 = G__10266;
        continue;
      } else {
        var temp__4126__auto___10267 = cljs.core.seq.call(null, seq__7792_10258);
        if (temp__4126__auto___10267) {
          var seq__7792_10268__$1 = temp__4126__auto___10267;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7792_10268__$1)) {
            var c__4229__auto___10269 = cljs.core.chunk_first.call(null, seq__7792_10268__$1);
            var G__10270 = cljs.core.chunk_rest.call(null, seq__7792_10268__$1);
            var G__10271 = c__4229__auto___10269;
            var G__10272 = cljs.core.count.call(null, c__4229__auto___10269);
            var G__10273 = 0;
            seq__7792_10258 = G__10270;
            chunk__7793_10259 = G__10271;
            count__7794_10260 = G__10272;
            i__7795_10261 = G__10273;
            continue;
          } else {
            var arg__4902__auto___10274 = cljs.core.first.call(null, seq__7792_10268__$1);
            a__4901__auto__.push(arg__4902__auto___10274);
            var G__10275 = cljs.core.next.call(null, seq__7792_10268__$1);
            var G__10276 = null;
            var G__10277 = 0;
            var G__10278 = 0;
            seq__7792_10258 = G__10275;
            chunk__7793_10259 = G__10276;
            count__7794_10260 = G__10277;
            i__7795_10261 = G__10278;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.wbr.apply(null, a__4901__auto__);
  };
  var wbr = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return wbr__delegate.call(this, args__4900__auto__);
  };
  wbr.cljs$lang$maxFixedArity = 0;
  wbr.cljs$lang$applyTo = function(arglist__10279) {
    var args__4900__auto__ = cljs.core.seq(arglist__10279);
    return wbr__delegate(args__4900__auto__);
  };
  wbr.cljs$core$IFn$_invoke$arity$variadic = wbr__delegate;
  return wbr;
}();
quiescent.dom.circle = function() {
  var circle__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7800_10280 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7801_10281 = null;
    var count__7802_10282 = 0;
    var i__7803_10283 = 0;
    while (true) {
      if (i__7803_10283 < count__7802_10282) {
        var arg__4902__auto___10284 = cljs.core._nth.call(null, chunk__7801_10281, i__7803_10283);
        a__4901__auto__.push(arg__4902__auto___10284);
        var G__10285 = seq__7800_10280;
        var G__10286 = chunk__7801_10281;
        var G__10287 = count__7802_10282;
        var G__10288 = i__7803_10283 + 1;
        seq__7800_10280 = G__10285;
        chunk__7801_10281 = G__10286;
        count__7802_10282 = G__10287;
        i__7803_10283 = G__10288;
        continue;
      } else {
        var temp__4126__auto___10289 = cljs.core.seq.call(null, seq__7800_10280);
        if (temp__4126__auto___10289) {
          var seq__7800_10290__$1 = temp__4126__auto___10289;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7800_10290__$1)) {
            var c__4229__auto___10291 = cljs.core.chunk_first.call(null, seq__7800_10290__$1);
            var G__10292 = cljs.core.chunk_rest.call(null, seq__7800_10290__$1);
            var G__10293 = c__4229__auto___10291;
            var G__10294 = cljs.core.count.call(null, c__4229__auto___10291);
            var G__10295 = 0;
            seq__7800_10280 = G__10292;
            chunk__7801_10281 = G__10293;
            count__7802_10282 = G__10294;
            i__7803_10283 = G__10295;
            continue;
          } else {
            var arg__4902__auto___10296 = cljs.core.first.call(null, seq__7800_10290__$1);
            a__4901__auto__.push(arg__4902__auto___10296);
            var G__10297 = cljs.core.next.call(null, seq__7800_10290__$1);
            var G__10298 = null;
            var G__10299 = 0;
            var G__10300 = 0;
            seq__7800_10280 = G__10297;
            chunk__7801_10281 = G__10298;
            count__7802_10282 = G__10299;
            i__7803_10283 = G__10300;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.circle.apply(null, a__4901__auto__);
  };
  var circle = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return circle__delegate.call(this, args__4900__auto__);
  };
  circle.cljs$lang$maxFixedArity = 0;
  circle.cljs$lang$applyTo = function(arglist__10301) {
    var args__4900__auto__ = cljs.core.seq(arglist__10301);
    return circle__delegate(args__4900__auto__);
  };
  circle.cljs$core$IFn$_invoke$arity$variadic = circle__delegate;
  return circle;
}();
quiescent.dom.g = function() {
  var g__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7808_10302 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7809_10303 = null;
    var count__7810_10304 = 0;
    var i__7811_10305 = 0;
    while (true) {
      if (i__7811_10305 < count__7810_10304) {
        var arg__4902__auto___10306 = cljs.core._nth.call(null, chunk__7809_10303, i__7811_10305);
        a__4901__auto__.push(arg__4902__auto___10306);
        var G__10307 = seq__7808_10302;
        var G__10308 = chunk__7809_10303;
        var G__10309 = count__7810_10304;
        var G__10310 = i__7811_10305 + 1;
        seq__7808_10302 = G__10307;
        chunk__7809_10303 = G__10308;
        count__7810_10304 = G__10309;
        i__7811_10305 = G__10310;
        continue;
      } else {
        var temp__4126__auto___10311 = cljs.core.seq.call(null, seq__7808_10302);
        if (temp__4126__auto___10311) {
          var seq__7808_10312__$1 = temp__4126__auto___10311;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7808_10312__$1)) {
            var c__4229__auto___10313 = cljs.core.chunk_first.call(null, seq__7808_10312__$1);
            var G__10314 = cljs.core.chunk_rest.call(null, seq__7808_10312__$1);
            var G__10315 = c__4229__auto___10313;
            var G__10316 = cljs.core.count.call(null, c__4229__auto___10313);
            var G__10317 = 0;
            seq__7808_10302 = G__10314;
            chunk__7809_10303 = G__10315;
            count__7810_10304 = G__10316;
            i__7811_10305 = G__10317;
            continue;
          } else {
            var arg__4902__auto___10318 = cljs.core.first.call(null, seq__7808_10312__$1);
            a__4901__auto__.push(arg__4902__auto___10318);
            var G__10319 = cljs.core.next.call(null, seq__7808_10312__$1);
            var G__10320 = null;
            var G__10321 = 0;
            var G__10322 = 0;
            seq__7808_10302 = G__10319;
            chunk__7809_10303 = G__10320;
            count__7810_10304 = G__10321;
            i__7811_10305 = G__10322;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.g.apply(null, a__4901__auto__);
  };
  var g = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return g__delegate.call(this, args__4900__auto__);
  };
  g.cljs$lang$maxFixedArity = 0;
  g.cljs$lang$applyTo = function(arglist__10323) {
    var args__4900__auto__ = cljs.core.seq(arglist__10323);
    return g__delegate(args__4900__auto__);
  };
  g.cljs$core$IFn$_invoke$arity$variadic = g__delegate;
  return g;
}();
quiescent.dom.line = function() {
  var line__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7816_10324 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7817_10325 = null;
    var count__7818_10326 = 0;
    var i__7819_10327 = 0;
    while (true) {
      if (i__7819_10327 < count__7818_10326) {
        var arg__4902__auto___10328 = cljs.core._nth.call(null, chunk__7817_10325, i__7819_10327);
        a__4901__auto__.push(arg__4902__auto___10328);
        var G__10329 = seq__7816_10324;
        var G__10330 = chunk__7817_10325;
        var G__10331 = count__7818_10326;
        var G__10332 = i__7819_10327 + 1;
        seq__7816_10324 = G__10329;
        chunk__7817_10325 = G__10330;
        count__7818_10326 = G__10331;
        i__7819_10327 = G__10332;
        continue;
      } else {
        var temp__4126__auto___10333 = cljs.core.seq.call(null, seq__7816_10324);
        if (temp__4126__auto___10333) {
          var seq__7816_10334__$1 = temp__4126__auto___10333;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7816_10334__$1)) {
            var c__4229__auto___10335 = cljs.core.chunk_first.call(null, seq__7816_10334__$1);
            var G__10336 = cljs.core.chunk_rest.call(null, seq__7816_10334__$1);
            var G__10337 = c__4229__auto___10335;
            var G__10338 = cljs.core.count.call(null, c__4229__auto___10335);
            var G__10339 = 0;
            seq__7816_10324 = G__10336;
            chunk__7817_10325 = G__10337;
            count__7818_10326 = G__10338;
            i__7819_10327 = G__10339;
            continue;
          } else {
            var arg__4902__auto___10340 = cljs.core.first.call(null, seq__7816_10334__$1);
            a__4901__auto__.push(arg__4902__auto___10340);
            var G__10341 = cljs.core.next.call(null, seq__7816_10334__$1);
            var G__10342 = null;
            var G__10343 = 0;
            var G__10344 = 0;
            seq__7816_10324 = G__10341;
            chunk__7817_10325 = G__10342;
            count__7818_10326 = G__10343;
            i__7819_10327 = G__10344;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.line.apply(null, a__4901__auto__);
  };
  var line = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return line__delegate.call(this, args__4900__auto__);
  };
  line.cljs$lang$maxFixedArity = 0;
  line.cljs$lang$applyTo = function(arglist__10345) {
    var args__4900__auto__ = cljs.core.seq(arglist__10345);
    return line__delegate(args__4900__auto__);
  };
  line.cljs$core$IFn$_invoke$arity$variadic = line__delegate;
  return line;
}();
quiescent.dom.path = function() {
  var path__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7824_10346 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7825_10347 = null;
    var count__7826_10348 = 0;
    var i__7827_10349 = 0;
    while (true) {
      if (i__7827_10349 < count__7826_10348) {
        var arg__4902__auto___10350 = cljs.core._nth.call(null, chunk__7825_10347, i__7827_10349);
        a__4901__auto__.push(arg__4902__auto___10350);
        var G__10351 = seq__7824_10346;
        var G__10352 = chunk__7825_10347;
        var G__10353 = count__7826_10348;
        var G__10354 = i__7827_10349 + 1;
        seq__7824_10346 = G__10351;
        chunk__7825_10347 = G__10352;
        count__7826_10348 = G__10353;
        i__7827_10349 = G__10354;
        continue;
      } else {
        var temp__4126__auto___10355 = cljs.core.seq.call(null, seq__7824_10346);
        if (temp__4126__auto___10355) {
          var seq__7824_10356__$1 = temp__4126__auto___10355;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7824_10356__$1)) {
            var c__4229__auto___10357 = cljs.core.chunk_first.call(null, seq__7824_10356__$1);
            var G__10358 = cljs.core.chunk_rest.call(null, seq__7824_10356__$1);
            var G__10359 = c__4229__auto___10357;
            var G__10360 = cljs.core.count.call(null, c__4229__auto___10357);
            var G__10361 = 0;
            seq__7824_10346 = G__10358;
            chunk__7825_10347 = G__10359;
            count__7826_10348 = G__10360;
            i__7827_10349 = G__10361;
            continue;
          } else {
            var arg__4902__auto___10362 = cljs.core.first.call(null, seq__7824_10356__$1);
            a__4901__auto__.push(arg__4902__auto___10362);
            var G__10363 = cljs.core.next.call(null, seq__7824_10356__$1);
            var G__10364 = null;
            var G__10365 = 0;
            var G__10366 = 0;
            seq__7824_10346 = G__10363;
            chunk__7825_10347 = G__10364;
            count__7826_10348 = G__10365;
            i__7827_10349 = G__10366;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.path.apply(null, a__4901__auto__);
  };
  var path = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return path__delegate.call(this, args__4900__auto__);
  };
  path.cljs$lang$maxFixedArity = 0;
  path.cljs$lang$applyTo = function(arglist__10367) {
    var args__4900__auto__ = cljs.core.seq(arglist__10367);
    return path__delegate(args__4900__auto__);
  };
  path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
  return path;
}();
quiescent.dom.polygon = function() {
  var polygon__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7832_10368 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7833_10369 = null;
    var count__7834_10370 = 0;
    var i__7835_10371 = 0;
    while (true) {
      if (i__7835_10371 < count__7834_10370) {
        var arg__4902__auto___10372 = cljs.core._nth.call(null, chunk__7833_10369, i__7835_10371);
        a__4901__auto__.push(arg__4902__auto___10372);
        var G__10373 = seq__7832_10368;
        var G__10374 = chunk__7833_10369;
        var G__10375 = count__7834_10370;
        var G__10376 = i__7835_10371 + 1;
        seq__7832_10368 = G__10373;
        chunk__7833_10369 = G__10374;
        count__7834_10370 = G__10375;
        i__7835_10371 = G__10376;
        continue;
      } else {
        var temp__4126__auto___10377 = cljs.core.seq.call(null, seq__7832_10368);
        if (temp__4126__auto___10377) {
          var seq__7832_10378__$1 = temp__4126__auto___10377;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7832_10378__$1)) {
            var c__4229__auto___10379 = cljs.core.chunk_first.call(null, seq__7832_10378__$1);
            var G__10380 = cljs.core.chunk_rest.call(null, seq__7832_10378__$1);
            var G__10381 = c__4229__auto___10379;
            var G__10382 = cljs.core.count.call(null, c__4229__auto___10379);
            var G__10383 = 0;
            seq__7832_10368 = G__10380;
            chunk__7833_10369 = G__10381;
            count__7834_10370 = G__10382;
            i__7835_10371 = G__10383;
            continue;
          } else {
            var arg__4902__auto___10384 = cljs.core.first.call(null, seq__7832_10378__$1);
            a__4901__auto__.push(arg__4902__auto___10384);
            var G__10385 = cljs.core.next.call(null, seq__7832_10378__$1);
            var G__10386 = null;
            var G__10387 = 0;
            var G__10388 = 0;
            seq__7832_10368 = G__10385;
            chunk__7833_10369 = G__10386;
            count__7834_10370 = G__10387;
            i__7835_10371 = G__10388;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.polygon.apply(null, a__4901__auto__);
  };
  var polygon = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return polygon__delegate.call(this, args__4900__auto__);
  };
  polygon.cljs$lang$maxFixedArity = 0;
  polygon.cljs$lang$applyTo = function(arglist__10389) {
    var args__4900__auto__ = cljs.core.seq(arglist__10389);
    return polygon__delegate(args__4900__auto__);
  };
  polygon.cljs$core$IFn$_invoke$arity$variadic = polygon__delegate;
  return polygon;
}();
quiescent.dom.polyline = function() {
  var polyline__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7840_10390 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7841_10391 = null;
    var count__7842_10392 = 0;
    var i__7843_10393 = 0;
    while (true) {
      if (i__7843_10393 < count__7842_10392) {
        var arg__4902__auto___10394 = cljs.core._nth.call(null, chunk__7841_10391, i__7843_10393);
        a__4901__auto__.push(arg__4902__auto___10394);
        var G__10395 = seq__7840_10390;
        var G__10396 = chunk__7841_10391;
        var G__10397 = count__7842_10392;
        var G__10398 = i__7843_10393 + 1;
        seq__7840_10390 = G__10395;
        chunk__7841_10391 = G__10396;
        count__7842_10392 = G__10397;
        i__7843_10393 = G__10398;
        continue;
      } else {
        var temp__4126__auto___10399 = cljs.core.seq.call(null, seq__7840_10390);
        if (temp__4126__auto___10399) {
          var seq__7840_10400__$1 = temp__4126__auto___10399;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7840_10400__$1)) {
            var c__4229__auto___10401 = cljs.core.chunk_first.call(null, seq__7840_10400__$1);
            var G__10402 = cljs.core.chunk_rest.call(null, seq__7840_10400__$1);
            var G__10403 = c__4229__auto___10401;
            var G__10404 = cljs.core.count.call(null, c__4229__auto___10401);
            var G__10405 = 0;
            seq__7840_10390 = G__10402;
            chunk__7841_10391 = G__10403;
            count__7842_10392 = G__10404;
            i__7843_10393 = G__10405;
            continue;
          } else {
            var arg__4902__auto___10406 = cljs.core.first.call(null, seq__7840_10400__$1);
            a__4901__auto__.push(arg__4902__auto___10406);
            var G__10407 = cljs.core.next.call(null, seq__7840_10400__$1);
            var G__10408 = null;
            var G__10409 = 0;
            var G__10410 = 0;
            seq__7840_10390 = G__10407;
            chunk__7841_10391 = G__10408;
            count__7842_10392 = G__10409;
            i__7843_10393 = G__10410;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.polyline.apply(null, a__4901__auto__);
  };
  var polyline = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return polyline__delegate.call(this, args__4900__auto__);
  };
  polyline.cljs$lang$maxFixedArity = 0;
  polyline.cljs$lang$applyTo = function(arglist__10411) {
    var args__4900__auto__ = cljs.core.seq(arglist__10411);
    return polyline__delegate(args__4900__auto__);
  };
  polyline.cljs$core$IFn$_invoke$arity$variadic = polyline__delegate;
  return polyline;
}();
quiescent.dom.rect = function() {
  var rect__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7848_10412 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7849_10413 = null;
    var count__7850_10414 = 0;
    var i__7851_10415 = 0;
    while (true) {
      if (i__7851_10415 < count__7850_10414) {
        var arg__4902__auto___10416 = cljs.core._nth.call(null, chunk__7849_10413, i__7851_10415);
        a__4901__auto__.push(arg__4902__auto___10416);
        var G__10417 = seq__7848_10412;
        var G__10418 = chunk__7849_10413;
        var G__10419 = count__7850_10414;
        var G__10420 = i__7851_10415 + 1;
        seq__7848_10412 = G__10417;
        chunk__7849_10413 = G__10418;
        count__7850_10414 = G__10419;
        i__7851_10415 = G__10420;
        continue;
      } else {
        var temp__4126__auto___10421 = cljs.core.seq.call(null, seq__7848_10412);
        if (temp__4126__auto___10421) {
          var seq__7848_10422__$1 = temp__4126__auto___10421;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7848_10422__$1)) {
            var c__4229__auto___10423 = cljs.core.chunk_first.call(null, seq__7848_10422__$1);
            var G__10424 = cljs.core.chunk_rest.call(null, seq__7848_10422__$1);
            var G__10425 = c__4229__auto___10423;
            var G__10426 = cljs.core.count.call(null, c__4229__auto___10423);
            var G__10427 = 0;
            seq__7848_10412 = G__10424;
            chunk__7849_10413 = G__10425;
            count__7850_10414 = G__10426;
            i__7851_10415 = G__10427;
            continue;
          } else {
            var arg__4902__auto___10428 = cljs.core.first.call(null, seq__7848_10422__$1);
            a__4901__auto__.push(arg__4902__auto___10428);
            var G__10429 = cljs.core.next.call(null, seq__7848_10422__$1);
            var G__10430 = null;
            var G__10431 = 0;
            var G__10432 = 0;
            seq__7848_10412 = G__10429;
            chunk__7849_10413 = G__10430;
            count__7850_10414 = G__10431;
            i__7851_10415 = G__10432;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.rect.apply(null, a__4901__auto__);
  };
  var rect = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return rect__delegate.call(this, args__4900__auto__);
  };
  rect.cljs$lang$maxFixedArity = 0;
  rect.cljs$lang$applyTo = function(arglist__10433) {
    var args__4900__auto__ = cljs.core.seq(arglist__10433);
    return rect__delegate(args__4900__auto__);
  };
  rect.cljs$core$IFn$_invoke$arity$variadic = rect__delegate;
  return rect;
}();
quiescent.dom.svg = function() {
  var svg__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7856_10434 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7857_10435 = null;
    var count__7858_10436 = 0;
    var i__7859_10437 = 0;
    while (true) {
      if (i__7859_10437 < count__7858_10436) {
        var arg__4902__auto___10438 = cljs.core._nth.call(null, chunk__7857_10435, i__7859_10437);
        a__4901__auto__.push(arg__4902__auto___10438);
        var G__10439 = seq__7856_10434;
        var G__10440 = chunk__7857_10435;
        var G__10441 = count__7858_10436;
        var G__10442 = i__7859_10437 + 1;
        seq__7856_10434 = G__10439;
        chunk__7857_10435 = G__10440;
        count__7858_10436 = G__10441;
        i__7859_10437 = G__10442;
        continue;
      } else {
        var temp__4126__auto___10443 = cljs.core.seq.call(null, seq__7856_10434);
        if (temp__4126__auto___10443) {
          var seq__7856_10444__$1 = temp__4126__auto___10443;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7856_10444__$1)) {
            var c__4229__auto___10445 = cljs.core.chunk_first.call(null, seq__7856_10444__$1);
            var G__10446 = cljs.core.chunk_rest.call(null, seq__7856_10444__$1);
            var G__10447 = c__4229__auto___10445;
            var G__10448 = cljs.core.count.call(null, c__4229__auto___10445);
            var G__10449 = 0;
            seq__7856_10434 = G__10446;
            chunk__7857_10435 = G__10447;
            count__7858_10436 = G__10448;
            i__7859_10437 = G__10449;
            continue;
          } else {
            var arg__4902__auto___10450 = cljs.core.first.call(null, seq__7856_10444__$1);
            a__4901__auto__.push(arg__4902__auto___10450);
            var G__10451 = cljs.core.next.call(null, seq__7856_10444__$1);
            var G__10452 = null;
            var G__10453 = 0;
            var G__10454 = 0;
            seq__7856_10434 = G__10451;
            chunk__7857_10435 = G__10452;
            count__7858_10436 = G__10453;
            i__7859_10437 = G__10454;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.svg.apply(null, a__4901__auto__);
  };
  var svg = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return svg__delegate.call(this, args__4900__auto__);
  };
  svg.cljs$lang$maxFixedArity = 0;
  svg.cljs$lang$applyTo = function(arglist__10455) {
    var args__4900__auto__ = cljs.core.seq(arglist__10455);
    return svg__delegate(args__4900__auto__);
  };
  svg.cljs$core$IFn$_invoke$arity$variadic = svg__delegate;
  return svg;
}();
quiescent.dom.text = function() {
  var text__delegate = function(args__4900__auto__) {
    var a__4901__auto__ = [];
    a__4901__auto__.push(quiescent.js_props.call(null, cljs.core.first.call(null, args__4900__auto__)));
    var seq__7168_10456 = cljs.core.seq.call(null, cljs.core.rest.call(null, args__4900__auto__));
    var chunk__7169_10457 = null;
    var count__7170_10458 = 0;
    var i__7171_10459 = 0;
    while (true) {
      if (i__7171_10459 < count__7170_10458) {
        var arg__4902__auto___10460 = cljs.core._nth.call(null, chunk__7169_10457, i__7171_10459);
        a__4901__auto__.push(arg__4902__auto___10460);
        var G__10461 = seq__7168_10456;
        var G__10462 = chunk__7169_10457;
        var G__10463 = count__7170_10458;
        var G__10464 = i__7171_10459 + 1;
        seq__7168_10456 = G__10461;
        chunk__7169_10457 = G__10462;
        count__7170_10458 = G__10463;
        i__7171_10459 = G__10464;
        continue;
      } else {
        var temp__4126__auto___10465 = cljs.core.seq.call(null, seq__7168_10456);
        if (temp__4126__auto___10465) {
          var seq__7168_10466__$1 = temp__4126__auto___10465;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7168_10466__$1)) {
            var c__4229__auto___10467 = cljs.core.chunk_first.call(null, seq__7168_10466__$1);
            var G__10468 = cljs.core.chunk_rest.call(null, seq__7168_10466__$1);
            var G__10469 = c__4229__auto___10467;
            var G__10470 = cljs.core.count.call(null, c__4229__auto___10467);
            var G__10471 = 0;
            seq__7168_10456 = G__10468;
            chunk__7169_10457 = G__10469;
            count__7170_10458 = G__10470;
            i__7171_10459 = G__10471;
            continue;
          } else {
            var arg__4902__auto___10472 = cljs.core.first.call(null, seq__7168_10466__$1);
            a__4901__auto__.push(arg__4902__auto___10472);
            var G__10473 = cljs.core.next.call(null, seq__7168_10466__$1);
            var G__10474 = null;
            var G__10475 = 0;
            var G__10476 = 0;
            seq__7168_10456 = G__10473;
            chunk__7169_10457 = G__10474;
            count__7170_10458 = G__10475;
            i__7171_10459 = G__10476;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return React.DOM.text.apply(null, a__4901__auto__);
  };
  var text = function(var_args) {
    var args__4900__auto__ = null;
    if (arguments.length > 0) {
      args__4900__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return text__delegate.call(this, args__4900__auto__);
  };
  text.cljs$lang$maxFixedArity = 0;
  text.cljs$lang$applyTo = function(arglist__10477) {
    var args__4900__auto__ = cljs.core.seq(arglist__10477);
    return text__delegate(args__4900__auto__);
  };
  text.cljs$core$IFn$_invoke$arity$variadic = text__delegate;
  return text;
}();
quiescent.dom.defined_tags = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "thead", "thead", 1124231110), new cljs.core.Keyword(null, "path", "path", 1017337751), new cljs.core.Keyword(null, "del", "del", 1014003581), new cljs.core.Keyword(null, "fieldset", "fieldset", 4379882650), new cljs.core.Keyword(null, "q", "q", 1013904355), new cljs.core.Keyword(null, "figure", "figure", 4034231894), new cljs.core.Keyword(null, "aside", "aside", 1107015850), new cljs.core.Keyword(null, 
"figcaption", "figcaption", 1313617108), new cljs.core.Keyword(null, "video", "video", 1126107117), new cljs.core.Keyword(null, "address", "address", 4161179494), new cljs.core.Keyword(null, "caption", "caption", 1566477656), new cljs.core.Keyword(null, "bdi", "bdi", 1014001625), new cljs.core.Keyword(null, "rp", "rp", 1013907888), new cljs.core.Keyword(null, "hr", "hr", 1013907580), new cljs.core.Keyword(null, "dd", "dd", 1013907442), new cljs.core.Keyword(null, "meta", "meta", 1017252215), new cljs.core.Keyword(null, 
"tbody", "tbody", 1124062088), new cljs.core.Keyword(null, "table", "table", 1124020032), new cljs.core.Keyword(null, "ul", "ul", 1013907977), new cljs.core.Keyword(null, "pre", "pre", 1014015509), new cljs.core.Keyword(null, "sup", "sup", 1014018496), new cljs.core.Keyword(null, "script", "script", 4401185853), new cljs.core.Keyword(null, "big", "big", 1014001778), new cljs.core.Keyword(null, "button", "button", 3931183780), new cljs.core.Keyword(null, "dfn", "dfn", 1014003614), new cljs.core.Keyword(null, 
"sub", "sub", 1014018482), new cljs.core.Keyword(null, "mark", "mark", 1017248319), new cljs.core.Keyword(null, "wbr", "wbr", 1014021753), new cljs.core.Keyword(null, "strong", "strong", 4416891401), new cljs.core.Keyword(null, "td", "td", 1013907938), new cljs.core.Keyword(null, "li", "li", 1013907695), new cljs.core.Keyword(null, "dt", "dt", 1013907458), new cljs.core.Keyword(null, "section", "section", 2984145495), new cljs.core.Keyword(null, "th", "th", 1013907942), new cljs.core.Keyword(null, 
"time", "time", 1017464383), new cljs.core.Keyword(null, "optgroup", "optgroup", 933131038), new cljs.core.Keyword(null, "iframe", "iframe", 4117657110), new cljs.core.Keyword(null, "tr", "tr", 1013907952), new cljs.core.Keyword(null, "circle", "circle", 3948654658), new cljs.core.Keyword(null, "article", "article", 4576493672), new cljs.core.Keyword(null, "legend", "legend", 4202297215), new cljs.core.Keyword(null, "em", "em", 1013907482), new cljs.core.Keyword(null, "kbd", "kbd", 1014010207), new cljs.core.Keyword(null, 
"abbr", "abbr", 1016891299), new cljs.core.Keyword(null, "source", "source", 4412365709), new cljs.core.Keyword(null, "output", "output", 4303359091), new cljs.core.Keyword(null, "ins", "ins", 1014008672), new cljs.core.Keyword(null, "footer", "footer", 4040009997), new cljs.core.Keyword(null, "header", "header", 4087600639), new cljs.core.Keyword(null, "datalist", "datalist", 2803674810), new cljs.core.Keyword(null, "tfoot", "tfoot", 1124181588), new cljs.core.Keyword(null, "s", "s", 1013904357), 
new cljs.core.Keyword(null, "h5", "h5", 1013907519), new cljs.core.Keyword(null, "canvas", "canvas", 3941165258), new cljs.core.Keyword(null, "param", "param", 1120340991), new cljs.core.Keyword(null, "title", "title", 1124275658), new cljs.core.Keyword(null, "small", "small", 1123453049), new cljs.core.Keyword(null, "style", "style", 1123684643), new cljs.core.Keyword(null, "textarea", "textarea", 4305627820), new cljs.core.Keyword(null, "div", "div", 1014003715), new cljs.core.Keyword(null, "option", 
"option", 4298734567), new cljs.core.Keyword(null, "summary", "summary", 3451231E3), new cljs.core.Keyword(null, "samp", "samp", 1017426915), new cljs.core.Keyword(null, "h4", "h4", 1013907518), new cljs.core.Keyword(null, "head", "head", 1017102674), new cljs.core.Keyword(null, "g", "g", 1013904345), new cljs.core.Keyword(null, "ol", "ol", 1013907791), new cljs.core.Keyword(null, "details", "details", 2571625908), new cljs.core.Keyword(null, "line", "line", 1017226086), new cljs.core.Keyword(null, 
"var", "var", 1014020761), new cljs.core.Keyword(null, "h6", "h6", 1013907520), new cljs.core.Keyword(null, "link", "link", 1017226092), new cljs.core.Keyword(null, "col", "col", 1014002930), new cljs.core.Keyword(null, "label", "label", 1116631654), new cljs.core.Keyword(null, "rt", "rt", 1013907892), new cljs.core.Keyword(null, "colgroup", "colgroup", 4672673905), new cljs.core.Keyword(null, "meter", "meter", 1117691643), new cljs.core.Keyword(null, "svg", "svg", 1014018518), new cljs.core.Keyword(null, 
"code", "code", 1016963423), new cljs.core.Keyword(null, "bdo", "bdo", 1014001631), new cljs.core.Keyword(null, "b", "b", 1013904340), new cljs.core.Keyword(null, "noscript", "noscript", 2565455166), new cljs.core.Keyword(null, "h2", "h2", 1013907516), new cljs.core.Keyword(null, "area", "area", 1016906751), new cljs.core.Keyword(null, "br", "br", 1013907394), new cljs.core.Keyword(null, "form", "form", 1017053238), new cljs.core.Keyword(null, "audio", "audio", 1107070792), new cljs.core.Keyword(null, 
"input", "input", 1114262332), new cljs.core.Keyword(null, "menuitem", "menuitem", 4705729636), new cljs.core.Keyword(null, "base", "base", 1016920643), new cljs.core.Keyword(null, "h1", "h1", 1013907515), new cljs.core.Keyword(null, "progress", "progress", 4307793311), new cljs.core.Keyword(null, "main", "main", 1017248043), new cljs.core.Keyword(null, "embed", "embed", 1110524491), new cljs.core.Keyword(null, "h3", "h3", 1013907517), new cljs.core.Keyword(null, "body", "body", 1016933652), new cljs.core.Keyword(null, 
"keygen", "keygen", 4174205955), new cljs.core.Keyword(null, "polyline", "polyline", 1575843122), new cljs.core.Keyword(null, "cite", "cite", 1016958153), new cljs.core.Keyword(null, "rect", "rect", 1017400662), new cljs.core.Keyword(null, "p", "p", 1013904354), new cljs.core.Keyword(null, "nav", "nav", 1014013077), new cljs.core.Keyword(null, "ruby", "ruby", 1017416012), new cljs.core.Keyword(null, "map", "map", 1014012110), new cljs.core.Keyword(null, "object", "object", 4285503153), new cljs.core.Keyword(null, 
"i", "i", 1013904347), new cljs.core.Keyword(null, "menu", "menu", 1017252049), new cljs.core.Keyword(null, "blockquote", "blockquote", 2317106561), new cljs.core.Keyword(null, "img", "img", 1014008629), new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.Keyword(null, "dl", "dl", 1013907450), new cljs.core.Keyword(null, "select", "select", 4402849902), new cljs.core.Keyword(null, "polygon", "polygon", 616384684), new cljs.core.Keyword(null, "html", "html", 1017117469), new cljs.core.Keyword(null, 
"text", "text", 1017460895), new cljs.core.Keyword(null, "span", "span", 1017440956), new cljs.core.Keyword(null, "track", "track", 1124525245), new cljs.core.Keyword(null, "data", "data", 1016980252), new cljs.core.Keyword(null, "u", "u", 1013904359)], [quiescent.dom.thead, quiescent.dom.path, quiescent.dom.del, quiescent.dom.fieldset, quiescent.dom.q, quiescent.dom.figure, quiescent.dom.aside, quiescent.dom.figcaption, quiescent.dom.video, quiescent.dom.address, quiescent.dom.caption, quiescent.dom.bdi, 
quiescent.dom.rp, quiescent.dom.hr, quiescent.dom.dd, quiescent.dom.meta, quiescent.dom.tbody, quiescent.dom.table, quiescent.dom.ul, quiescent.dom.pre, quiescent.dom.sup, quiescent.dom.script, quiescent.dom.big, quiescent.dom.button, quiescent.dom.dfn, quiescent.dom.sub, quiescent.dom.mark, quiescent.dom.wbr, quiescent.dom.strong, quiescent.dom.td, quiescent.dom.li, quiescent.dom.dt, quiescent.dom.section, quiescent.dom.th, quiescent.dom.time, quiescent.dom.optgroup, quiescent.dom.iframe, quiescent.dom.tr, 
quiescent.dom.circle, quiescent.dom.article, quiescent.dom.legend, quiescent.dom.em, quiescent.dom.kbd, quiescent.dom.abbr, quiescent.dom.source, quiescent.dom.output, quiescent.dom.ins, quiescent.dom.footer, quiescent.dom.header, quiescent.dom.datalist, quiescent.dom.tfoot, quiescent.dom.s, quiescent.dom.h5, quiescent.dom.canvas, quiescent.dom.param, quiescent.dom.title, quiescent.dom.small, quiescent.dom.style, quiescent.dom.textarea, quiescent.dom.div, quiescent.dom.option, quiescent.dom.summary, 
quiescent.dom.samp, quiescent.dom.h4, quiescent.dom.head, quiescent.dom.g, quiescent.dom.ol, quiescent.dom.details, quiescent.dom.line, quiescent.dom.var$, quiescent.dom.h6, quiescent.dom.link, quiescent.dom.col, quiescent.dom.label, quiescent.dom.rt, quiescent.dom.colgroup, quiescent.dom.meter, quiescent.dom.svg, quiescent.dom.code, quiescent.dom.bdo, quiescent.dom.b, quiescent.dom.noscript, quiescent.dom.h2, quiescent.dom.area, quiescent.dom.br, quiescent.dom.form, quiescent.dom.audio, quiescent.dom.input, 
quiescent.dom.menuitem, quiescent.dom.base, quiescent.dom.h1, quiescent.dom.progress, quiescent.dom.main, quiescent.dom.embed, quiescent.dom.h3, quiescent.dom.body, quiescent.dom.keygen, quiescent.dom.polyline, quiescent.dom.cite, quiescent.dom.rect, quiescent.dom.p, quiescent.dom.nav, quiescent.dom.ruby, quiescent.dom.map, quiescent.dom.object, quiescent.dom.i, quiescent.dom.menu, quiescent.dom.blockquote, quiescent.dom.img, quiescent.dom.a, quiescent.dom.dl, quiescent.dom.select, quiescent.dom.polygon, 
quiescent.dom.html, quiescent.dom.text, quiescent.dom.span, quiescent.dom.track, quiescent.dom.data, quiescent.dom.u]);
goog.provide("wishare.friends");
goog.require("cljs.core");
goog.provide("wishare.core");
goog.require("cljs.core");
goog.require("wishare.friends");
goog.require("wishare.friends");
goog.require("wishare.wishlist");
goog.require("wishare.wishlist");
goog.require("quiescent.dom");
goog.require("quiescent.dom");
goog.require("quiescent");
goog.require("quiescent");
